{"ast":null,"code":"// imported from ncp (this is temporary, will rewrite)\n\nvar fs = require('graceful-fs');\nvar path = require('path');\nvar utimes = require('../util/utimes');\nfunction ncp(source, dest, options, callback) {\n  if (!callback) {\n    callback = options;\n    options = {};\n  }\n  var basePath = process.cwd();\n  var currentPath = path.resolve(basePath, source);\n  var targetPath = path.resolve(basePath, dest);\n  var filter = options.filter;\n  var transform = options.transform;\n  var overwrite = options.overwrite;\n  // If overwrite is undefined, use clobber, otherwise default to true:\n  if (overwrite === undefined) overwrite = options.clobber;\n  if (overwrite === undefined) overwrite = true;\n  var errorOnExist = options.errorOnExist;\n  var dereference = options.dereference;\n  var preserveTimestamps = options.preserveTimestamps === true;\n  var started = 0;\n  var finished = 0;\n  var running = 0;\n  var errored = false;\n  startCopy(currentPath);\n  function startCopy(source) {\n    started++;\n    if (filter) {\n      if (filter instanceof RegExp) {\n        console.warn('Warning: fs-extra: Passing a RegExp filter is deprecated, use a function');\n        if (!filter.test(source)) {\n          return doneOne(true);\n        }\n      } else if (typeof filter === 'function') {\n        if (!filter(source, dest)) {\n          return doneOne(true);\n        }\n      }\n    }\n    return getStats(source);\n  }\n  function getStats(source) {\n    var stat = dereference ? fs.stat : fs.lstat;\n    running++;\n    stat(source, function (err, stats) {\n      if (err) return onError(err);\n\n      // We need to get the mode from the stats object and preserve it.\n      var item = {\n        name: source,\n        mode: stats.mode,\n        mtime: stats.mtime,\n        // modified time\n        atime: stats.atime,\n        // access time\n        stats: stats // temporary\n      };\n\n      if (stats.isDirectory()) {\n        return onDir(item);\n      } else if (stats.isFile() || stats.isCharacterDevice() || stats.isBlockDevice()) {\n        return onFile(item);\n      } else if (stats.isSymbolicLink()) {\n        // Symlinks don't really need to know about the mode.\n        return onLink(source);\n      }\n    });\n  }\n  function onFile(file) {\n    var target = file.name.replace(currentPath, targetPath.replace('$', '$$$$')); // escapes '$' with '$$'\n    isWritable(target, function (writable) {\n      if (writable) {\n        copyFile(file, target);\n      } else {\n        if (overwrite) {\n          rmFile(target, function () {\n            copyFile(file, target);\n          });\n        } else if (errorOnExist) {\n          onError(new Error(target + ' already exists'));\n        } else {\n          doneOne();\n        }\n      }\n    });\n  }\n  function copyFile(file, target) {\n    var readStream = fs.createReadStream(file.name);\n    var writeStream = fs.createWriteStream(target, {\n      mode: file.mode\n    });\n    readStream.on('error', onError);\n    writeStream.on('error', onError);\n    if (transform) {\n      transform(readStream, writeStream, file);\n    } else {\n      writeStream.on('open', function () {\n        readStream.pipe(writeStream);\n      });\n    }\n    writeStream.once('close', function () {\n      fs.chmod(target, file.mode, function (err) {\n        if (err) return onError(err);\n        if (preserveTimestamps) {\n          utimes.utimesMillis(target, file.atime, file.mtime, function (err) {\n            if (err) return onError(err);\n            return doneOne();\n          });\n        } else {\n          doneOne();\n        }\n      });\n    });\n  }\n  function rmFile(file, done) {\n    fs.unlink(file, function (err) {\n      if (err) return onError(err);\n      return done();\n    });\n  }\n  function onDir(dir) {\n    var target = dir.name.replace(currentPath, targetPath.replace('$', '$$$$')); // escapes '$' with '$$'\n    isWritable(target, function (writable) {\n      if (writable) {\n        return mkDir(dir, target);\n      }\n      copyDir(dir.name);\n    });\n  }\n  function mkDir(dir, target) {\n    fs.mkdir(target, dir.mode, function (err) {\n      if (err) return onError(err);\n      // despite setting mode in fs.mkdir, doesn't seem to work\n      // so we set it here.\n      fs.chmod(target, dir.mode, function (err) {\n        if (err) return onError(err);\n        copyDir(dir.name);\n      });\n    });\n  }\n  function copyDir(dir) {\n    fs.readdir(dir, function (err, items) {\n      if (err) return onError(err);\n      items.forEach(function (item) {\n        startCopy(path.join(dir, item));\n      });\n      return doneOne();\n    });\n  }\n  function onLink(link) {\n    var target = link.replace(currentPath, targetPath);\n    fs.readlink(link, function (err, resolvedPath) {\n      if (err) return onError(err);\n      checkLink(resolvedPath, target);\n    });\n  }\n  function checkLink(resolvedPath, target) {\n    if (dereference) {\n      resolvedPath = path.resolve(basePath, resolvedPath);\n    }\n    isWritable(target, function (writable) {\n      if (writable) {\n        return makeLink(resolvedPath, target);\n      }\n      fs.readlink(target, function (err, targetDest) {\n        if (err) return onError(err);\n        if (dereference) {\n          targetDest = path.resolve(basePath, targetDest);\n        }\n        if (targetDest === resolvedPath) {\n          return doneOne();\n        }\n        return rmFile(target, function () {\n          makeLink(resolvedPath, target);\n        });\n      });\n    });\n  }\n  function makeLink(linkPath, target) {\n    fs.symlink(linkPath, target, function (err) {\n      if (err) return onError(err);\n      return doneOne();\n    });\n  }\n  function isWritable(path, done) {\n    fs.lstat(path, function (err) {\n      if (err) {\n        if (err.code === 'ENOENT') return done(true);\n        return done(false);\n      }\n      return done(false);\n    });\n  }\n  function onError(err) {\n    // ensure callback is defined & called only once:\n    if (!errored && callback !== undefined) {\n      errored = true;\n      return callback(err);\n    }\n  }\n  function doneOne(skipped) {\n    if (!skipped) running--;\n    finished++;\n    if (started === finished && running === 0) {\n      if (callback !== undefined) {\n        return callback(null);\n      }\n    }\n  }\n}\nmodule.exports = ncp;","map":{"version":3,"names":["fs","require","path","utimes","ncp","source","dest","options","callback","basePath","process","cwd","currentPath","resolve","targetPath","filter","transform","overwrite","undefined","clobber","errorOnExist","dereference","preserveTimestamps","started","finished","running","errored","startCopy","RegExp","console","warn","test","doneOne","getStats","stat","lstat","err","stats","onError","item","name","mode","mtime","atime","isDirectory","onDir","isFile","isCharacterDevice","isBlockDevice","onFile","isSymbolicLink","onLink","file","target","replace","isWritable","writable","copyFile","rmFile","Error","readStream","createReadStream","writeStream","createWriteStream","on","pipe","once","chmod","utimesMillis","done","unlink","dir","mkDir","copyDir","mkdir","readdir","items","forEach","join","link","readlink","resolvedPath","checkLink","makeLink","targetDest","linkPath","symlink","code","skipped","module","exports"],"sources":["/home/user/Рабочий стол/pizza/project/node_modules/fs-extra/lib/copy/ncp.js"],"sourcesContent":["// imported from ncp (this is temporary, will rewrite)\n\nvar fs = require('graceful-fs')\nvar path = require('path')\nvar utimes = require('../util/utimes')\n\nfunction ncp (source, dest, options, callback) {\n  if (!callback) {\n    callback = options\n    options = {}\n  }\n\n  var basePath = process.cwd()\n  var currentPath = path.resolve(basePath, source)\n  var targetPath = path.resolve(basePath, dest)\n\n  var filter = options.filter\n  var transform = options.transform\n  var overwrite = options.overwrite\n  // If overwrite is undefined, use clobber, otherwise default to true:\n  if (overwrite === undefined) overwrite = options.clobber\n  if (overwrite === undefined) overwrite = true\n  var errorOnExist = options.errorOnExist\n  var dereference = options.dereference\n  var preserveTimestamps = options.preserveTimestamps === true\n\n  var started = 0\n  var finished = 0\n  var running = 0\n\n  var errored = false\n\n  startCopy(currentPath)\n\n  function startCopy (source) {\n    started++\n    if (filter) {\n      if (filter instanceof RegExp) {\n        console.warn('Warning: fs-extra: Passing a RegExp filter is deprecated, use a function')\n        if (!filter.test(source)) {\n          return doneOne(true)\n        }\n      } else if (typeof filter === 'function') {\n        if (!filter(source, dest)) {\n          return doneOne(true)\n        }\n      }\n    }\n    return getStats(source)\n  }\n\n  function getStats (source) {\n    var stat = dereference ? fs.stat : fs.lstat\n    running++\n    stat(source, function (err, stats) {\n      if (err) return onError(err)\n\n      // We need to get the mode from the stats object and preserve it.\n      var item = {\n        name: source,\n        mode: stats.mode,\n        mtime: stats.mtime, // modified time\n        atime: stats.atime, // access time\n        stats: stats // temporary\n      }\n\n      if (stats.isDirectory()) {\n        return onDir(item)\n      } else if (stats.isFile() || stats.isCharacterDevice() || stats.isBlockDevice()) {\n        return onFile(item)\n      } else if (stats.isSymbolicLink()) {\n        // Symlinks don't really need to know about the mode.\n        return onLink(source)\n      }\n    })\n  }\n\n  function onFile (file) {\n    var target = file.name.replace(currentPath, targetPath.replace('$', '$$$$')) // escapes '$' with '$$'\n    isWritable(target, function (writable) {\n      if (writable) {\n        copyFile(file, target)\n      } else {\n        if (overwrite) {\n          rmFile(target, function () {\n            copyFile(file, target)\n          })\n        } else if (errorOnExist) {\n          onError(new Error(target + ' already exists'))\n        } else {\n          doneOne()\n        }\n      }\n    })\n  }\n\n  function copyFile (file, target) {\n    var readStream = fs.createReadStream(file.name)\n    var writeStream = fs.createWriteStream(target, { mode: file.mode })\n\n    readStream.on('error', onError)\n    writeStream.on('error', onError)\n\n    if (transform) {\n      transform(readStream, writeStream, file)\n    } else {\n      writeStream.on('open', function () {\n        readStream.pipe(writeStream)\n      })\n    }\n\n    writeStream.once('close', function () {\n      fs.chmod(target, file.mode, function (err) {\n        if (err) return onError(err)\n        if (preserveTimestamps) {\n          utimes.utimesMillis(target, file.atime, file.mtime, function (err) {\n            if (err) return onError(err)\n            return doneOne()\n          })\n        } else {\n          doneOne()\n        }\n      })\n    })\n  }\n\n  function rmFile (file, done) {\n    fs.unlink(file, function (err) {\n      if (err) return onError(err)\n      return done()\n    })\n  }\n\n  function onDir (dir) {\n    var target = dir.name.replace(currentPath, targetPath.replace('$', '$$$$')) // escapes '$' with '$$'\n    isWritable(target, function (writable) {\n      if (writable) {\n        return mkDir(dir, target)\n      }\n      copyDir(dir.name)\n    })\n  }\n\n  function mkDir (dir, target) {\n    fs.mkdir(target, dir.mode, function (err) {\n      if (err) return onError(err)\n      // despite setting mode in fs.mkdir, doesn't seem to work\n      // so we set it here.\n      fs.chmod(target, dir.mode, function (err) {\n        if (err) return onError(err)\n        copyDir(dir.name)\n      })\n    })\n  }\n\n  function copyDir (dir) {\n    fs.readdir(dir, function (err, items) {\n      if (err) return onError(err)\n      items.forEach(function (item) {\n        startCopy(path.join(dir, item))\n      })\n      return doneOne()\n    })\n  }\n\n  function onLink (link) {\n    var target = link.replace(currentPath, targetPath)\n    fs.readlink(link, function (err, resolvedPath) {\n      if (err) return onError(err)\n      checkLink(resolvedPath, target)\n    })\n  }\n\n  function checkLink (resolvedPath, target) {\n    if (dereference) {\n      resolvedPath = path.resolve(basePath, resolvedPath)\n    }\n    isWritable(target, function (writable) {\n      if (writable) {\n        return makeLink(resolvedPath, target)\n      }\n      fs.readlink(target, function (err, targetDest) {\n        if (err) return onError(err)\n\n        if (dereference) {\n          targetDest = path.resolve(basePath, targetDest)\n        }\n        if (targetDest === resolvedPath) {\n          return doneOne()\n        }\n        return rmFile(target, function () {\n          makeLink(resolvedPath, target)\n        })\n      })\n    })\n  }\n\n  function makeLink (linkPath, target) {\n    fs.symlink(linkPath, target, function (err) {\n      if (err) return onError(err)\n      return doneOne()\n    })\n  }\n\n  function isWritable (path, done) {\n    fs.lstat(path, function (err) {\n      if (err) {\n        if (err.code === 'ENOENT') return done(true)\n        return done(false)\n      }\n      return done(false)\n    })\n  }\n\n  function onError (err) {\n    // ensure callback is defined & called only once:\n    if (!errored && callback !== undefined) {\n      errored = true\n      return callback(err)\n    }\n  }\n\n  function doneOne (skipped) {\n    if (!skipped) running--\n    finished++\n    if ((started === finished) && (running === 0)) {\n      if (callback !== undefined) {\n        return callback(null)\n      }\n    }\n  }\n}\n\nmodule.exports = ncp\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}