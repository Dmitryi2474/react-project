{"ast":null,"code":"// Do not edit the parser directly. This is a generated file created using a build script and the PEG grammar.\nmodule.exports = function () {\n  /*\n   * Generated by PEG.js 0.8.0.\n   *\n   * http://pegjs.majda.cz/\n   */\n\n  function peg$subclass(child, parent) {\n    function ctor() {\n      this.constructor = child;\n    }\n    ctor.prototype = parent.prototype;\n    child.prototype = new ctor();\n  }\n  function SyntaxError(message, expected, found, offset, line, column) {\n    this.message = message;\n    this.expected = expected;\n    this.found = found;\n    this.offset = offset;\n    this.line = line;\n    this.column = column;\n    this.name = \"SyntaxError\";\n  }\n  peg$subclass(SyntaxError, Error);\n  function parse(input) {\n    var options = arguments.length > 1 ? arguments[1] : {},\n      peg$FAILED = {},\n      peg$startRuleFunctions = {\n        start: peg$parsestart\n      },\n      peg$startRuleFunction = peg$parsestart,\n      peg$c0 = [],\n      peg$c1 = {\n        type: \"other\",\n        description: \"buffer\"\n      },\n      peg$c2 = peg$FAILED,\n      peg$c3 = function (e, w) {\n        return {\n          \"buffer\": e + w.join('')\n        };\n      },\n      peg$c4 = void 0,\n      peg$c5 = function (c) {\n        return c;\n      },\n      peg$c6 = function (b) {\n        return {\n          \"buffer\": b.join('')\n        };\n      },\n      peg$c7 = \":\",\n      peg$c8 = {\n        type: \"literal\",\n        value: \":\",\n        description: \"\\\":\\\"\"\n      },\n      peg$c9 = function (c) {\n        return c;\n      },\n      peg$c10 = function (c, e) {\n        return {\n          color: c,\n          text: e.join('')\n        };\n      },\n      peg$c11 = {\n        type: \"any\",\n        description: \"any character\"\n      },\n      peg$c12 = function (a) {\n        return a;\n      },\n      peg$c13 = \"{\",\n      peg$c14 = {\n        type: \"literal\",\n        value: \"{\",\n        description: \"\\\"{\\\"\"\n      },\n      peg$c15 = function (out) {\n        return out;\n      },\n      peg$c16 = \"}\",\n      peg$c17 = {\n        type: \"literal\",\n        value: \"}\",\n        description: \"\\\"}\\\"\"\n      },\n      peg$c18 = \"\\\\\",\n      peg$c19 = {\n        type: \"literal\",\n        value: \"\\\\\",\n        description: \"\\\"\\\\\\\\\\\"\"\n      },\n      peg$c20 = /^[a-zA-Z.]/,\n      peg$c21 = {\n        type: \"class\",\n        value: \"[a-zA-Z.]\",\n        description: \"[a-zA-Z.]\"\n      },\n      peg$c22 = function (c) {\n        return c.join('');\n      },\n      peg$c23 = null,\n      peg$c24 = function (r, e) {\n        return {\n          reset: true,\n          text: e ? e.join('') : ''\n        };\n      },\n      peg$c25 = function (after) {\n        return after;\n      },\n      peg$c26 = \"\\n\",\n      peg$c27 = {\n        type: \"literal\",\n        value: \"\\n\",\n        description: \"\\\"\\\\n\\\"\"\n      },\n      peg$c28 = \"\\r\\n\",\n      peg$c29 = {\n        type: \"literal\",\n        value: \"\\r\\n\",\n        description: \"\\\"\\\\r\\\\n\\\"\"\n      },\n      peg$c30 = \"\\r\",\n      peg$c31 = {\n        type: \"literal\",\n        value: \"\\r\",\n        description: \"\\\"\\\\r\\\"\"\n      },\n      peg$c32 = \"\\u2028\",\n      peg$c33 = {\n        type: \"literal\",\n        value: \"\\u2028\",\n        description: \"\\\"\\\\u2028\\\"\"\n      },\n      peg$c34 = \"\\u2029\",\n      peg$c35 = {\n        type: \"literal\",\n        value: \"\\u2029\",\n        description: \"\\\"\\\\u2029\\\"\"\n      },\n      peg$c36 = /^[\\t\\x0B\\f \\xA0\\uFEFF]/,\n      peg$c37 = {\n        type: \"class\",\n        value: \"[\\\\t\\\\x0B\\\\f \\\\xA0\\\\uFEFF]\",\n        description: \"[\\\\t\\\\x0B\\\\f \\\\xA0\\\\uFEFF]\"\n      },\n      peg$currPos = 0,\n      peg$reportedPos = 0,\n      peg$cachedPos = 0,\n      peg$cachedPosDetails = {\n        line: 1,\n        column: 1,\n        seenCR: false\n      },\n      peg$maxFailPos = 0,\n      peg$maxFailExpected = [],\n      peg$silentFails = 0,\n      peg$result;\n    if (\"startRule\" in options) {\n      if (!(options.startRule in peg$startRuleFunctions)) {\n        throw new Error(\"Can't start parsing from rule \\\"\" + options.startRule + \"\\\".\");\n      }\n      peg$startRuleFunction = peg$startRuleFunctions[options.startRule];\n    }\n    function text() {\n      return input.substring(peg$reportedPos, peg$currPos);\n    }\n    function offset() {\n      return peg$reportedPos;\n    }\n    function line() {\n      return peg$computePosDetails(peg$reportedPos).line;\n    }\n    function column() {\n      return peg$computePosDetails(peg$reportedPos).column;\n    }\n    function expected(description) {\n      throw peg$buildException(null, [{\n        type: \"other\",\n        description: description\n      }], peg$reportedPos);\n    }\n    function error(message) {\n      throw peg$buildException(message, null, peg$reportedPos);\n    }\n    function peg$computePosDetails(pos) {\n      function advance(details, startPos, endPos) {\n        var p, ch;\n        for (p = startPos; p < endPos; p++) {\n          ch = input.charAt(p);\n          if (ch === \"\\n\") {\n            if (!details.seenCR) {\n              details.line++;\n            }\n            details.column = 1;\n            details.seenCR = false;\n          } else if (ch === \"\\r\" || ch === \"\\u2028\" || ch === \"\\u2029\") {\n            details.line++;\n            details.column = 1;\n            details.seenCR = true;\n          } else {\n            details.column++;\n            details.seenCR = false;\n          }\n        }\n      }\n      if (peg$cachedPos !== pos) {\n        if (peg$cachedPos > pos) {\n          peg$cachedPos = 0;\n          peg$cachedPosDetails = {\n            line: 1,\n            column: 1,\n            seenCR: false\n          };\n        }\n        advance(peg$cachedPosDetails, peg$cachedPos, pos);\n        peg$cachedPos = pos;\n      }\n      return peg$cachedPosDetails;\n    }\n    function peg$fail(expected) {\n      if (peg$currPos < peg$maxFailPos) {\n        return;\n      }\n      if (peg$currPos > peg$maxFailPos) {\n        peg$maxFailPos = peg$currPos;\n        peg$maxFailExpected = [];\n      }\n      peg$maxFailExpected.push(expected);\n    }\n    function peg$buildException(message, expected, pos) {\n      function cleanupExpected(expected) {\n        var i = 1;\n        expected.sort(function (a, b) {\n          if (a.description < b.description) {\n            return -1;\n          } else if (a.description > b.description) {\n            return 1;\n          } else {\n            return 0;\n          }\n        });\n        while (i < expected.length) {\n          if (expected[i - 1] === expected[i]) {\n            expected.splice(i, 1);\n          } else {\n            i++;\n          }\n        }\n      }\n      function buildMessage(expected, found) {\n        function stringEscape(s) {\n          function hex(ch) {\n            return ch.charCodeAt(0).toString(16).toUpperCase();\n          }\n          return s.replace(/\\\\/g, '\\\\\\\\').replace(/\"/g, '\\\\\"').replace(/\\x08/g, '\\\\b').replace(/\\t/g, '\\\\t').replace(/\\n/g, '\\\\n').replace(/\\f/g, '\\\\f').replace(/\\r/g, '\\\\r').replace(/[\\x00-\\x07\\x0B\\x0E\\x0F]/g, function (ch) {\n            return '\\\\x0' + hex(ch);\n          }).replace(/[\\x10-\\x1F\\x80-\\xFF]/g, function (ch) {\n            return '\\\\x' + hex(ch);\n          }).replace(/[\\u0180-\\u0FFF]/g, function (ch) {\n            return '\\\\u0' + hex(ch);\n          }).replace(/[\\u1080-\\uFFFF]/g, function (ch) {\n            return '\\\\u' + hex(ch);\n          });\n        }\n        var expectedDescs = new Array(expected.length),\n          expectedDesc,\n          foundDesc,\n          i;\n        for (i = 0; i < expected.length; i++) {\n          expectedDescs[i] = expected[i].description;\n        }\n        expectedDesc = expected.length > 1 ? expectedDescs.slice(0, -1).join(\", \") + \" or \" + expectedDescs[expected.length - 1] : expectedDescs[0];\n        foundDesc = found ? \"\\\"\" + stringEscape(found) + \"\\\"\" : \"end of input\";\n        return \"Expected \" + expectedDesc + \" but \" + foundDesc + \" found.\";\n      }\n      var posDetails = peg$computePosDetails(pos),\n        found = pos < input.length ? input.charAt(pos) : null;\n      if (expected !== null) {\n        cleanupExpected(expected);\n      }\n      return new SyntaxError(message !== null ? message : buildMessage(expected, found), expected, found, pos, posDetails.line, posDetails.column);\n    }\n    function peg$parsestart() {\n      var s0;\n      s0 = peg$parsebody();\n      return s0;\n    }\n    function peg$parsebody() {\n      var s0, s1;\n      s0 = [];\n      s1 = peg$parseitem();\n      while (s1 !== peg$FAILED) {\n        s0.push(s1);\n        s1 = peg$parseitem();\n      }\n      return s0;\n    }\n    function peg$parseitem() {\n      var s0;\n      s0 = peg$parsetag();\n      if (s0 === peg$FAILED) {\n        s0 = peg$parsebuffer();\n        if (s0 === peg$FAILED) {\n          s0 = peg$parsereset();\n        }\n      }\n      return s0;\n    }\n    function peg$parsebuffer() {\n      var s0, s1, s2, s3, s4, s5;\n      peg$silentFails++;\n      s0 = peg$currPos;\n      s1 = peg$parseeol();\n      if (s1 !== peg$FAILED) {\n        s2 = [];\n        s3 = peg$parsews();\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n          s3 = peg$parsews();\n        }\n        if (s2 !== peg$FAILED) {\n          peg$reportedPos = s0;\n          s1 = peg$c3(s1, s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c2;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c2;\n      }\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        s1 = [];\n        s2 = peg$currPos;\n        s3 = peg$currPos;\n        peg$silentFails++;\n        s4 = peg$parsetag();\n        peg$silentFails--;\n        if (s4 === peg$FAILED) {\n          s3 = peg$c4;\n        } else {\n          peg$currPos = s3;\n          s3 = peg$c2;\n        }\n        if (s3 !== peg$FAILED) {\n          s4 = peg$currPos;\n          peg$silentFails++;\n          s5 = peg$parsereset();\n          peg$silentFails--;\n          if (s5 === peg$FAILED) {\n            s4 = peg$c4;\n          } else {\n            peg$currPos = s4;\n            s4 = peg$c2;\n          }\n          if (s4 !== peg$FAILED) {\n            s5 = peg$parseany();\n            if (s5 !== peg$FAILED) {\n              peg$reportedPos = s2;\n              s3 = peg$c5(s5);\n              s2 = s3;\n            } else {\n              peg$currPos = s2;\n              s2 = peg$c2;\n            }\n          } else {\n            peg$currPos = s2;\n            s2 = peg$c2;\n          }\n        } else {\n          peg$currPos = s2;\n          s2 = peg$c2;\n        }\n        if (s2 !== peg$FAILED) {\n          while (s2 !== peg$FAILED) {\n            s1.push(s2);\n            s2 = peg$currPos;\n            s3 = peg$currPos;\n            peg$silentFails++;\n            s4 = peg$parsetag();\n            peg$silentFails--;\n            if (s4 === peg$FAILED) {\n              s3 = peg$c4;\n            } else {\n              peg$currPos = s3;\n              s3 = peg$c2;\n            }\n            if (s3 !== peg$FAILED) {\n              s4 = peg$currPos;\n              peg$silentFails++;\n              s5 = peg$parsereset();\n              peg$silentFails--;\n              if (s5 === peg$FAILED) {\n                s4 = peg$c4;\n              } else {\n                peg$currPos = s4;\n                s4 = peg$c2;\n              }\n              if (s4 !== peg$FAILED) {\n                s5 = peg$parseany();\n                if (s5 !== peg$FAILED) {\n                  peg$reportedPos = s2;\n                  s3 = peg$c5(s5);\n                  s2 = s3;\n                } else {\n                  peg$currPos = s2;\n                  s2 = peg$c2;\n                }\n              } else {\n                peg$currPos = s2;\n                s2 = peg$c2;\n              }\n            } else {\n              peg$currPos = s2;\n              s2 = peg$c2;\n            }\n          }\n        } else {\n          s1 = peg$c2;\n        }\n        if (s1 !== peg$FAILED) {\n          peg$reportedPos = s0;\n          s1 = peg$c6(s1);\n        }\n        s0 = s1;\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) {\n          peg$fail(peg$c1);\n        }\n      }\n      return s0;\n    }\n    function peg$parsetag() {\n      var s0, s1, s2, s3, s4, s5, s6, s7, s8;\n      s0 = peg$currPos;\n      s1 = peg$parseld();\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parsecolor();\n        if (s2 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 58) {\n            s3 = peg$c7;\n            peg$currPos++;\n          } else {\n            s3 = peg$FAILED;\n            if (peg$silentFails === 0) {\n              peg$fail(peg$c8);\n            }\n          }\n          if (s3 !== peg$FAILED) {\n            s4 = [];\n            s5 = peg$currPos;\n            s6 = peg$currPos;\n            peg$silentFails++;\n            s7 = peg$parseld();\n            peg$silentFails--;\n            if (s7 === peg$FAILED) {\n              s6 = peg$c4;\n            } else {\n              peg$currPos = s6;\n              s6 = peg$c2;\n            }\n            if (s6 !== peg$FAILED) {\n              s7 = peg$currPos;\n              peg$silentFails++;\n              s8 = peg$parserd();\n              peg$silentFails--;\n              if (s8 === peg$FAILED) {\n                s7 = peg$c4;\n              } else {\n                peg$currPos = s7;\n                s7 = peg$c2;\n              }\n              if (s7 !== peg$FAILED) {\n                s8 = peg$parseany();\n                if (s8 !== peg$FAILED) {\n                  peg$reportedPos = s5;\n                  s6 = peg$c9(s8);\n                  s5 = s6;\n                } else {\n                  peg$currPos = s5;\n                  s5 = peg$c2;\n                }\n              } else {\n                peg$currPos = s5;\n                s5 = peg$c2;\n              }\n            } else {\n              peg$currPos = s5;\n              s5 = peg$c2;\n            }\n            if (s5 !== peg$FAILED) {\n              while (s5 !== peg$FAILED) {\n                s4.push(s5);\n                s5 = peg$currPos;\n                s6 = peg$currPos;\n                peg$silentFails++;\n                s7 = peg$parseld();\n                peg$silentFails--;\n                if (s7 === peg$FAILED) {\n                  s6 = peg$c4;\n                } else {\n                  peg$currPos = s6;\n                  s6 = peg$c2;\n                }\n                if (s6 !== peg$FAILED) {\n                  s7 = peg$currPos;\n                  peg$silentFails++;\n                  s8 = peg$parserd();\n                  peg$silentFails--;\n                  if (s8 === peg$FAILED) {\n                    s7 = peg$c4;\n                  } else {\n                    peg$currPos = s7;\n                    s7 = peg$c2;\n                  }\n                  if (s7 !== peg$FAILED) {\n                    s8 = peg$parseany();\n                    if (s8 !== peg$FAILED) {\n                      peg$reportedPos = s5;\n                      s6 = peg$c9(s8);\n                      s5 = s6;\n                    } else {\n                      peg$currPos = s5;\n                      s5 = peg$c2;\n                    }\n                  } else {\n                    peg$currPos = s5;\n                    s5 = peg$c2;\n                  }\n                } else {\n                  peg$currPos = s5;\n                  s5 = peg$c2;\n                }\n              }\n            } else {\n              s4 = peg$c2;\n            }\n            if (s4 !== peg$FAILED) {\n              peg$reportedPos = s0;\n              s1 = peg$c10(s2, s4);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$c2;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c2;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c2;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c2;\n      }\n      return s0;\n    }\n    function peg$parseany() {\n      var s0, s1;\n      s0 = peg$parseesc_left();\n      if (s0 === peg$FAILED) {\n        s0 = peg$parseesc_right();\n        if (s0 === peg$FAILED) {\n          s0 = peg$currPos;\n          if (input.length > peg$currPos) {\n            s1 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n              peg$fail(peg$c11);\n            }\n          }\n          if (s1 !== peg$FAILED) {\n            peg$reportedPos = s0;\n            s1 = peg$c12(s1);\n          }\n          s0 = s1;\n        }\n      }\n      return s0;\n    }\n    function peg$parseesc_left() {\n      var s0, s1, s2;\n      s0 = peg$currPos;\n      s1 = peg$parseesc_seq();\n      if (s1 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 123) {\n          s2 = peg$c13;\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) {\n            peg$fail(peg$c14);\n          }\n        }\n        if (s2 !== peg$FAILED) {\n          peg$reportedPos = s0;\n          s1 = peg$c15(s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c2;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c2;\n      }\n      return s0;\n    }\n    function peg$parseesc_right() {\n      var s0, s1, s2;\n      s0 = peg$currPos;\n      s1 = peg$parseesc_seq();\n      if (s1 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 125) {\n          s2 = peg$c16;\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) {\n            peg$fail(peg$c17);\n          }\n        }\n        if (s2 !== peg$FAILED) {\n          peg$reportedPos = s0;\n          s1 = peg$c15(s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c2;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c2;\n      }\n      return s0;\n    }\n    function peg$parseesc_seq() {\n      var s0;\n      if (input.charCodeAt(peg$currPos) === 92) {\n        s0 = peg$c18;\n        peg$currPos++;\n      } else {\n        s0 = peg$FAILED;\n        if (peg$silentFails === 0) {\n          peg$fail(peg$c19);\n        }\n      }\n      return s0;\n    }\n    function peg$parsecolor() {\n      var s0, s1, s2;\n      s0 = peg$currPos;\n      s1 = [];\n      if (peg$c20.test(input.charAt(peg$currPos))) {\n        s2 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) {\n          peg$fail(peg$c21);\n        }\n      }\n      if (s2 !== peg$FAILED) {\n        while (s2 !== peg$FAILED) {\n          s1.push(s2);\n          if (peg$c20.test(input.charAt(peg$currPos))) {\n            s2 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s2 = peg$FAILED;\n            if (peg$silentFails === 0) {\n              peg$fail(peg$c21);\n            }\n          }\n        }\n      } else {\n        s1 = peg$c2;\n      }\n      if (s1 !== peg$FAILED) {\n        peg$reportedPos = s0;\n        s1 = peg$c22(s1);\n      }\n      s0 = s1;\n      return s0;\n    }\n    function peg$parsereset() {\n      var s0, s1, s2, s3;\n      s0 = peg$currPos;\n      s1 = peg$currPos;\n      s2 = peg$currPos;\n      peg$silentFails++;\n      s3 = peg$parseesc_right();\n      peg$silentFails--;\n      if (s3 === peg$FAILED) {\n        s2 = peg$c4;\n      } else {\n        peg$currPos = s2;\n        s2 = peg$c2;\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parserd();\n        if (s3 !== peg$FAILED) {\n          s2 = [s2, s3];\n          s1 = s2;\n        } else {\n          peg$currPos = s1;\n          s1 = peg$c2;\n        }\n      } else {\n        peg$currPos = s1;\n        s1 = peg$c2;\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parseafter();\n        if (s2 === peg$FAILED) {\n          s2 = peg$c23;\n        }\n        if (s2 !== peg$FAILED) {\n          peg$reportedPos = s0;\n          s1 = peg$c24(s1, s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c2;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c2;\n      }\n      return s0;\n    }\n    function peg$parseafter() {\n      var s0, s1, s2, s3, s4;\n      s0 = [];\n      s1 = peg$currPos;\n      s2 = peg$currPos;\n      peg$silentFails++;\n      s3 = peg$parseld();\n      peg$silentFails--;\n      if (s3 === peg$FAILED) {\n        s2 = peg$c4;\n      } else {\n        peg$currPos = s2;\n        s2 = peg$c2;\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = peg$currPos;\n        peg$silentFails++;\n        s4 = peg$parserd();\n        peg$silentFails--;\n        if (s4 === peg$FAILED) {\n          s3 = peg$c4;\n        } else {\n          peg$currPos = s3;\n          s3 = peg$c2;\n        }\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parseany();\n          if (s4 !== peg$FAILED) {\n            peg$reportedPos = s1;\n            s2 = peg$c25(s4);\n            s1 = s2;\n          } else {\n            peg$currPos = s1;\n            s1 = peg$c2;\n          }\n        } else {\n          peg$currPos = s1;\n          s1 = peg$c2;\n        }\n      } else {\n        peg$currPos = s1;\n        s1 = peg$c2;\n      }\n      if (s1 !== peg$FAILED) {\n        while (s1 !== peg$FAILED) {\n          s0.push(s1);\n          s1 = peg$currPos;\n          s2 = peg$currPos;\n          peg$silentFails++;\n          s3 = peg$parseld();\n          peg$silentFails--;\n          if (s3 === peg$FAILED) {\n            s2 = peg$c4;\n          } else {\n            peg$currPos = s2;\n            s2 = peg$c2;\n          }\n          if (s2 !== peg$FAILED) {\n            s3 = peg$currPos;\n            peg$silentFails++;\n            s4 = peg$parserd();\n            peg$silentFails--;\n            if (s4 === peg$FAILED) {\n              s3 = peg$c4;\n            } else {\n              peg$currPos = s3;\n              s3 = peg$c2;\n            }\n            if (s3 !== peg$FAILED) {\n              s4 = peg$parseany();\n              if (s4 !== peg$FAILED) {\n                peg$reportedPos = s1;\n                s2 = peg$c25(s4);\n                s1 = s2;\n              } else {\n                peg$currPos = s1;\n                s1 = peg$c2;\n              }\n            } else {\n              peg$currPos = s1;\n              s1 = peg$c2;\n            }\n          } else {\n            peg$currPos = s1;\n            s1 = peg$c2;\n          }\n        }\n      } else {\n        s0 = peg$c2;\n      }\n      return s0;\n    }\n    function peg$parseld() {\n      var s0;\n      if (input.charCodeAt(peg$currPos) === 123) {\n        s0 = peg$c13;\n        peg$currPos++;\n      } else {\n        s0 = peg$FAILED;\n        if (peg$silentFails === 0) {\n          peg$fail(peg$c14);\n        }\n      }\n      return s0;\n    }\n    function peg$parserd() {\n      var s0;\n      if (input.charCodeAt(peg$currPos) === 125) {\n        s0 = peg$c16;\n        peg$currPos++;\n      } else {\n        s0 = peg$FAILED;\n        if (peg$silentFails === 0) {\n          peg$fail(peg$c17);\n        }\n      }\n      return s0;\n    }\n    function peg$parseeol() {\n      var s0;\n      if (input.charCodeAt(peg$currPos) === 10) {\n        s0 = peg$c26;\n        peg$currPos++;\n      } else {\n        s0 = peg$FAILED;\n        if (peg$silentFails === 0) {\n          peg$fail(peg$c27);\n        }\n      }\n      if (s0 === peg$FAILED) {\n        if (input.substr(peg$currPos, 2) === peg$c28) {\n          s0 = peg$c28;\n          peg$currPos += 2;\n        } else {\n          s0 = peg$FAILED;\n          if (peg$silentFails === 0) {\n            peg$fail(peg$c29);\n          }\n        }\n        if (s0 === peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 13) {\n            s0 = peg$c30;\n            peg$currPos++;\n          } else {\n            s0 = peg$FAILED;\n            if (peg$silentFails === 0) {\n              peg$fail(peg$c31);\n            }\n          }\n          if (s0 === peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 8232) {\n              s0 = peg$c32;\n              peg$currPos++;\n            } else {\n              s0 = peg$FAILED;\n              if (peg$silentFails === 0) {\n                peg$fail(peg$c33);\n              }\n            }\n            if (s0 === peg$FAILED) {\n              if (input.charCodeAt(peg$currPos) === 8233) {\n                s0 = peg$c34;\n                peg$currPos++;\n              } else {\n                s0 = peg$FAILED;\n                if (peg$silentFails === 0) {\n                  peg$fail(peg$c35);\n                }\n              }\n            }\n          }\n        }\n      }\n      return s0;\n    }\n    function peg$parsews() {\n      var s0;\n      if (peg$c36.test(input.charAt(peg$currPos))) {\n        s0 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s0 = peg$FAILED;\n        if (peg$silentFails === 0) {\n          peg$fail(peg$c37);\n        }\n      }\n      if (s0 === peg$FAILED) {\n        s0 = peg$parseeol();\n      }\n      return s0;\n    }\n    peg$result = peg$startRuleFunction();\n    if (peg$result !== peg$FAILED && peg$currPos === input.length) {\n      return peg$result;\n    } else {\n      if (peg$result !== peg$FAILED && peg$currPos < input.length) {\n        peg$fail({\n          type: \"end\",\n          description: \"end of input\"\n        });\n      }\n      throw peg$buildException(null, peg$maxFailExpected, peg$maxFailPos);\n    }\n  }\n  return {\n    SyntaxError: SyntaxError,\n    parse: parse\n  };\n}();","map":{"version":3,"names":["module","exports","peg$subclass","child","parent","ctor","constructor","prototype","SyntaxError","message","expected","found","offset","line","column","name","Error","parse","input","options","arguments","length","peg$FAILED","peg$startRuleFunctions","start","peg$parsestart","peg$startRuleFunction","peg$c0","peg$c1","type","description","peg$c2","peg$c3","e","w","join","peg$c4","peg$c5","c","peg$c6","b","peg$c7","peg$c8","value","peg$c9","peg$c10","color","text","peg$c11","peg$c12","a","peg$c13","peg$c14","peg$c15","out","peg$c16","peg$c17","peg$c18","peg$c19","peg$c20","peg$c21","peg$c22","peg$c23","peg$c24","r","reset","peg$c25","after","peg$c26","peg$c27","peg$c28","peg$c29","peg$c30","peg$c31","peg$c32","peg$c33","peg$c34","peg$c35","peg$c36","peg$c37","peg$currPos","peg$reportedPos","peg$cachedPos","peg$cachedPosDetails","seenCR","peg$maxFailPos","peg$maxFailExpected","peg$silentFails","peg$result","startRule","substring","peg$computePosDetails","peg$buildException","error","pos","advance","details","startPos","endPos","p","ch","charAt","peg$fail","push","cleanupExpected","i","sort","splice","buildMessage","stringEscape","s","hex","charCodeAt","toString","toUpperCase","replace","expectedDescs","Array","expectedDesc","foundDesc","slice","posDetails","s0","peg$parsebody","s1","peg$parseitem","peg$parsetag","peg$parsebuffer","peg$parsereset","s2","s3","s4","s5","peg$parseeol","peg$parsews","peg$parseany","s6","s7","s8","peg$parseld","peg$parsecolor","peg$parserd","peg$parseesc_left","peg$parseesc_right","peg$parseesc_seq","test","peg$parseafter","substr"],"sources":["/home/user/Рабочий стол/pizza/project/node_modules/tfunk/lib/parser.js"],"sourcesContent":["// Do not edit the parser directly. This is a generated file created using a build script and the PEG grammar.\nmodule.exports = (function() {\n  /*\n   * Generated by PEG.js 0.8.0.\n   *\n   * http://pegjs.majda.cz/\n   */\n\n  function peg$subclass(child, parent) {\n    function ctor() { this.constructor = child; }\n    ctor.prototype = parent.prototype;\n    child.prototype = new ctor();\n  }\n\n  function SyntaxError(message, expected, found, offset, line, column) {\n    this.message  = message;\n    this.expected = expected;\n    this.found    = found;\n    this.offset   = offset;\n    this.line     = line;\n    this.column   = column;\n\n    this.name     = \"SyntaxError\";\n  }\n\n  peg$subclass(SyntaxError, Error);\n\n  function parse(input) {\n    var options = arguments.length > 1 ? arguments[1] : {},\n\n        peg$FAILED = {},\n\n        peg$startRuleFunctions = { start: peg$parsestart },\n        peg$startRuleFunction  = peg$parsestart,\n\n        peg$c0 = [],\n        peg$c1 = { type: \"other\", description: \"buffer\" },\n        peg$c2 = peg$FAILED,\n        peg$c3 = function(e, w) { return {\"buffer\": e + w.join('')} },\n        peg$c4 = void 0,\n        peg$c5 = function(c) { return c },\n        peg$c6 = function(b) { return {\"buffer\": b.join('')} },\n        peg$c7 = \":\",\n        peg$c8 = { type: \"literal\", value: \":\", description: \"\\\":\\\"\" },\n        peg$c9 = function(c) {return c},\n        peg$c10 = function(c, e) { return {color: c, text: e.join('')}},\n        peg$c11 = { type: \"any\", description: \"any character\" },\n        peg$c12 = function(a) {return a},\n        peg$c13 = \"{\",\n        peg$c14 = { type: \"literal\", value: \"{\", description: \"\\\"{\\\"\" },\n        peg$c15 = function(out) {return out},\n        peg$c16 = \"}\",\n        peg$c17 = { type: \"literal\", value: \"}\", description: \"\\\"}\\\"\" },\n        peg$c18 = \"\\\\\",\n        peg$c19 = { type: \"literal\", value: \"\\\\\", description: \"\\\"\\\\\\\\\\\"\" },\n        peg$c20 = /^[a-zA-Z.]/,\n        peg$c21 = { type: \"class\", value: \"[a-zA-Z.]\", description: \"[a-zA-Z.]\" },\n        peg$c22 = function(c) { return c.join('') },\n        peg$c23 = null,\n        peg$c24 = function(r, e) {return {reset: true, text: e ? e.join('') : '' }},\n        peg$c25 = function(after) {return after},\n        peg$c26 = \"\\n\",\n        peg$c27 = { type: \"literal\", value: \"\\n\", description: \"\\\"\\\\n\\\"\" },\n        peg$c28 = \"\\r\\n\",\n        peg$c29 = { type: \"literal\", value: \"\\r\\n\", description: \"\\\"\\\\r\\\\n\\\"\" },\n        peg$c30 = \"\\r\",\n        peg$c31 = { type: \"literal\", value: \"\\r\", description: \"\\\"\\\\r\\\"\" },\n        peg$c32 = \"\\u2028\",\n        peg$c33 = { type: \"literal\", value: \"\\u2028\", description: \"\\\"\\\\u2028\\\"\" },\n        peg$c34 = \"\\u2029\",\n        peg$c35 = { type: \"literal\", value: \"\\u2029\", description: \"\\\"\\\\u2029\\\"\" },\n        peg$c36 = /^[\\t\\x0B\\f \\xA0\\uFEFF]/,\n        peg$c37 = { type: \"class\", value: \"[\\\\t\\\\x0B\\\\f \\\\xA0\\\\uFEFF]\", description: \"[\\\\t\\\\x0B\\\\f \\\\xA0\\\\uFEFF]\" },\n\n        peg$currPos          = 0,\n        peg$reportedPos      = 0,\n        peg$cachedPos        = 0,\n        peg$cachedPosDetails = { line: 1, column: 1, seenCR: false },\n        peg$maxFailPos       = 0,\n        peg$maxFailExpected  = [],\n        peg$silentFails      = 0,\n\n        peg$result;\n\n    if (\"startRule\" in options) {\n      if (!(options.startRule in peg$startRuleFunctions)) {\n        throw new Error(\"Can't start parsing from rule \\\"\" + options.startRule + \"\\\".\");\n      }\n\n      peg$startRuleFunction = peg$startRuleFunctions[options.startRule];\n    }\n\n    function text() {\n      return input.substring(peg$reportedPos, peg$currPos);\n    }\n\n    function offset() {\n      return peg$reportedPos;\n    }\n\n    function line() {\n      return peg$computePosDetails(peg$reportedPos).line;\n    }\n\n    function column() {\n      return peg$computePosDetails(peg$reportedPos).column;\n    }\n\n    function expected(description) {\n      throw peg$buildException(\n        null,\n        [{ type: \"other\", description: description }],\n        peg$reportedPos\n      );\n    }\n\n    function error(message) {\n      throw peg$buildException(message, null, peg$reportedPos);\n    }\n\n    function peg$computePosDetails(pos) {\n      function advance(details, startPos, endPos) {\n        var p, ch;\n\n        for (p = startPos; p < endPos; p++) {\n          ch = input.charAt(p);\n          if (ch === \"\\n\") {\n            if (!details.seenCR) { details.line++; }\n            details.column = 1;\n            details.seenCR = false;\n          } else if (ch === \"\\r\" || ch === \"\\u2028\" || ch === \"\\u2029\") {\n            details.line++;\n            details.column = 1;\n            details.seenCR = true;\n          } else {\n            details.column++;\n            details.seenCR = false;\n          }\n        }\n      }\n\n      if (peg$cachedPos !== pos) {\n        if (peg$cachedPos > pos) {\n          peg$cachedPos = 0;\n          peg$cachedPosDetails = { line: 1, column: 1, seenCR: false };\n        }\n        advance(peg$cachedPosDetails, peg$cachedPos, pos);\n        peg$cachedPos = pos;\n      }\n\n      return peg$cachedPosDetails;\n    }\n\n    function peg$fail(expected) {\n      if (peg$currPos < peg$maxFailPos) { return; }\n\n      if (peg$currPos > peg$maxFailPos) {\n        peg$maxFailPos = peg$currPos;\n        peg$maxFailExpected = [];\n      }\n\n      peg$maxFailExpected.push(expected);\n    }\n\n    function peg$buildException(message, expected, pos) {\n      function cleanupExpected(expected) {\n        var i = 1;\n\n        expected.sort(function(a, b) {\n          if (a.description < b.description) {\n            return -1;\n          } else if (a.description > b.description) {\n            return 1;\n          } else {\n            return 0;\n          }\n        });\n\n        while (i < expected.length) {\n          if (expected[i - 1] === expected[i]) {\n            expected.splice(i, 1);\n          } else {\n            i++;\n          }\n        }\n      }\n\n      function buildMessage(expected, found) {\n        function stringEscape(s) {\n          function hex(ch) { return ch.charCodeAt(0).toString(16).toUpperCase(); }\n\n          return s\n            .replace(/\\\\/g,   '\\\\\\\\')\n            .replace(/\"/g,    '\\\\\"')\n            .replace(/\\x08/g, '\\\\b')\n            .replace(/\\t/g,   '\\\\t')\n            .replace(/\\n/g,   '\\\\n')\n            .replace(/\\f/g,   '\\\\f')\n            .replace(/\\r/g,   '\\\\r')\n            .replace(/[\\x00-\\x07\\x0B\\x0E\\x0F]/g, function(ch) { return '\\\\x0' + hex(ch); })\n            .replace(/[\\x10-\\x1F\\x80-\\xFF]/g,    function(ch) { return '\\\\x'  + hex(ch); })\n            .replace(/[\\u0180-\\u0FFF]/g,         function(ch) { return '\\\\u0' + hex(ch); })\n            .replace(/[\\u1080-\\uFFFF]/g,         function(ch) { return '\\\\u'  + hex(ch); });\n        }\n\n        var expectedDescs = new Array(expected.length),\n            expectedDesc, foundDesc, i;\n\n        for (i = 0; i < expected.length; i++) {\n          expectedDescs[i] = expected[i].description;\n        }\n\n        expectedDesc = expected.length > 1\n          ? expectedDescs.slice(0, -1).join(\", \")\n              + \" or \"\n              + expectedDescs[expected.length - 1]\n          : expectedDescs[0];\n\n        foundDesc = found ? \"\\\"\" + stringEscape(found) + \"\\\"\" : \"end of input\";\n\n        return \"Expected \" + expectedDesc + \" but \" + foundDesc + \" found.\";\n      }\n\n      var posDetails = peg$computePosDetails(pos),\n          found      = pos < input.length ? input.charAt(pos) : null;\n\n      if (expected !== null) {\n        cleanupExpected(expected);\n      }\n\n      return new SyntaxError(\n        message !== null ? message : buildMessage(expected, found),\n        expected,\n        found,\n        pos,\n        posDetails.line,\n        posDetails.column\n      );\n    }\n\n    function peg$parsestart() {\n      var s0;\n\n      s0 = peg$parsebody();\n\n      return s0;\n    }\n\n    function peg$parsebody() {\n      var s0, s1;\n\n      s0 = [];\n      s1 = peg$parseitem();\n      while (s1 !== peg$FAILED) {\n        s0.push(s1);\n        s1 = peg$parseitem();\n      }\n\n      return s0;\n    }\n\n    function peg$parseitem() {\n      var s0;\n\n      s0 = peg$parsetag();\n      if (s0 === peg$FAILED) {\n        s0 = peg$parsebuffer();\n        if (s0 === peg$FAILED) {\n          s0 = peg$parsereset();\n        }\n      }\n\n      return s0;\n    }\n\n    function peg$parsebuffer() {\n      var s0, s1, s2, s3, s4, s5;\n\n      peg$silentFails++;\n      s0 = peg$currPos;\n      s1 = peg$parseeol();\n      if (s1 !== peg$FAILED) {\n        s2 = [];\n        s3 = peg$parsews();\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n          s3 = peg$parsews();\n        }\n        if (s2 !== peg$FAILED) {\n          peg$reportedPos = s0;\n          s1 = peg$c3(s1, s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c2;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c2;\n      }\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        s1 = [];\n        s2 = peg$currPos;\n        s3 = peg$currPos;\n        peg$silentFails++;\n        s4 = peg$parsetag();\n        peg$silentFails--;\n        if (s4 === peg$FAILED) {\n          s3 = peg$c4;\n        } else {\n          peg$currPos = s3;\n          s3 = peg$c2;\n        }\n        if (s3 !== peg$FAILED) {\n          s4 = peg$currPos;\n          peg$silentFails++;\n          s5 = peg$parsereset();\n          peg$silentFails--;\n          if (s5 === peg$FAILED) {\n            s4 = peg$c4;\n          } else {\n            peg$currPos = s4;\n            s4 = peg$c2;\n          }\n          if (s4 !== peg$FAILED) {\n            s5 = peg$parseany();\n            if (s5 !== peg$FAILED) {\n              peg$reportedPos = s2;\n              s3 = peg$c5(s5);\n              s2 = s3;\n            } else {\n              peg$currPos = s2;\n              s2 = peg$c2;\n            }\n          } else {\n            peg$currPos = s2;\n            s2 = peg$c2;\n          }\n        } else {\n          peg$currPos = s2;\n          s2 = peg$c2;\n        }\n        if (s2 !== peg$FAILED) {\n          while (s2 !== peg$FAILED) {\n            s1.push(s2);\n            s2 = peg$currPos;\n            s3 = peg$currPos;\n            peg$silentFails++;\n            s4 = peg$parsetag();\n            peg$silentFails--;\n            if (s4 === peg$FAILED) {\n              s3 = peg$c4;\n            } else {\n              peg$currPos = s3;\n              s3 = peg$c2;\n            }\n            if (s3 !== peg$FAILED) {\n              s4 = peg$currPos;\n              peg$silentFails++;\n              s5 = peg$parsereset();\n              peg$silentFails--;\n              if (s5 === peg$FAILED) {\n                s4 = peg$c4;\n              } else {\n                peg$currPos = s4;\n                s4 = peg$c2;\n              }\n              if (s4 !== peg$FAILED) {\n                s5 = peg$parseany();\n                if (s5 !== peg$FAILED) {\n                  peg$reportedPos = s2;\n                  s3 = peg$c5(s5);\n                  s2 = s3;\n                } else {\n                  peg$currPos = s2;\n                  s2 = peg$c2;\n                }\n              } else {\n                peg$currPos = s2;\n                s2 = peg$c2;\n              }\n            } else {\n              peg$currPos = s2;\n              s2 = peg$c2;\n            }\n          }\n        } else {\n          s1 = peg$c2;\n        }\n        if (s1 !== peg$FAILED) {\n          peg$reportedPos = s0;\n          s1 = peg$c6(s1);\n        }\n        s0 = s1;\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c1); }\n      }\n\n      return s0;\n    }\n\n    function peg$parsetag() {\n      var s0, s1, s2, s3, s4, s5, s6, s7, s8;\n\n      s0 = peg$currPos;\n      s1 = peg$parseld();\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parsecolor();\n        if (s2 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 58) {\n            s3 = peg$c7;\n            peg$currPos++;\n          } else {\n            s3 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c8); }\n          }\n          if (s3 !== peg$FAILED) {\n            s4 = [];\n            s5 = peg$currPos;\n            s6 = peg$currPos;\n            peg$silentFails++;\n            s7 = peg$parseld();\n            peg$silentFails--;\n            if (s7 === peg$FAILED) {\n              s6 = peg$c4;\n            } else {\n              peg$currPos = s6;\n              s6 = peg$c2;\n            }\n            if (s6 !== peg$FAILED) {\n              s7 = peg$currPos;\n              peg$silentFails++;\n              s8 = peg$parserd();\n              peg$silentFails--;\n              if (s8 === peg$FAILED) {\n                s7 = peg$c4;\n              } else {\n                peg$currPos = s7;\n                s7 = peg$c2;\n              }\n              if (s7 !== peg$FAILED) {\n                s8 = peg$parseany();\n                if (s8 !== peg$FAILED) {\n                  peg$reportedPos = s5;\n                  s6 = peg$c9(s8);\n                  s5 = s6;\n                } else {\n                  peg$currPos = s5;\n                  s5 = peg$c2;\n                }\n              } else {\n                peg$currPos = s5;\n                s5 = peg$c2;\n              }\n            } else {\n              peg$currPos = s5;\n              s5 = peg$c2;\n            }\n            if (s5 !== peg$FAILED) {\n              while (s5 !== peg$FAILED) {\n                s4.push(s5);\n                s5 = peg$currPos;\n                s6 = peg$currPos;\n                peg$silentFails++;\n                s7 = peg$parseld();\n                peg$silentFails--;\n                if (s7 === peg$FAILED) {\n                  s6 = peg$c4;\n                } else {\n                  peg$currPos = s6;\n                  s6 = peg$c2;\n                }\n                if (s6 !== peg$FAILED) {\n                  s7 = peg$currPos;\n                  peg$silentFails++;\n                  s8 = peg$parserd();\n                  peg$silentFails--;\n                  if (s8 === peg$FAILED) {\n                    s7 = peg$c4;\n                  } else {\n                    peg$currPos = s7;\n                    s7 = peg$c2;\n                  }\n                  if (s7 !== peg$FAILED) {\n                    s8 = peg$parseany();\n                    if (s8 !== peg$FAILED) {\n                      peg$reportedPos = s5;\n                      s6 = peg$c9(s8);\n                      s5 = s6;\n                    } else {\n                      peg$currPos = s5;\n                      s5 = peg$c2;\n                    }\n                  } else {\n                    peg$currPos = s5;\n                    s5 = peg$c2;\n                  }\n                } else {\n                  peg$currPos = s5;\n                  s5 = peg$c2;\n                }\n              }\n            } else {\n              s4 = peg$c2;\n            }\n            if (s4 !== peg$FAILED) {\n              peg$reportedPos = s0;\n              s1 = peg$c10(s2, s4);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$c2;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c2;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c2;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c2;\n      }\n\n      return s0;\n    }\n\n    function peg$parseany() {\n      var s0, s1;\n\n      s0 = peg$parseesc_left();\n      if (s0 === peg$FAILED) {\n        s0 = peg$parseesc_right();\n        if (s0 === peg$FAILED) {\n          s0 = peg$currPos;\n          if (input.length > peg$currPos) {\n            s1 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c11); }\n          }\n          if (s1 !== peg$FAILED) {\n            peg$reportedPos = s0;\n            s1 = peg$c12(s1);\n          }\n          s0 = s1;\n        }\n      }\n\n      return s0;\n    }\n\n    function peg$parseesc_left() {\n      var s0, s1, s2;\n\n      s0 = peg$currPos;\n      s1 = peg$parseesc_seq();\n      if (s1 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 123) {\n          s2 = peg$c13;\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c14); }\n        }\n        if (s2 !== peg$FAILED) {\n          peg$reportedPos = s0;\n          s1 = peg$c15(s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c2;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c2;\n      }\n\n      return s0;\n    }\n\n    function peg$parseesc_right() {\n      var s0, s1, s2;\n\n      s0 = peg$currPos;\n      s1 = peg$parseesc_seq();\n      if (s1 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 125) {\n          s2 = peg$c16;\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c17); }\n        }\n        if (s2 !== peg$FAILED) {\n          peg$reportedPos = s0;\n          s1 = peg$c15(s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c2;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c2;\n      }\n\n      return s0;\n    }\n\n    function peg$parseesc_seq() {\n      var s0;\n\n      if (input.charCodeAt(peg$currPos) === 92) {\n        s0 = peg$c18;\n        peg$currPos++;\n      } else {\n        s0 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c19); }\n      }\n\n      return s0;\n    }\n\n    function peg$parsecolor() {\n      var s0, s1, s2;\n\n      s0 = peg$currPos;\n      s1 = [];\n      if (peg$c20.test(input.charAt(peg$currPos))) {\n        s2 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c21); }\n      }\n      if (s2 !== peg$FAILED) {\n        while (s2 !== peg$FAILED) {\n          s1.push(s2);\n          if (peg$c20.test(input.charAt(peg$currPos))) {\n            s2 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s2 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c21); }\n          }\n        }\n      } else {\n        s1 = peg$c2;\n      }\n      if (s1 !== peg$FAILED) {\n        peg$reportedPos = s0;\n        s1 = peg$c22(s1);\n      }\n      s0 = s1;\n\n      return s0;\n    }\n\n    function peg$parsereset() {\n      var s0, s1, s2, s3;\n\n      s0 = peg$currPos;\n      s1 = peg$currPos;\n      s2 = peg$currPos;\n      peg$silentFails++;\n      s3 = peg$parseesc_right();\n      peg$silentFails--;\n      if (s3 === peg$FAILED) {\n        s2 = peg$c4;\n      } else {\n        peg$currPos = s2;\n        s2 = peg$c2;\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parserd();\n        if (s3 !== peg$FAILED) {\n          s2 = [s2, s3];\n          s1 = s2;\n        } else {\n          peg$currPos = s1;\n          s1 = peg$c2;\n        }\n      } else {\n        peg$currPos = s1;\n        s1 = peg$c2;\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parseafter();\n        if (s2 === peg$FAILED) {\n          s2 = peg$c23;\n        }\n        if (s2 !== peg$FAILED) {\n          peg$reportedPos = s0;\n          s1 = peg$c24(s1, s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c2;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c2;\n      }\n\n      return s0;\n    }\n\n    function peg$parseafter() {\n      var s0, s1, s2, s3, s4;\n\n      s0 = [];\n      s1 = peg$currPos;\n      s2 = peg$currPos;\n      peg$silentFails++;\n      s3 = peg$parseld();\n      peg$silentFails--;\n      if (s3 === peg$FAILED) {\n        s2 = peg$c4;\n      } else {\n        peg$currPos = s2;\n        s2 = peg$c2;\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = peg$currPos;\n        peg$silentFails++;\n        s4 = peg$parserd();\n        peg$silentFails--;\n        if (s4 === peg$FAILED) {\n          s3 = peg$c4;\n        } else {\n          peg$currPos = s3;\n          s3 = peg$c2;\n        }\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parseany();\n          if (s4 !== peg$FAILED) {\n            peg$reportedPos = s1;\n            s2 = peg$c25(s4);\n            s1 = s2;\n          } else {\n            peg$currPos = s1;\n            s1 = peg$c2;\n          }\n        } else {\n          peg$currPos = s1;\n          s1 = peg$c2;\n        }\n      } else {\n        peg$currPos = s1;\n        s1 = peg$c2;\n      }\n      if (s1 !== peg$FAILED) {\n        while (s1 !== peg$FAILED) {\n          s0.push(s1);\n          s1 = peg$currPos;\n          s2 = peg$currPos;\n          peg$silentFails++;\n          s3 = peg$parseld();\n          peg$silentFails--;\n          if (s3 === peg$FAILED) {\n            s2 = peg$c4;\n          } else {\n            peg$currPos = s2;\n            s2 = peg$c2;\n          }\n          if (s2 !== peg$FAILED) {\n            s3 = peg$currPos;\n            peg$silentFails++;\n            s4 = peg$parserd();\n            peg$silentFails--;\n            if (s4 === peg$FAILED) {\n              s3 = peg$c4;\n            } else {\n              peg$currPos = s3;\n              s3 = peg$c2;\n            }\n            if (s3 !== peg$FAILED) {\n              s4 = peg$parseany();\n              if (s4 !== peg$FAILED) {\n                peg$reportedPos = s1;\n                s2 = peg$c25(s4);\n                s1 = s2;\n              } else {\n                peg$currPos = s1;\n                s1 = peg$c2;\n              }\n            } else {\n              peg$currPos = s1;\n              s1 = peg$c2;\n            }\n          } else {\n            peg$currPos = s1;\n            s1 = peg$c2;\n          }\n        }\n      } else {\n        s0 = peg$c2;\n      }\n\n      return s0;\n    }\n\n    function peg$parseld() {\n      var s0;\n\n      if (input.charCodeAt(peg$currPos) === 123) {\n        s0 = peg$c13;\n        peg$currPos++;\n      } else {\n        s0 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c14); }\n      }\n\n      return s0;\n    }\n\n    function peg$parserd() {\n      var s0;\n\n      if (input.charCodeAt(peg$currPos) === 125) {\n        s0 = peg$c16;\n        peg$currPos++;\n      } else {\n        s0 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c17); }\n      }\n\n      return s0;\n    }\n\n    function peg$parseeol() {\n      var s0;\n\n      if (input.charCodeAt(peg$currPos) === 10) {\n        s0 = peg$c26;\n        peg$currPos++;\n      } else {\n        s0 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c27); }\n      }\n      if (s0 === peg$FAILED) {\n        if (input.substr(peg$currPos, 2) === peg$c28) {\n          s0 = peg$c28;\n          peg$currPos += 2;\n        } else {\n          s0 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c29); }\n        }\n        if (s0 === peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 13) {\n            s0 = peg$c30;\n            peg$currPos++;\n          } else {\n            s0 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c31); }\n          }\n          if (s0 === peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 8232) {\n              s0 = peg$c32;\n              peg$currPos++;\n            } else {\n              s0 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c33); }\n            }\n            if (s0 === peg$FAILED) {\n              if (input.charCodeAt(peg$currPos) === 8233) {\n                s0 = peg$c34;\n                peg$currPos++;\n              } else {\n                s0 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c35); }\n              }\n            }\n          }\n        }\n      }\n\n      return s0;\n    }\n\n    function peg$parsews() {\n      var s0;\n\n      if (peg$c36.test(input.charAt(peg$currPos))) {\n        s0 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s0 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c37); }\n      }\n      if (s0 === peg$FAILED) {\n        s0 = peg$parseeol();\n      }\n\n      return s0;\n    }\n\n    peg$result = peg$startRuleFunction();\n\n    if (peg$result !== peg$FAILED && peg$currPos === input.length) {\n      return peg$result;\n    } else {\n      if (peg$result !== peg$FAILED && peg$currPos < input.length) {\n        peg$fail({ type: \"end\", description: \"end of input\" });\n      }\n\n      throw peg$buildException(null, peg$maxFailExpected, peg$maxFailPos);\n    }\n  }\n\n  return {\n    SyntaxError: SyntaxError,\n    parse:       parse\n  };\n})()"],"mappings":"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"},"metadata":{},"sourceType":"script"}