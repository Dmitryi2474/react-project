{"ast":null,"code":"const assign = require('./lib/assign');\nconst Command = require('./lib/command');\nconst Completion = require('./lib/completion');\nconst Parser = require('yargs-parser');\nconst path = require('path');\nconst Usage = require('./lib/usage');\nconst Validation = require('./lib/validation');\nconst Y18n = require('y18n');\nconst objFilter = require('./lib/obj-filter');\nconst setBlocking = require('set-blocking');\nvar exports = module.exports = Yargs;\nfunction Yargs(processArgs, cwd, parentRequire) {\n  processArgs = processArgs || []; // handle calling yargs().\n\n  const self = {};\n  var command = null;\n  var completion = null;\n  var groups = {};\n  var output = '';\n  var preservedGroups = {};\n  var usage = null;\n  var validation = null;\n  const y18n = Y18n({\n    directory: path.resolve(__dirname, './locales'),\n    updateFiles: false\n  });\n  if (!cwd) cwd = process.cwd();\n  self.$0 = process.argv.slice(0, 2).map(function (x, i) {\n    // ignore the node bin, specify this in your\n    // bin file with #!/usr/bin/env node\n    if (i === 0 && /\\b(node|iojs)(\\.exe)?$/.test(x)) return;\n    var b = rebase(cwd, x);\n    return x.match(/^(\\/|([a-zA-Z]:)?\\\\)/) && b.length < x.length ? b : x;\n  }).join(' ').trim();\n  if (process.env._ !== undefined && process.argv[1] === process.env._) {\n    self.$0 = process.env._.replace(path.dirname(process.execPath) + '/', '');\n  }\n\n  // use context object to keep track of resets, subcommand execution, etc\n  // submodules should modify and check the state of context as necessary\n  const context = {\n    resets: -1,\n    commands: [],\n    files: []\n  };\n  self.getContext = function () {\n    return context;\n  };\n\n  // puts yargs back into an initial state. any keys\n  // that have been set to \"global\" will not be reset\n  // by this action.\n  var options;\n  self.resetOptions = self.reset = function (aliases) {\n    context.resets++;\n    aliases = aliases || {};\n    options = options || {};\n    // put yargs back into an initial state, this\n    // logic is used to build a nested command\n    // hierarchy.\n    var tmpOptions = {};\n    tmpOptions.global = options.global ? options.global : [];\n    tmpOptions.configObjects = options.configObjects ? options.configObjects : [];\n\n    // if a key has been set as a global, we\n    // do not want to reset it or its aliases.\n    var globalLookup = {};\n    tmpOptions.global.forEach(function (g) {\n      globalLookup[g] = true;\n      (aliases[g] || []).forEach(function (a) {\n        globalLookup[a] = true;\n      });\n    });\n\n    // preserve groups containing global keys\n    preservedGroups = Object.keys(groups).reduce(function (acc, groupName) {\n      var keys = groups[groupName].filter(function (key) {\n        return key in globalLookup;\n      });\n      if (keys.length > 0) {\n        acc[groupName] = keys;\n      }\n      return acc;\n    }, {});\n    // groups can now be reset\n    groups = {};\n    var arrayOptions = ['array', 'boolean', 'string', 'requiresArg', 'skipValidation', 'count', 'normalize', 'number'];\n    var objectOptions = ['narg', 'key', 'alias', 'default', 'defaultDescription', 'config', 'choices', 'demanded', 'coerce'];\n    arrayOptions.forEach(function (k) {\n      tmpOptions[k] = (options[k] || []).filter(function (k) {\n        return globalLookup[k];\n      });\n    });\n    objectOptions.forEach(function (k) {\n      tmpOptions[k] = objFilter(options[k], function (k, v) {\n        return globalLookup[k];\n      });\n    });\n    tmpOptions.envPrefix = options.envPrefix;\n    options = tmpOptions;\n\n    // if this is the first time being executed, create\n    // instances of all our helpers -- otherwise just reset.\n    usage = usage ? usage.reset(globalLookup) : Usage(self, y18n);\n    validation = validation ? validation.reset(globalLookup) : Validation(self, usage, y18n);\n    command = command ? command.reset() : Command(self, usage, validation);\n    if (!completion) completion = Completion(self, usage, command);\n    strict = false;\n    completionCommand = null;\n    output = '';\n    exitError = null;\n    hasOutput = false;\n    self.parsed = false;\n    return self;\n  };\n  self.resetOptions();\n\n  // temporary hack: allow \"freezing\" of reset-able state for parse(msg, cb)\n  var frozen;\n  function freeze() {\n    frozen = {};\n    frozen.options = options;\n    frozen.configObjects = options.configObjects.slice(0);\n    frozen.exitProcess = exitProcess;\n    frozen.groups = groups;\n    usage.freeze();\n    validation.freeze();\n    command.freeze();\n    frozen.strict = strict;\n    frozen.completionCommand = completionCommand;\n    frozen.output = output;\n    frozen.exitError = exitError;\n    frozen.hasOutput = hasOutput;\n    frozen.parsed = self.parsed;\n  }\n  function unfreeze() {\n    options = frozen.options;\n    options.configObjects = frozen.configObjects;\n    exitProcess = frozen.exitProcess;\n    groups = frozen.groups;\n    output = frozen.output;\n    exitError = frozen.exitError;\n    hasOutput = frozen.hasOutput;\n    self.parsed = frozen.parsed;\n    usage.unfreeze();\n    validation.unfreeze();\n    command.unfreeze();\n    strict = frozen.strict;\n    completionCommand = frozen.completionCommand;\n    parseFn = null;\n    parseContext = null;\n    frozen = undefined;\n  }\n  self.boolean = function (bools) {\n    options.boolean.push.apply(options.boolean, [].concat(bools));\n    return self;\n  };\n  self.array = function (arrays) {\n    options.array.push.apply(options.array, [].concat(arrays));\n    return self;\n  };\n  self.nargs = function (key, n) {\n    if (typeof key === 'object') {\n      Object.keys(key).forEach(function (k) {\n        self.nargs(k, key[k]);\n      });\n    } else {\n      options.narg[key] = n;\n    }\n    return self;\n  };\n  self.number = function (numbers) {\n    options.number.push.apply(options.number, [].concat(numbers));\n    return self;\n  };\n  self.choices = function (key, values) {\n    if (typeof key === 'object') {\n      Object.keys(key).forEach(function (k) {\n        self.choices(k, key[k]);\n      });\n    } else {\n      options.choices[key] = (options.choices[key] || []).concat(values);\n    }\n    return self;\n  };\n  self.normalize = function (strings) {\n    options.normalize.push.apply(options.normalize, [].concat(strings));\n    return self;\n  };\n  self.config = function (key, msg, parseFn) {\n    // allow to pass a configuration object\n    if (typeof key === 'object') {\n      options.configObjects = (options.configObjects || []).concat(key);\n      return self;\n    }\n\n    // allow to provide a parsing function\n    if (typeof msg === 'function') {\n      parseFn = msg;\n      msg = null;\n    }\n    key = key || 'config';\n    self.describe(key, msg || usage.deferY18nLookup('Path to JSON config file'));\n    (Array.isArray(key) ? key : [key]).forEach(function (k) {\n      options.config[k] = parseFn || true;\n    });\n    return self;\n  };\n  self.example = function (cmd, description) {\n    usage.example(cmd, description);\n    return self;\n  };\n  self.command = function (cmd, description, builder, handler) {\n    command.addHandler(cmd, description, builder, handler);\n    return self;\n  };\n  self.commandDir = function (dir, opts) {\n    const req = parentRequire || require;\n    command.addDirectory(dir, self.getContext(), req, require('get-caller-file')(), opts);\n    return self;\n  };\n  self.string = function (strings) {\n    options.string.push.apply(options.string, [].concat(strings));\n    return self;\n  };\n\n  // The 'defaults' alias is deprecated. It will be removed in the next major version.\n  self.default = self.defaults = function (key, value, defaultDescription) {\n    if (typeof key === 'object') {\n      Object.keys(key).forEach(function (k) {\n        self.default(k, key[k]);\n      });\n    } else {\n      if (defaultDescription) options.defaultDescription[key] = defaultDescription;\n      if (typeof value === 'function') {\n        if (!options.defaultDescription[key]) options.defaultDescription[key] = usage.functionDescription(value);\n        value = value.call();\n      }\n      options.default[key] = value;\n    }\n    return self;\n  };\n  self.alias = function (x, y) {\n    if (typeof x === 'object') {\n      Object.keys(x).forEach(function (key) {\n        self.alias(key, x[key]);\n      });\n    } else {\n      options.alias[x] = (options.alias[x] || []).concat(y);\n    }\n    return self;\n  };\n  self.coerce = function (key, fn) {\n    if (typeof key === 'object' && !Array.isArray(key)) {\n      Object.keys(key).forEach(function (k) {\n        self.coerce(k, key[k]);\n      });\n    } else {\n      [].concat(key).forEach(function (k) {\n        options.coerce[k] = fn;\n      });\n    }\n    return self;\n  };\n  self.count = function (counts) {\n    options.count.push.apply(options.count, [].concat(counts));\n    return self;\n  };\n  self.demand = self.required = self.require = function (keys, max, msg) {\n    // you can optionally provide a 'max' key,\n    // which will raise an exception if too many '_'\n    // options are provided.\n\n    if (Array.isArray(max)) {\n      max.forEach(function (key) {\n        self.demand(key, msg);\n      });\n      max = Infinity;\n    } else if (typeof max !== 'number') {\n      msg = max;\n      max = Infinity;\n    }\n    if (typeof keys === 'number') {\n      if (!options.demanded._) options.demanded._ = {\n        count: 0,\n        msg: null,\n        max: max\n      };\n      options.demanded._.count = keys;\n      options.demanded._.msg = msg;\n    } else if (Array.isArray(keys)) {\n      keys.forEach(function (key) {\n        self.demand(key, msg);\n      });\n    } else {\n      if (typeof msg === 'string') {\n        options.demanded[keys] = {\n          msg: msg\n        };\n      } else if (msg === true || typeof msg === 'undefined') {\n        options.demanded[keys] = {\n          msg: undefined\n        };\n      }\n    }\n    return self;\n  };\n  self.getDemanded = function () {\n    return options.demanded;\n  };\n  self.requiresArg = function (requiresArgs) {\n    options.requiresArg.push.apply(options.requiresArg, [].concat(requiresArgs));\n    return self;\n  };\n  self.skipValidation = function (skipValidations) {\n    options.skipValidation.push.apply(options.skipValidation, [].concat(skipValidations));\n    return self;\n  };\n  self.implies = function (key, value) {\n    validation.implies(key, value);\n    return self;\n  };\n  self.usage = function (msg, opts) {\n    if (!opts && typeof msg === 'object') {\n      opts = msg;\n      msg = null;\n    }\n    usage.usage(msg);\n    if (opts) self.options(opts);\n    return self;\n  };\n  self.epilogue = self.epilog = function (msg) {\n    usage.epilog(msg);\n    return self;\n  };\n  self.fail = function (f) {\n    usage.failFn(f);\n    return self;\n  };\n  self.check = function (f) {\n    validation.check(f);\n    return self;\n  };\n  self.describe = function (key, desc) {\n    options.key[key] = true;\n    usage.describe(key, desc);\n    return self;\n  };\n  self.global = function (globals) {\n    options.global.push.apply(options.global, [].concat(globals));\n    return self;\n  };\n  self.pkgConf = function (key, path) {\n    var conf = null;\n    var obj = pkgUp(path);\n\n    // If an object exists in the key, add it to options.configObjects\n    if (obj[key] && typeof obj[key] === 'object') {\n      conf = obj[key];\n      options.configObjects = (options.configObjects || []).concat(conf);\n    }\n    return self;\n  };\n  var pkgs = {};\n  function pkgUp(path) {\n    var npath = path || '*';\n    if (pkgs[npath]) return pkgs[npath];\n    const readPkgUp = require('read-pkg-up');\n    var obj = {};\n    try {\n      obj = readPkgUp.sync({\n        cwd: path || require('require-main-filename')(parentRequire || require),\n        normalize: false\n      });\n    } catch (noop) {}\n    pkgs[npath] = obj.pkg || {};\n    return pkgs[npath];\n  }\n  var parseFn = null;\n  var parseContext = null;\n  self.parse = function (args, shortCircuit, _parseFn) {\n    // a context object can optionally be provided, this allows\n    // additional information to be passed to a command handler.\n    if (typeof shortCircuit === 'object') {\n      parseContext = shortCircuit;\n      shortCircuit = _parseFn;\n    }\n\n    // by providing a function as a second argument to\n    // parse you can capture output that would otherwise\n    // default to printing to stdout/stderr.\n    if (typeof shortCircuit === 'function') {\n      parseFn = shortCircuit;\n      shortCircuit = null;\n    }\n    // completion short-circuits the parsing process,\n    // skipping validation, etc.\n    if (!shortCircuit) processArgs = args;\n    if (parseFn) {\n      freeze();\n      exitProcess = false;\n    }\n    var parsed = parseArgs(args, shortCircuit);\n    if (parseFn) {\n      parseFn(exitError, parsed, output);\n      unfreeze();\n    }\n    return parsed;\n  };\n  self._hasParseCallback = function () {\n    return !!parseFn;\n  };\n  self.option = self.options = function (key, opt) {\n    if (typeof key === 'object') {\n      Object.keys(key).forEach(function (k) {\n        self.options(k, key[k]);\n      });\n    } else {\n      if (typeof opt !== 'object') {\n        opt = {};\n      }\n      options.key[key] = true; // track manually set keys.\n\n      if (opt.alias) self.alias(key, opt.alias);\n      var demand = opt.demand || opt.required || opt.require;\n      if (demand) {\n        self.demand(key, demand);\n      }\n      if ('config' in opt) {\n        self.config(key, opt.configParser);\n      }\n      if ('default' in opt) {\n        self.default(key, opt.default);\n      }\n      if ('nargs' in opt) {\n        self.nargs(key, opt.nargs);\n      }\n      if ('normalize' in opt) {\n        self.normalize(key);\n      }\n      if ('choices' in opt) {\n        self.choices(key, opt.choices);\n      }\n      if ('coerce' in opt) {\n        self.coerce(key, opt.coerce);\n      }\n      if ('group' in opt) {\n        self.group(key, opt.group);\n      }\n      if (opt.global) {\n        self.global(key);\n      }\n      if (opt.boolean || opt.type === 'boolean') {\n        self.boolean(key);\n        if (opt.alias) self.boolean(opt.alias);\n      }\n      if (opt.array || opt.type === 'array') {\n        self.array(key);\n        if (opt.alias) self.array(opt.alias);\n      }\n      if (opt.number || opt.type === 'number') {\n        self.number(key);\n        if (opt.alias) self.number(opt.alias);\n      }\n      if (opt.string || opt.type === 'string') {\n        self.string(key);\n        if (opt.alias) self.string(opt.alias);\n      }\n      if (opt.count || opt.type === 'count') {\n        self.count(key);\n      }\n      if (opt.defaultDescription) {\n        options.defaultDescription[key] = opt.defaultDescription;\n      }\n      if (opt.skipValidation) {\n        self.skipValidation(key);\n      }\n      var desc = opt.describe || opt.description || opt.desc;\n      if (desc) {\n        self.describe(key, desc);\n      }\n      if (opt.requiresArg) {\n        self.requiresArg(key);\n      }\n    }\n    return self;\n  };\n  self.getOptions = function () {\n    return options;\n  };\n  self.group = function (opts, groupName) {\n    var existing = preservedGroups[groupName] || groups[groupName];\n    if (preservedGroups[groupName]) {\n      // the preserved group will be moved to the set of explicitly declared\n      // groups\n      delete preservedGroups[groupName];\n    }\n    var seen = {};\n    groups[groupName] = (existing || []).concat(opts).filter(function (key) {\n      if (seen[key]) return false;\n      return seen[key] = true;\n    });\n    return self;\n  };\n  self.getGroups = function () {\n    // combine explicit and preserved groups. explicit groups should be first\n    return assign(groups, preservedGroups);\n  };\n\n  // as long as options.envPrefix is not undefined,\n  // parser will apply env vars matching prefix to argv\n  self.env = function (prefix) {\n    if (prefix === false) options.envPrefix = undefined;else options.envPrefix = prefix || '';\n    return self;\n  };\n  self.wrap = function (cols) {\n    usage.wrap(cols);\n    return self;\n  };\n  var strict = false;\n  self.strict = function () {\n    strict = true;\n    return self;\n  };\n  self.getStrict = function () {\n    return strict;\n  };\n  self.showHelp = function (level) {\n    if (!self.parsed) parseArgs(processArgs); // run parser, if it has not already been executed.\n    usage.showHelp(level);\n    return self;\n  };\n  var versionOpt = null;\n  self.version = function (opt, msg, ver) {\n    if (arguments.length === 0) {\n      ver = guessVersion();\n      opt = 'version';\n    } else if (arguments.length === 1) {\n      ver = opt;\n      opt = 'version';\n    } else if (arguments.length === 2) {\n      ver = msg;\n    }\n    versionOpt = opt;\n    msg = msg || usage.deferY18nLookup('Show version number');\n    usage.version(ver || undefined);\n    self.boolean(versionOpt);\n    self.global(versionOpt);\n    self.describe(versionOpt, msg);\n    return self;\n  };\n  function guessVersion() {\n    var obj = pkgUp();\n    return obj.version || 'unknown';\n  }\n  var helpOpt = null;\n  var useHelpOptAsCommand = false; // a call to .help() will enable this\n  self.addHelpOpt = self.help = function (opt, msg, addImplicitCmd) {\n    // argument shuffle\n    if (arguments.length === 0) {\n      useHelpOptAsCommand = true;\n    } else if (arguments.length === 1) {\n      if (typeof opt === 'boolean') {\n        useHelpOptAsCommand = opt;\n        opt = null;\n      } else {\n        useHelpOptAsCommand = true;\n      }\n    } else if (arguments.length === 2) {\n      if (typeof msg === 'boolean') {\n        useHelpOptAsCommand = msg;\n        msg = null;\n      } else {\n        useHelpOptAsCommand = true;\n      }\n    } else {\n      useHelpOptAsCommand = Boolean(addImplicitCmd);\n    }\n    // use arguments, fallback to defaults for opt and msg\n    helpOpt = opt || 'help';\n    self.boolean(helpOpt);\n    self.global(helpOpt);\n    self.describe(helpOpt, msg || usage.deferY18nLookup('Show help'));\n    return self;\n  };\n  self.showHelpOnFail = function (enabled, message) {\n    usage.showHelpOnFail(enabled, message);\n    return self;\n  };\n  var exitProcess = true;\n  self.exitProcess = function (enabled) {\n    if (typeof enabled !== 'boolean') {\n      enabled = true;\n    }\n    exitProcess = enabled;\n    return self;\n  };\n  self.getExitProcess = function () {\n    return exitProcess;\n  };\n  var completionCommand = null;\n  self.completion = function (cmd, desc, fn) {\n    // a function to execute when generating\n    // completions can be provided as the second\n    // or third argument to completion.\n    if (typeof desc === 'function') {\n      fn = desc;\n      desc = null;\n    }\n\n    // register the completion command.\n    completionCommand = cmd || 'completion';\n    if (!desc && desc !== false) {\n      desc = 'generate bash completion script';\n    }\n    self.command(completionCommand, desc);\n\n    // a function can be provided\n    if (fn) completion.registerFunction(fn);\n    return self;\n  };\n  self.showCompletionScript = function ($0) {\n    $0 = $0 || self.$0;\n    _logger.log(completion.generateCompletionScript($0));\n    return self;\n  };\n  self.getCompletion = function (args, done) {\n    completion.getCompletion(args, done);\n  };\n  self.locale = function (locale) {\n    if (arguments.length === 0) {\n      guessLocale();\n      return y18n.getLocale();\n    }\n    detectLocale = false;\n    y18n.setLocale(locale);\n    return self;\n  };\n  self.updateStrings = self.updateLocale = function (obj) {\n    detectLocale = false;\n    y18n.updateLocale(obj);\n    return self;\n  };\n  var detectLocale = true;\n  self.detectLocale = function (detect) {\n    detectLocale = detect;\n    return self;\n  };\n  self.getDetectLocale = function () {\n    return detectLocale;\n  };\n  var hasOutput = false;\n  var exitError = null;\n  // maybe exit, always capture\n  // context about why we wanted to exit.\n  self.exit = function (code, err) {\n    hasOutput = true;\n    exitError = err;\n    if (exitProcess) process.exit(code);\n  };\n\n  // we use a custom logger that buffers output,\n  // so that we can print to non-CLIs, e.g., chat-bots.\n  var _logger = {\n    log: function () {\n      var args = Array.prototype.slice.call(arguments);\n      if (!self._hasParseCallback()) console.log.apply(console, args);\n      hasOutput = true;\n      if (output.length) output += '\\n';\n      output += args.join(' ');\n    },\n    error: function () {\n      var args = Array.prototype.slice.call(arguments);\n      if (!self._hasParseCallback()) console.error.apply(console, args);\n      hasOutput = true;\n      if (output.length) output += '\\n';\n      output += args.join(' ');\n    }\n  };\n  self._getLoggerInstance = function () {\n    return _logger;\n  };\n  // has yargs output an error our help\n  // message in the current execution context.\n  self._hasOutput = function () {\n    return hasOutput;\n  };\n  var recommendCommands;\n  self.recommendCommands = function () {\n    recommendCommands = true;\n    return self;\n  };\n  self.getUsageInstance = function () {\n    return usage;\n  };\n  self.getValidationInstance = function () {\n    return validation;\n  };\n  self.getCommandInstance = function () {\n    return command;\n  };\n  self.terminalWidth = function () {\n    return require('window-size').width;\n  };\n  Object.defineProperty(self, 'argv', {\n    get: function () {\n      var args = null;\n      try {\n        args = parseArgs(processArgs);\n      } catch (err) {\n        usage.fail(err.message, err);\n      }\n      return args;\n    },\n    enumerable: true\n  });\n  function parseArgs(args, shortCircuit) {\n    options.__ = y18n.__;\n    options.configuration = pkgUp(cwd)['yargs'] || {};\n    const parsed = Parser.detailed(args, options);\n    var argv = parsed.argv;\n    if (parseContext) argv = assign(parseContext, argv);\n    var aliases = parsed.aliases;\n    argv.$0 = self.$0;\n    self.parsed = parsed;\n    guessLocale(); // guess locale lazily, so that it can be turned off in chain.\n\n    // while building up the argv object, there\n    // are two passes through the parser. If completion\n    // is being performed short-circuit on the first pass.\n    if (shortCircuit) {\n      return argv;\n    }\n    if (argv._.length) {\n      // check for helpOpt in argv._ before running commands\n      // assumes helpOpt must be valid if useHelpOptAsCommand is true\n      if (useHelpOptAsCommand) {\n        // consider any multi-char helpOpt alias as a valid help command\n        // unless all helpOpt aliases are single-char\n        // note that parsed.aliases is a normalized bidirectional map :)\n        var helpCmds = [helpOpt].concat(aliases[helpOpt]);\n        var multiCharHelpCmds = helpCmds.filter(function (k) {\n          return k.length > 1;\n        });\n        if (multiCharHelpCmds.length) helpCmds = multiCharHelpCmds;\n        // look for and strip any helpCmds from argv._\n        argv._ = argv._.filter(function (cmd) {\n          if (~helpCmds.indexOf(cmd)) {\n            argv[helpOpt] = true;\n            return false;\n          }\n          return true;\n        });\n      }\n\n      // if there's a handler associated with a\n      // command defer processing to it.\n      var handlerKeys = command.getCommands();\n      if (handlerKeys.length) {\n        var firstUnknownCommand;\n        for (var i = 0, cmd; (cmd = argv._[i]) !== undefined; i++) {\n          if (~handlerKeys.indexOf(cmd) && cmd !== completionCommand) {\n            setPlaceholderKeys(argv);\n            return command.runCommand(cmd, self, parsed);\n          } else if (!firstUnknownCommand && cmd !== completionCommand) {\n            firstUnknownCommand = cmd;\n          }\n        }\n\n        // recommend a command if recommendCommands() has\n        // been enabled, and no commands were found to execute\n        if (recommendCommands && firstUnknownCommand) {\n          validation.recommendCommands(firstUnknownCommand, handlerKeys);\n        }\n      }\n\n      // generate a completion script for adding to ~/.bashrc.\n      if (completionCommand && ~argv._.indexOf(completionCommand) && !argv[completion.completionKey]) {\n        if (exitProcess) setBlocking(true);\n        self.showCompletionScript();\n        self.exit(0);\n      }\n    }\n\n    // we must run completions first, a user might\n    // want to complete the --help or --version option.\n    if (completion.completionKey in argv) {\n      if (exitProcess) setBlocking(true);\n\n      // we allow for asynchronous completions,\n      // e.g., loading in a list of commands from an API.\n      var completionArgs = args.slice(args.indexOf('--' + completion.completionKey) + 1);\n      completion.getCompletion(completionArgs, function (completions) {\n        ;\n        (completions || []).forEach(function (completion) {\n          _logger.log(completion);\n        });\n        self.exit(0);\n      });\n      return setPlaceholderKeys(argv);\n    }\n    var skipValidation = false;\n\n    // Handle 'help' and 'version' options\n    Object.keys(argv).forEach(function (key) {\n      if (key === helpOpt && argv[key]) {\n        if (exitProcess) setBlocking(true);\n        skipValidation = true;\n        self.showHelp('log');\n        self.exit(0);\n      } else if (key === versionOpt && argv[key]) {\n        if (exitProcess) setBlocking(true);\n        skipValidation = true;\n        usage.showVersion();\n        self.exit(0);\n      }\n    });\n\n    // Check if any of the options to skip validation were provided\n    if (!skipValidation && options.skipValidation.length > 0) {\n      skipValidation = Object.keys(argv).some(function (key) {\n        return options.skipValidation.indexOf(key) >= 0 && argv[key] === true;\n      });\n    }\n\n    // If the help or version options where used and exitProcess is false,\n    // or if explicitly skipped, we won't run validations\n    if (!skipValidation) {\n      if (parsed.error) throw parsed.error;\n\n      // if we're executed via bash completion, don't\n      // bother with validation.\n      if (!argv[completion.completionKey]) {\n        validation.nonOptionCount(argv);\n        validation.missingArgumentValue(argv);\n        validation.requiredArguments(argv);\n        if (strict) validation.unknownArguments(argv, aliases);\n        validation.customChecks(argv, aliases);\n        validation.limitedChoices(argv);\n        validation.implications(argv);\n      }\n    }\n    return setPlaceholderKeys(argv);\n  }\n  function guessLocale() {\n    if (!detectLocale) return;\n    try {\n      const osLocale = require('os-locale');\n      self.locale(osLocale.sync({\n        spawn: false\n      }));\n    } catch (err) {\n      // if we explode looking up locale just noop\n      // we'll keep using the default language 'en'.\n    }\n  }\n  function setPlaceholderKeys(argv) {\n    Object.keys(options.key).forEach(function (key) {\n      // don't set placeholder keys for dot\n      // notation options 'foo.bar'.\n      if (~key.indexOf('.')) return;\n      if (typeof argv[key] === 'undefined') argv[key] = undefined;\n    });\n    return argv;\n  }\n  return self;\n}\n\n// rebase an absolute path to a relative one with respect to a base directory\n// exported for tests\nexports.rebase = rebase;\nfunction rebase(base, dir) {\n  return path.relative(base, dir);\n}","map":{"version":3,"names":["assign","require","Command","Completion","Parser","path","Usage","Validation","Y18n","objFilter","setBlocking","exports","module","Yargs","processArgs","cwd","parentRequire","self","command","completion","groups","output","preservedGroups","usage","validation","y18n","directory","resolve","__dirname","updateFiles","process","$0","argv","slice","map","x","i","test","b","rebase","match","length","join","trim","env","_","undefined","replace","dirname","execPath","context","resets","commands","files","getContext","options","resetOptions","reset","aliases","tmpOptions","global","configObjects","globalLookup","forEach","g","a","Object","keys","reduce","acc","groupName","filter","key","arrayOptions","objectOptions","k","v","envPrefix","strict","completionCommand","exitError","hasOutput","parsed","frozen","freeze","exitProcess","unfreeze","parseFn","parseContext","boolean","bools","push","apply","concat","array","arrays","nargs","n","narg","number","numbers","choices","values","normalize","strings","config","msg","describe","deferY18nLookup","Array","isArray","example","cmd","description","builder","handler","addHandler","commandDir","dir","opts","req","addDirectory","string","default","defaults","value","defaultDescription","functionDescription","call","alias","y","coerce","fn","count","counts","demand","required","max","Infinity","demanded","getDemanded","requiresArg","requiresArgs","skipValidation","skipValidations","implies","epilogue","epilog","fail","f","failFn","check","desc","globals","pkgConf","conf","obj","pkgUp","pkgs","npath","readPkgUp","sync","noop","pkg","parse","args","shortCircuit","_parseFn","parseArgs","_hasParseCallback","option","opt","configParser","group","type","getOptions","existing","seen","getGroups","prefix","wrap","cols","getStrict","showHelp","level","versionOpt","version","ver","arguments","guessVersion","helpOpt","useHelpOptAsCommand","addHelpOpt","help","addImplicitCmd","Boolean","showHelpOnFail","enabled","message","getExitProcess","registerFunction","showCompletionScript","_logger","log","generateCompletionScript","getCompletion","done","locale","guessLocale","getLocale","detectLocale","setLocale","updateStrings","updateLocale","detect","getDetectLocale","exit","code","err","prototype","console","error","_getLoggerInstance","_hasOutput","recommendCommands","getUsageInstance","getValidationInstance","getCommandInstance","terminalWidth","width","defineProperty","get","enumerable","__","configuration","detailed","helpCmds","multiCharHelpCmds","indexOf","handlerKeys","getCommands","firstUnknownCommand","setPlaceholderKeys","runCommand","completionKey","completionArgs","completions","showVersion","some","nonOptionCount","missingArgumentValue","requiredArguments","unknownArguments","customChecks","limitedChoices","implications","osLocale","spawn","base","relative"],"sources":["/home/user/Рабочий стол/pizza/project/node_modules/yargs/yargs.js"],"sourcesContent":["const assign = require('./lib/assign')\nconst Command = require('./lib/command')\nconst Completion = require('./lib/completion')\nconst Parser = require('yargs-parser')\nconst path = require('path')\nconst Usage = require('./lib/usage')\nconst Validation = require('./lib/validation')\nconst Y18n = require('y18n')\nconst objFilter = require('./lib/obj-filter')\nconst setBlocking = require('set-blocking')\n\nvar exports = module.exports = Yargs\nfunction Yargs (processArgs, cwd, parentRequire) {\n  processArgs = processArgs || [] // handle calling yargs().\n\n  const self = {}\n  var command = null\n  var completion = null\n  var groups = {}\n  var output = ''\n  var preservedGroups = {}\n  var usage = null\n  var validation = null\n\n  const y18n = Y18n({\n    directory: path.resolve(__dirname, './locales'),\n    updateFiles: false\n  })\n\n  if (!cwd) cwd = process.cwd()\n\n  self.$0 = process.argv\n    .slice(0, 2)\n    .map(function (x, i) {\n      // ignore the node bin, specify this in your\n      // bin file with #!/usr/bin/env node\n      if (i === 0 && /\\b(node|iojs)(\\.exe)?$/.test(x)) return\n      var b = rebase(cwd, x)\n      return x.match(/^(\\/|([a-zA-Z]:)?\\\\)/) && b.length < x.length ? b : x\n    })\n    .join(' ').trim()\n\n  if (process.env._ !== undefined && process.argv[1] === process.env._) {\n    self.$0 = process.env._.replace(\n      path.dirname(process.execPath) + '/', ''\n    )\n  }\n\n  // use context object to keep track of resets, subcommand execution, etc\n  // submodules should modify and check the state of context as necessary\n  const context = { resets: -1, commands: [], files: [] }\n  self.getContext = function () {\n    return context\n  }\n\n  // puts yargs back into an initial state. any keys\n  // that have been set to \"global\" will not be reset\n  // by this action.\n  var options\n  self.resetOptions = self.reset = function (aliases) {\n    context.resets++\n    aliases = aliases || {}\n    options = options || {}\n    // put yargs back into an initial state, this\n    // logic is used to build a nested command\n    // hierarchy.\n    var tmpOptions = {}\n    tmpOptions.global = options.global ? options.global : []\n    tmpOptions.configObjects = options.configObjects ? options.configObjects : []\n\n    // if a key has been set as a global, we\n    // do not want to reset it or its aliases.\n    var globalLookup = {}\n    tmpOptions.global.forEach(function (g) {\n      globalLookup[g] = true\n      ;(aliases[g] || []).forEach(function (a) {\n        globalLookup[a] = true\n      })\n    })\n\n    // preserve groups containing global keys\n    preservedGroups = Object.keys(groups).reduce(function (acc, groupName) {\n      var keys = groups[groupName].filter(function (key) {\n        return key in globalLookup\n      })\n      if (keys.length > 0) {\n        acc[groupName] = keys\n      }\n      return acc\n    }, {})\n    // groups can now be reset\n    groups = {}\n\n    var arrayOptions = [\n      'array', 'boolean', 'string', 'requiresArg', 'skipValidation',\n      'count', 'normalize', 'number'\n    ]\n\n    var objectOptions = [\n      'narg', 'key', 'alias', 'default', 'defaultDescription',\n      'config', 'choices', 'demanded', 'coerce'\n    ]\n\n    arrayOptions.forEach(function (k) {\n      tmpOptions[k] = (options[k] || []).filter(function (k) {\n        return globalLookup[k]\n      })\n    })\n\n    objectOptions.forEach(function (k) {\n      tmpOptions[k] = objFilter(options[k], function (k, v) {\n        return globalLookup[k]\n      })\n    })\n\n    tmpOptions.envPrefix = options.envPrefix\n    options = tmpOptions\n\n    // if this is the first time being executed, create\n    // instances of all our helpers -- otherwise just reset.\n    usage = usage ? usage.reset(globalLookup) : Usage(self, y18n)\n    validation = validation ? validation.reset(globalLookup) : Validation(self, usage, y18n)\n    command = command ? command.reset() : Command(self, usage, validation)\n    if (!completion) completion = Completion(self, usage, command)\n\n    strict = false\n    completionCommand = null\n    output = ''\n    exitError = null\n    hasOutput = false\n    self.parsed = false\n\n    return self\n  }\n  self.resetOptions()\n\n  // temporary hack: allow \"freezing\" of reset-able state for parse(msg, cb)\n  var frozen\n  function freeze () {\n    frozen = {}\n    frozen.options = options\n    frozen.configObjects = options.configObjects.slice(0)\n    frozen.exitProcess = exitProcess\n    frozen.groups = groups\n    usage.freeze()\n    validation.freeze()\n    command.freeze()\n    frozen.strict = strict\n    frozen.completionCommand = completionCommand\n    frozen.output = output\n    frozen.exitError = exitError\n    frozen.hasOutput = hasOutput\n    frozen.parsed = self.parsed\n  }\n  function unfreeze () {\n    options = frozen.options\n    options.configObjects = frozen.configObjects\n    exitProcess = frozen.exitProcess\n    groups = frozen.groups\n    output = frozen.output\n    exitError = frozen.exitError\n    hasOutput = frozen.hasOutput\n    self.parsed = frozen.parsed\n    usage.unfreeze()\n    validation.unfreeze()\n    command.unfreeze()\n    strict = frozen.strict\n    completionCommand = frozen.completionCommand\n    parseFn = null\n    parseContext = null\n    frozen = undefined\n  }\n\n  self.boolean = function (bools) {\n    options.boolean.push.apply(options.boolean, [].concat(bools))\n    return self\n  }\n\n  self.array = function (arrays) {\n    options.array.push.apply(options.array, [].concat(arrays))\n    return self\n  }\n\n  self.nargs = function (key, n) {\n    if (typeof key === 'object') {\n      Object.keys(key).forEach(function (k) {\n        self.nargs(k, key[k])\n      })\n    } else {\n      options.narg[key] = n\n    }\n    return self\n  }\n\n  self.number = function (numbers) {\n    options.number.push.apply(options.number, [].concat(numbers))\n    return self\n  }\n\n  self.choices = function (key, values) {\n    if (typeof key === 'object') {\n      Object.keys(key).forEach(function (k) {\n        self.choices(k, key[k])\n      })\n    } else {\n      options.choices[key] = (options.choices[key] || []).concat(values)\n    }\n    return self\n  }\n\n  self.normalize = function (strings) {\n    options.normalize.push.apply(options.normalize, [].concat(strings))\n    return self\n  }\n\n  self.config = function (key, msg, parseFn) {\n    // allow to pass a configuration object\n    if (typeof key === 'object') {\n      options.configObjects = (options.configObjects || []).concat(key)\n      return self\n    }\n\n    // allow to provide a parsing function\n    if (typeof msg === 'function') {\n      parseFn = msg\n      msg = null\n    }\n\n    key = key || 'config'\n    self.describe(key, msg || usage.deferY18nLookup('Path to JSON config file'))\n    ;(Array.isArray(key) ? key : [key]).forEach(function (k) {\n      options.config[k] = parseFn || true\n    })\n    return self\n  }\n\n  self.example = function (cmd, description) {\n    usage.example(cmd, description)\n    return self\n  }\n\n  self.command = function (cmd, description, builder, handler) {\n    command.addHandler(cmd, description, builder, handler)\n    return self\n  }\n\n  self.commandDir = function (dir, opts) {\n    const req = parentRequire || require\n    command.addDirectory(dir, self.getContext(), req, require('get-caller-file')(), opts)\n    return self\n  }\n\n  self.string = function (strings) {\n    options.string.push.apply(options.string, [].concat(strings))\n    return self\n  }\n\n  // The 'defaults' alias is deprecated. It will be removed in the next major version.\n  self.default = self.defaults = function (key, value, defaultDescription) {\n    if (typeof key === 'object') {\n      Object.keys(key).forEach(function (k) {\n        self.default(k, key[k])\n      })\n    } else {\n      if (defaultDescription) options.defaultDescription[key] = defaultDescription\n      if (typeof value === 'function') {\n        if (!options.defaultDescription[key]) options.defaultDescription[key] = usage.functionDescription(value)\n        value = value.call()\n      }\n      options.default[key] = value\n    }\n    return self\n  }\n\n  self.alias = function (x, y) {\n    if (typeof x === 'object') {\n      Object.keys(x).forEach(function (key) {\n        self.alias(key, x[key])\n      })\n    } else {\n      options.alias[x] = (options.alias[x] || []).concat(y)\n    }\n    return self\n  }\n\n  self.coerce = function (key, fn) {\n    if (typeof key === 'object' && !Array.isArray(key)) {\n      Object.keys(key).forEach(function (k) {\n        self.coerce(k, key[k])\n      })\n    } else {\n      [].concat(key).forEach(function (k) {\n        options.coerce[k] = fn\n      })\n    }\n    return self\n  }\n\n  self.count = function (counts) {\n    options.count.push.apply(options.count, [].concat(counts))\n    return self\n  }\n\n  self.demand = self.required = self.require = function (keys, max, msg) {\n    // you can optionally provide a 'max' key,\n    // which will raise an exception if too many '_'\n    // options are provided.\n\n    if (Array.isArray(max)) {\n      max.forEach(function (key) {\n        self.demand(key, msg)\n      })\n      max = Infinity\n    } else if (typeof max !== 'number') {\n      msg = max\n      max = Infinity\n    }\n\n    if (typeof keys === 'number') {\n      if (!options.demanded._) options.demanded._ = { count: 0, msg: null, max: max }\n      options.demanded._.count = keys\n      options.demanded._.msg = msg\n    } else if (Array.isArray(keys)) {\n      keys.forEach(function (key) {\n        self.demand(key, msg)\n      })\n    } else {\n      if (typeof msg === 'string') {\n        options.demanded[keys] = { msg: msg }\n      } else if (msg === true || typeof msg === 'undefined') {\n        options.demanded[keys] = { msg: undefined }\n      }\n    }\n\n    return self\n  }\n\n  self.getDemanded = function () {\n    return options.demanded\n  }\n\n  self.requiresArg = function (requiresArgs) {\n    options.requiresArg.push.apply(options.requiresArg, [].concat(requiresArgs))\n    return self\n  }\n\n  self.skipValidation = function (skipValidations) {\n    options.skipValidation.push.apply(options.skipValidation, [].concat(skipValidations))\n    return self\n  }\n\n  self.implies = function (key, value) {\n    validation.implies(key, value)\n    return self\n  }\n\n  self.usage = function (msg, opts) {\n    if (!opts && typeof msg === 'object') {\n      opts = msg\n      msg = null\n    }\n\n    usage.usage(msg)\n\n    if (opts) self.options(opts)\n\n    return self\n  }\n\n  self.epilogue = self.epilog = function (msg) {\n    usage.epilog(msg)\n    return self\n  }\n\n  self.fail = function (f) {\n    usage.failFn(f)\n    return self\n  }\n\n  self.check = function (f) {\n    validation.check(f)\n    return self\n  }\n\n  self.describe = function (key, desc) {\n    options.key[key] = true\n    usage.describe(key, desc)\n    return self\n  }\n\n  self.global = function (globals) {\n    options.global.push.apply(options.global, [].concat(globals))\n    return self\n  }\n\n  self.pkgConf = function (key, path) {\n    var conf = null\n\n    var obj = pkgUp(path)\n\n    // If an object exists in the key, add it to options.configObjects\n    if (obj[key] && typeof obj[key] === 'object') {\n      conf = obj[key]\n      options.configObjects = (options.configObjects || []).concat(conf)\n    }\n\n    return self\n  }\n\n  var pkgs = {}\n  function pkgUp (path) {\n    var npath = path || '*'\n    if (pkgs[npath]) return pkgs[npath]\n    const readPkgUp = require('read-pkg-up')\n\n    var obj = {}\n    try {\n      obj = readPkgUp.sync({\n        cwd: path || require('require-main-filename')(parentRequire || require),\n        normalize: false\n      })\n    } catch (noop) {}\n\n    pkgs[npath] = obj.pkg || {}\n    return pkgs[npath]\n  }\n\n  var parseFn = null\n  var parseContext = null\n  self.parse = function (args, shortCircuit, _parseFn) {\n    // a context object can optionally be provided, this allows\n    // additional information to be passed to a command handler.\n    if (typeof shortCircuit === 'object') {\n      parseContext = shortCircuit\n      shortCircuit = _parseFn\n    }\n\n    // by providing a function as a second argument to\n    // parse you can capture output that would otherwise\n    // default to printing to stdout/stderr.\n    if (typeof shortCircuit === 'function') {\n      parseFn = shortCircuit\n      shortCircuit = null\n    }\n    // completion short-circuits the parsing process,\n    // skipping validation, etc.\n    if (!shortCircuit) processArgs = args\n\n    if (parseFn) {\n      freeze()\n      exitProcess = false\n    }\n\n    var parsed = parseArgs(args, shortCircuit)\n    if (parseFn) {\n      parseFn(exitError, parsed, output)\n      unfreeze()\n    }\n\n    return parsed\n  }\n\n  self._hasParseCallback = function () {\n    return !!parseFn\n  }\n\n  self.option = self.options = function (key, opt) {\n    if (typeof key === 'object') {\n      Object.keys(key).forEach(function (k) {\n        self.options(k, key[k])\n      })\n    } else {\n      if (typeof opt !== 'object') {\n        opt = {}\n      }\n\n      options.key[key] = true // track manually set keys.\n\n      if (opt.alias) self.alias(key, opt.alias)\n\n      var demand = opt.demand || opt.required || opt.require\n\n      if (demand) {\n        self.demand(key, demand)\n      }\n\n      if ('config' in opt) {\n        self.config(key, opt.configParser)\n      }\n\n      if ('default' in opt) {\n        self.default(key, opt.default)\n      }\n\n      if ('nargs' in opt) {\n        self.nargs(key, opt.nargs)\n      }\n\n      if ('normalize' in opt) {\n        self.normalize(key)\n      }\n\n      if ('choices' in opt) {\n        self.choices(key, opt.choices)\n      }\n\n      if ('coerce' in opt) {\n        self.coerce(key, opt.coerce)\n      }\n\n      if ('group' in opt) {\n        self.group(key, opt.group)\n      }\n\n      if (opt.global) {\n        self.global(key)\n      }\n\n      if (opt.boolean || opt.type === 'boolean') {\n        self.boolean(key)\n        if (opt.alias) self.boolean(opt.alias)\n      }\n\n      if (opt.array || opt.type === 'array') {\n        self.array(key)\n        if (opt.alias) self.array(opt.alias)\n      }\n\n      if (opt.number || opt.type === 'number') {\n        self.number(key)\n        if (opt.alias) self.number(opt.alias)\n      }\n\n      if (opt.string || opt.type === 'string') {\n        self.string(key)\n        if (opt.alias) self.string(opt.alias)\n      }\n\n      if (opt.count || opt.type === 'count') {\n        self.count(key)\n      }\n\n      if (opt.defaultDescription) {\n        options.defaultDescription[key] = opt.defaultDescription\n      }\n\n      if (opt.skipValidation) {\n        self.skipValidation(key)\n      }\n\n      var desc = opt.describe || opt.description || opt.desc\n      if (desc) {\n        self.describe(key, desc)\n      }\n\n      if (opt.requiresArg) {\n        self.requiresArg(key)\n      }\n    }\n\n    return self\n  }\n  self.getOptions = function () {\n    return options\n  }\n\n  self.group = function (opts, groupName) {\n    var existing = preservedGroups[groupName] || groups[groupName]\n    if (preservedGroups[groupName]) {\n      // the preserved group will be moved to the set of explicitly declared\n      // groups\n      delete preservedGroups[groupName]\n    }\n\n    var seen = {}\n    groups[groupName] = (existing || []).concat(opts).filter(function (key) {\n      if (seen[key]) return false\n      return (seen[key] = true)\n    })\n    return self\n  }\n  self.getGroups = function () {\n    // combine explicit and preserved groups. explicit groups should be first\n    return assign(groups, preservedGroups)\n  }\n\n  // as long as options.envPrefix is not undefined,\n  // parser will apply env vars matching prefix to argv\n  self.env = function (prefix) {\n    if (prefix === false) options.envPrefix = undefined\n    else options.envPrefix = prefix || ''\n    return self\n  }\n\n  self.wrap = function (cols) {\n    usage.wrap(cols)\n    return self\n  }\n\n  var strict = false\n  self.strict = function () {\n    strict = true\n    return self\n  }\n  self.getStrict = function () {\n    return strict\n  }\n\n  self.showHelp = function (level) {\n    if (!self.parsed) parseArgs(processArgs) // run parser, if it has not already been executed.\n    usage.showHelp(level)\n    return self\n  }\n\n  var versionOpt = null\n  self.version = function (opt, msg, ver) {\n    if (arguments.length === 0) {\n      ver = guessVersion()\n      opt = 'version'\n    } else if (arguments.length === 1) {\n      ver = opt\n      opt = 'version'\n    } else if (arguments.length === 2) {\n      ver = msg\n    }\n\n    versionOpt = opt\n    msg = msg || usage.deferY18nLookup('Show version number')\n\n    usage.version(ver || undefined)\n    self.boolean(versionOpt)\n    self.global(versionOpt)\n    self.describe(versionOpt, msg)\n    return self\n  }\n\n  function guessVersion () {\n    var obj = pkgUp()\n\n    return obj.version || 'unknown'\n  }\n\n  var helpOpt = null\n  var useHelpOptAsCommand = false // a call to .help() will enable this\n  self.addHelpOpt = self.help = function (opt, msg, addImplicitCmd) {\n    // argument shuffle\n    if (arguments.length === 0) {\n      useHelpOptAsCommand = true\n    } else if (arguments.length === 1) {\n      if (typeof opt === 'boolean') {\n        useHelpOptAsCommand = opt\n        opt = null\n      } else {\n        useHelpOptAsCommand = true\n      }\n    } else if (arguments.length === 2) {\n      if (typeof msg === 'boolean') {\n        useHelpOptAsCommand = msg\n        msg = null\n      } else {\n        useHelpOptAsCommand = true\n      }\n    } else {\n      useHelpOptAsCommand = Boolean(addImplicitCmd)\n    }\n    // use arguments, fallback to defaults for opt and msg\n    helpOpt = opt || 'help'\n    self.boolean(helpOpt)\n    self.global(helpOpt)\n    self.describe(helpOpt, msg || usage.deferY18nLookup('Show help'))\n    return self\n  }\n\n  self.showHelpOnFail = function (enabled, message) {\n    usage.showHelpOnFail(enabled, message)\n    return self\n  }\n\n  var exitProcess = true\n  self.exitProcess = function (enabled) {\n    if (typeof enabled !== 'boolean') {\n      enabled = true\n    }\n    exitProcess = enabled\n    return self\n  }\n  self.getExitProcess = function () {\n    return exitProcess\n  }\n\n  var completionCommand = null\n  self.completion = function (cmd, desc, fn) {\n    // a function to execute when generating\n    // completions can be provided as the second\n    // or third argument to completion.\n    if (typeof desc === 'function') {\n      fn = desc\n      desc = null\n    }\n\n    // register the completion command.\n    completionCommand = cmd || 'completion'\n    if (!desc && desc !== false) {\n      desc = 'generate bash completion script'\n    }\n    self.command(completionCommand, desc)\n\n    // a function can be provided\n    if (fn) completion.registerFunction(fn)\n\n    return self\n  }\n\n  self.showCompletionScript = function ($0) {\n    $0 = $0 || self.$0\n    _logger.log(completion.generateCompletionScript($0))\n    return self\n  }\n\n  self.getCompletion = function (args, done) {\n    completion.getCompletion(args, done)\n  }\n\n  self.locale = function (locale) {\n    if (arguments.length === 0) {\n      guessLocale()\n      return y18n.getLocale()\n    }\n    detectLocale = false\n    y18n.setLocale(locale)\n    return self\n  }\n\n  self.updateStrings = self.updateLocale = function (obj) {\n    detectLocale = false\n    y18n.updateLocale(obj)\n    return self\n  }\n\n  var detectLocale = true\n  self.detectLocale = function (detect) {\n    detectLocale = detect\n    return self\n  }\n  self.getDetectLocale = function () {\n    return detectLocale\n  }\n\n  var hasOutput = false\n  var exitError = null\n  // maybe exit, always capture\n  // context about why we wanted to exit.\n  self.exit = function (code, err) {\n    hasOutput = true\n    exitError = err\n    if (exitProcess) process.exit(code)\n  }\n\n  // we use a custom logger that buffers output,\n  // so that we can print to non-CLIs, e.g., chat-bots.\n  var _logger = {\n    log: function () {\n      var args = Array.prototype.slice.call(arguments)\n      if (!self._hasParseCallback()) console.log.apply(console, args)\n      hasOutput = true\n      if (output.length) output += '\\n'\n      output += args.join(' ')\n    },\n    error: function () {\n      var args = Array.prototype.slice.call(arguments)\n      if (!self._hasParseCallback()) console.error.apply(console, args)\n      hasOutput = true\n      if (output.length) output += '\\n'\n      output += args.join(' ')\n    }\n  }\n  self._getLoggerInstance = function () {\n    return _logger\n  }\n  // has yargs output an error our help\n  // message in the current execution context.\n  self._hasOutput = function () {\n    return hasOutput\n  }\n\n  var recommendCommands\n  self.recommendCommands = function () {\n    recommendCommands = true\n    return self\n  }\n\n  self.getUsageInstance = function () {\n    return usage\n  }\n\n  self.getValidationInstance = function () {\n    return validation\n  }\n\n  self.getCommandInstance = function () {\n    return command\n  }\n\n  self.terminalWidth = function () {\n    return require('window-size').width\n  }\n\n  Object.defineProperty(self, 'argv', {\n    get: function () {\n      var args = null\n\n      try {\n        args = parseArgs(processArgs)\n      } catch (err) {\n        usage.fail(err.message, err)\n      }\n\n      return args\n    },\n    enumerable: true\n  })\n\n  function parseArgs (args, shortCircuit) {\n    options.__ = y18n.__\n    options.configuration = pkgUp(cwd)['yargs'] || {}\n    const parsed = Parser.detailed(args, options)\n    var argv = parsed.argv\n    if (parseContext) argv = assign(parseContext, argv)\n    var aliases = parsed.aliases\n\n    argv.$0 = self.$0\n    self.parsed = parsed\n\n    guessLocale() // guess locale lazily, so that it can be turned off in chain.\n\n    // while building up the argv object, there\n    // are two passes through the parser. If completion\n    // is being performed short-circuit on the first pass.\n    if (shortCircuit) {\n      return argv\n    }\n\n    if (argv._.length) {\n      // check for helpOpt in argv._ before running commands\n      // assumes helpOpt must be valid if useHelpOptAsCommand is true\n      if (useHelpOptAsCommand) {\n        // consider any multi-char helpOpt alias as a valid help command\n        // unless all helpOpt aliases are single-char\n        // note that parsed.aliases is a normalized bidirectional map :)\n        var helpCmds = [helpOpt].concat(aliases[helpOpt])\n        var multiCharHelpCmds = helpCmds.filter(function (k) {\n          return k.length > 1\n        })\n        if (multiCharHelpCmds.length) helpCmds = multiCharHelpCmds\n        // look for and strip any helpCmds from argv._\n        argv._ = argv._.filter(function (cmd) {\n          if (~helpCmds.indexOf(cmd)) {\n            argv[helpOpt] = true\n            return false\n          }\n          return true\n        })\n      }\n\n      // if there's a handler associated with a\n      // command defer processing to it.\n      var handlerKeys = command.getCommands()\n      if (handlerKeys.length) {\n        var firstUnknownCommand\n        for (var i = 0, cmd; (cmd = argv._[i]) !== undefined; i++) {\n          if (~handlerKeys.indexOf(cmd) && cmd !== completionCommand) {\n            setPlaceholderKeys(argv)\n            return command.runCommand(cmd, self, parsed)\n          } else if (!firstUnknownCommand && cmd !== completionCommand) {\n            firstUnknownCommand = cmd\n          }\n        }\n\n        // recommend a command if recommendCommands() has\n        // been enabled, and no commands were found to execute\n        if (recommendCommands && firstUnknownCommand) {\n          validation.recommendCommands(firstUnknownCommand, handlerKeys)\n        }\n      }\n\n      // generate a completion script for adding to ~/.bashrc.\n      if (completionCommand && ~argv._.indexOf(completionCommand) && !argv[completion.completionKey]) {\n        if (exitProcess) setBlocking(true)\n        self.showCompletionScript()\n        self.exit(0)\n      }\n    }\n\n    // we must run completions first, a user might\n    // want to complete the --help or --version option.\n    if (completion.completionKey in argv) {\n      if (exitProcess) setBlocking(true)\n\n      // we allow for asynchronous completions,\n      // e.g., loading in a list of commands from an API.\n      var completionArgs = args.slice(args.indexOf('--' + completion.completionKey) + 1)\n      completion.getCompletion(completionArgs, function (completions) {\n        ;(completions || []).forEach(function (completion) {\n          _logger.log(completion)\n        })\n\n        self.exit(0)\n      })\n      return setPlaceholderKeys(argv)\n    }\n\n    var skipValidation = false\n\n    // Handle 'help' and 'version' options\n    Object.keys(argv).forEach(function (key) {\n      if (key === helpOpt && argv[key]) {\n        if (exitProcess) setBlocking(true)\n\n        skipValidation = true\n        self.showHelp('log')\n        self.exit(0)\n      } else if (key === versionOpt && argv[key]) {\n        if (exitProcess) setBlocking(true)\n\n        skipValidation = true\n        usage.showVersion()\n        self.exit(0)\n      }\n    })\n\n    // Check if any of the options to skip validation were provided\n    if (!skipValidation && options.skipValidation.length > 0) {\n      skipValidation = Object.keys(argv).some(function (key) {\n        return options.skipValidation.indexOf(key) >= 0 && argv[key] === true\n      })\n    }\n\n    // If the help or version options where used and exitProcess is false,\n    // or if explicitly skipped, we won't run validations\n    if (!skipValidation) {\n      if (parsed.error) throw parsed.error\n\n      // if we're executed via bash completion, don't\n      // bother with validation.\n      if (!argv[completion.completionKey]) {\n        validation.nonOptionCount(argv)\n        validation.missingArgumentValue(argv)\n        validation.requiredArguments(argv)\n        if (strict) validation.unknownArguments(argv, aliases)\n        validation.customChecks(argv, aliases)\n        validation.limitedChoices(argv)\n        validation.implications(argv)\n      }\n    }\n\n    return setPlaceholderKeys(argv)\n  }\n\n  function guessLocale () {\n    if (!detectLocale) return\n\n    try {\n      const osLocale = require('os-locale')\n      self.locale(osLocale.sync({ spawn: false }))\n    } catch (err) {\n      // if we explode looking up locale just noop\n      // we'll keep using the default language 'en'.\n    }\n  }\n\n  function setPlaceholderKeys (argv) {\n    Object.keys(options.key).forEach(function (key) {\n      // don't set placeholder keys for dot\n      // notation options 'foo.bar'.\n      if (~key.indexOf('.')) return\n      if (typeof argv[key] === 'undefined') argv[key] = undefined\n    })\n    return argv\n  }\n\n  return self\n}\n\n// rebase an absolute path to a relative one with respect to a base directory\n// exported for tests\nexports.rebase = rebase\nfunction rebase (base, dir) {\n  return path.relative(base, dir)\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}