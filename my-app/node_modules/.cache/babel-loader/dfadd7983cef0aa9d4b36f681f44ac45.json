{"ast":null,"code":"var stringWidth = require('string-width');\nvar stripAnsi = require('strip-ansi');\nvar wrap = require('wrap-ansi');\nvar align = {\n  right: alignRight,\n  center: alignCenter\n};\nvar top = 0;\nvar right = 1;\nvar bottom = 2;\nvar left = 3;\nfunction UI(opts) {\n  this.width = opts.width;\n  this.wrap = opts.wrap;\n  this.rows = [];\n}\nUI.prototype.span = function () {\n  var cols = this.div.apply(this, arguments);\n  cols.span = true;\n};\nUI.prototype.div = function () {\n  if (arguments.length === 0) this.div('');\n  if (this.wrap && this._shouldApplyLayoutDSL.apply(this, arguments)) {\n    return this._applyLayoutDSL(arguments[0]);\n  }\n  var cols = [];\n  for (var i = 0, arg; (arg = arguments[i]) !== undefined; i++) {\n    if (typeof arg === 'string') cols.push(this._colFromString(arg));else cols.push(arg);\n  }\n  this.rows.push(cols);\n  return cols;\n};\nUI.prototype._shouldApplyLayoutDSL = function () {\n  return arguments.length === 1 && typeof arguments[0] === 'string' && /[\\t\\n]/.test(arguments[0]);\n};\nUI.prototype._applyLayoutDSL = function (str) {\n  var _this = this;\n  var rows = str.split('\\n');\n  var leftColumnWidth = 0;\n\n  // simple heuristic for layout, make sure the\n  // second column lines up along the left-hand.\n  // don't allow the first column to take up more\n  // than 50% of the screen.\n  rows.forEach(function (row) {\n    var columns = row.split('\\t');\n    if (columns.length > 1 && stringWidth(columns[0]) > leftColumnWidth) {\n      leftColumnWidth = Math.min(Math.floor(_this.width * 0.5), stringWidth(columns[0]));\n    }\n  });\n\n  // generate a table:\n  //  replacing ' ' with padding calculations.\n  //  using the algorithmically generated width.\n  rows.forEach(function (row) {\n    var columns = row.split('\\t');\n    _this.div.apply(_this, columns.map(function (r, i) {\n      return {\n        text: r.trim(),\n        padding: _this._measurePadding(r),\n        width: i === 0 && columns.length > 1 ? leftColumnWidth : undefined\n      };\n    }));\n  });\n  return this.rows[this.rows.length - 1];\n};\nUI.prototype._colFromString = function (str) {\n  return {\n    text: str,\n    padding: this._measurePadding(str)\n  };\n};\nUI.prototype._measurePadding = function (str) {\n  // measure padding without ansi escape codes\n  var noAnsi = stripAnsi(str);\n  return [0, noAnsi.match(/\\s*$/)[0].length, 0, noAnsi.match(/^\\s*/)[0].length];\n};\nUI.prototype.toString = function () {\n  var _this = this;\n  var lines = [];\n  _this.rows.forEach(function (row, i) {\n    _this.rowToString(row, lines);\n  });\n\n  // don't display any lines with the\n  // hidden flag set.\n  lines = lines.filter(function (line) {\n    return !line.hidden;\n  });\n  return lines.map(function (line) {\n    return line.text;\n  }).join('\\n');\n};\nUI.prototype.rowToString = function (row, lines) {\n  var _this = this;\n  var padding;\n  var rrows = this._rasterize(row);\n  var str = '';\n  var ts;\n  var width;\n  var wrapWidth;\n  rrows.forEach(function (rrow, r) {\n    str = '';\n    rrow.forEach(function (col, c) {\n      ts = ''; // temporary string used during alignment/padding.\n      width = row[c].width; // the width with padding.\n      wrapWidth = _this._negatePadding(row[c]); // the width without padding.\n\n      ts += col;\n      for (var i = 0; i < wrapWidth - stringWidth(col); i++) {\n        ts += ' ';\n      }\n\n      // align the string within its column.\n      if (row[c].align && row[c].align !== 'left' && _this.wrap) {\n        ts = align[row[c].align](ts, wrapWidth);\n        if (stringWidth(ts) < wrapWidth) ts += new Array(width - stringWidth(ts)).join(' ');\n      }\n\n      // apply border and padding to string.\n      padding = row[c].padding || [0, 0, 0, 0];\n      if (padding[left]) str += new Array(padding[left] + 1).join(' ');\n      str += addBorder(row[c], ts, '| ');\n      str += ts;\n      str += addBorder(row[c], ts, ' |');\n      if (padding[right]) str += new Array(padding[right] + 1).join(' ');\n\n      // if prior row is span, try to render the\n      // current row on the prior line.\n      if (r === 0 && lines.length > 0) {\n        str = _this._renderInline(str, lines[lines.length - 1]);\n      }\n    });\n\n    // remove trailing whitespace.\n    lines.push({\n      text: str.replace(/ +$/, ''),\n      span: row.span\n    });\n  });\n  return lines;\n};\nfunction addBorder(col, ts, style) {\n  if (col.border) {\n    if (/[.']-+[.']/.test(ts)) return '';else if (ts.trim().length) return style;else return '  ';\n  }\n  return '';\n}\n\n// if the full 'source' can render in\n// the target line, do so.\nUI.prototype._renderInline = function (source, previousLine) {\n  var leadingWhitespace = source.match(/^ */)[0].length;\n  var target = previousLine.text;\n  var targetTextWidth = stringWidth(target.trimRight());\n  if (!previousLine.span) return source;\n\n  // if we're not applying wrapping logic,\n  // just always append to the span.\n  if (!this.wrap) {\n    previousLine.hidden = true;\n    return target + source;\n  }\n  if (leadingWhitespace < targetTextWidth) return source;\n  previousLine.hidden = true;\n  return target.trimRight() + new Array(leadingWhitespace - targetTextWidth + 1).join(' ') + source.trimLeft();\n};\nUI.prototype._rasterize = function (row) {\n  var _this = this;\n  var i;\n  var rrow;\n  var rrows = [];\n  var widths = this._columnWidths(row);\n  var wrapped;\n\n  // word wrap all columns, and create\n  // a data-structure that is easy to rasterize.\n  row.forEach(function (col, c) {\n    // leave room for left and right padding.\n    col.width = widths[c];\n    if (_this.wrap) wrapped = wrap(col.text, _this._negatePadding(col), {\n      hard: true\n    }).split('\\n');else wrapped = col.text.split('\\n');\n    if (col.border) {\n      wrapped.unshift('.' + new Array(_this._negatePadding(col) + 3).join('-') + '.');\n      wrapped.push(\"'\" + new Array(_this._negatePadding(col) + 3).join('-') + \"'\");\n    }\n\n    // add top and bottom padding.\n    if (col.padding) {\n      for (i = 0; i < (col.padding[top] || 0); i++) wrapped.unshift('');\n      for (i = 0; i < (col.padding[bottom] || 0); i++) wrapped.push('');\n    }\n    wrapped.forEach(function (str, r) {\n      if (!rrows[r]) rrows.push([]);\n      rrow = rrows[r];\n      for (var i = 0; i < c; i++) {\n        if (rrow[i] === undefined) rrow.push('');\n      }\n      rrow.push(str);\n    });\n  });\n  return rrows;\n};\nUI.prototype._negatePadding = function (col) {\n  var wrapWidth = col.width;\n  if (col.padding) wrapWidth -= (col.padding[left] || 0) + (col.padding[right] || 0);\n  if (col.border) wrapWidth -= 4;\n  return wrapWidth;\n};\nUI.prototype._columnWidths = function (row) {\n  var _this = this;\n  var widths = [];\n  var unset = row.length;\n  var unsetWidth;\n  var remainingWidth = this.width;\n\n  // column widths can be set in config.\n  row.forEach(function (col, i) {\n    if (col.width) {\n      unset--;\n      widths[i] = col.width;\n      remainingWidth -= col.width;\n    } else {\n      widths[i] = undefined;\n    }\n  });\n\n  // any unset widths should be calculated.\n  if (unset) unsetWidth = Math.floor(remainingWidth / unset);\n  widths.forEach(function (w, i) {\n    if (!_this.wrap) widths[i] = row[i].width || stringWidth(row[i].text);else if (w === undefined) widths[i] = Math.max(unsetWidth, _minWidth(row[i]));\n  });\n  return widths;\n};\n\n// calculates the minimum width of\n// a column, based on padding preferences.\nfunction _minWidth(col) {\n  var padding = col.padding || [];\n  var minWidth = 1 + (padding[left] || 0) + (padding[right] || 0);\n  if (col.border) minWidth += 4;\n  return minWidth;\n}\nfunction alignRight(str, width) {\n  str = str.trim();\n  var padding = '';\n  var strWidth = stringWidth(str);\n  if (strWidth < width) {\n    padding = new Array(width - strWidth + 1).join(' ');\n  }\n  return padding + str;\n}\nfunction alignCenter(str, width) {\n  str = str.trim();\n  var padding = '';\n  var strWidth = stringWidth(str.trim());\n  if (strWidth < width) {\n    padding = new Array(parseInt((width - strWidth) / 2, 10) + 1).join(' ');\n  }\n  return padding + str;\n}\nmodule.exports = function (opts) {\n  opts = opts || {};\n  return new UI({\n    width: (opts || {}).width || 80,\n    wrap: typeof opts.wrap === 'boolean' ? opts.wrap : true\n  });\n};","map":{"version":3,"names":["stringWidth","require","stripAnsi","wrap","align","right","alignRight","center","alignCenter","top","bottom","left","UI","opts","width","rows","prototype","span","cols","div","apply","arguments","length","_shouldApplyLayoutDSL","_applyLayoutDSL","i","arg","undefined","push","_colFromString","test","str","_this","split","leftColumnWidth","forEach","row","columns","Math","min","floor","map","r","text","trim","padding","_measurePadding","noAnsi","match","toString","lines","rowToString","filter","line","hidden","join","rrows","_rasterize","ts","wrapWidth","rrow","col","c","_negatePadding","Array","addBorder","_renderInline","replace","style","border","source","previousLine","leadingWhitespace","target","targetTextWidth","trimRight","trimLeft","widths","_columnWidths","wrapped","hard","unshift","unset","unsetWidth","remainingWidth","w","max","_minWidth","minWidth","strWidth","parseInt","module","exports"],"sources":["/home/user/Рабочий стол/pizza/project/node_modules/cliui/index.js"],"sourcesContent":["var stringWidth = require('string-width')\nvar stripAnsi = require('strip-ansi')\nvar wrap = require('wrap-ansi')\nvar align = {\n  right: alignRight,\n  center: alignCenter\n}\nvar top = 0\nvar right = 1\nvar bottom = 2\nvar left = 3\n\nfunction UI (opts) {\n  this.width = opts.width\n  this.wrap = opts.wrap\n  this.rows = []\n}\n\nUI.prototype.span = function () {\n  var cols = this.div.apply(this, arguments)\n  cols.span = true\n}\n\nUI.prototype.div = function () {\n  if (arguments.length === 0) this.div('')\n  if (this.wrap && this._shouldApplyLayoutDSL.apply(this, arguments)) {\n    return this._applyLayoutDSL(arguments[0])\n  }\n\n  var cols = []\n\n  for (var i = 0, arg; (arg = arguments[i]) !== undefined; i++) {\n    if (typeof arg === 'string') cols.push(this._colFromString(arg))\n    else cols.push(arg)\n  }\n\n  this.rows.push(cols)\n  return cols\n}\n\nUI.prototype._shouldApplyLayoutDSL = function () {\n  return arguments.length === 1 && typeof arguments[0] === 'string' &&\n    /[\\t\\n]/.test(arguments[0])\n}\n\nUI.prototype._applyLayoutDSL = function (str) {\n  var _this = this\n  var rows = str.split('\\n')\n  var leftColumnWidth = 0\n\n  // simple heuristic for layout, make sure the\n  // second column lines up along the left-hand.\n  // don't allow the first column to take up more\n  // than 50% of the screen.\n  rows.forEach(function (row) {\n    var columns = row.split('\\t')\n    if (columns.length > 1 && stringWidth(columns[0]) > leftColumnWidth) {\n      leftColumnWidth = Math.min(\n        Math.floor(_this.width * 0.5),\n        stringWidth(columns[0])\n      )\n    }\n  })\n\n  // generate a table:\n  //  replacing ' ' with padding calculations.\n  //  using the algorithmically generated width.\n  rows.forEach(function (row) {\n    var columns = row.split('\\t')\n    _this.div.apply(_this, columns.map(function (r, i) {\n      return {\n        text: r.trim(),\n        padding: _this._measurePadding(r),\n        width: (i === 0 && columns.length > 1) ? leftColumnWidth : undefined\n      }\n    }))\n  })\n\n  return this.rows[this.rows.length - 1]\n}\n\nUI.prototype._colFromString = function (str) {\n  return {\n    text: str,\n    padding: this._measurePadding(str)\n  }\n}\n\nUI.prototype._measurePadding = function (str) {\n  // measure padding without ansi escape codes\n  var noAnsi = stripAnsi(str)\n  return [0, noAnsi.match(/\\s*$/)[0].length, 0, noAnsi.match(/^\\s*/)[0].length]\n}\n\nUI.prototype.toString = function () {\n  var _this = this\n  var lines = []\n\n  _this.rows.forEach(function (row, i) {\n    _this.rowToString(row, lines)\n  })\n\n  // don't display any lines with the\n  // hidden flag set.\n  lines = lines.filter(function (line) {\n    return !line.hidden\n  })\n\n  return lines.map(function (line) {\n    return line.text\n  }).join('\\n')\n}\n\nUI.prototype.rowToString = function (row, lines) {\n  var _this = this\n  var padding\n  var rrows = this._rasterize(row)\n  var str = ''\n  var ts\n  var width\n  var wrapWidth\n\n  rrows.forEach(function (rrow, r) {\n    str = ''\n    rrow.forEach(function (col, c) {\n      ts = '' // temporary string used during alignment/padding.\n      width = row[c].width // the width with padding.\n      wrapWidth = _this._negatePadding(row[c]) // the width without padding.\n\n      ts += col\n\n      for (var i = 0; i < wrapWidth - stringWidth(col); i++) {\n        ts += ' '\n      }\n\n      // align the string within its column.\n      if (row[c].align && row[c].align !== 'left' && _this.wrap) {\n        ts = align[row[c].align](ts, wrapWidth)\n        if (stringWidth(ts) < wrapWidth) ts += new Array(width - stringWidth(ts)).join(' ')\n      }\n\n      // apply border and padding to string.\n      padding = row[c].padding || [0, 0, 0, 0]\n      if (padding[left]) str += new Array(padding[left] + 1).join(' ')\n      str += addBorder(row[c], ts, '| ')\n      str += ts\n      str += addBorder(row[c], ts, ' |')\n      if (padding[right]) str += new Array(padding[right] + 1).join(' ')\n\n      // if prior row is span, try to render the\n      // current row on the prior line.\n      if (r === 0 && lines.length > 0) {\n        str = _this._renderInline(str, lines[lines.length - 1])\n      }\n    })\n\n    // remove trailing whitespace.\n    lines.push({\n      text: str.replace(/ +$/, ''),\n      span: row.span\n    })\n  })\n\n  return lines\n}\n\nfunction addBorder (col, ts, style) {\n  if (col.border) {\n    if (/[.']-+[.']/.test(ts)) return ''\n    else if (ts.trim().length) return style\n    else return '  '\n  }\n  return ''\n}\n\n// if the full 'source' can render in\n// the target line, do so.\nUI.prototype._renderInline = function (source, previousLine) {\n  var leadingWhitespace = source.match(/^ */)[0].length\n  var target = previousLine.text\n  var targetTextWidth = stringWidth(target.trimRight())\n\n  if (!previousLine.span) return source\n\n  // if we're not applying wrapping logic,\n  // just always append to the span.\n  if (!this.wrap) {\n    previousLine.hidden = true\n    return target + source\n  }\n\n  if (leadingWhitespace < targetTextWidth) return source\n\n  previousLine.hidden = true\n\n  return target.trimRight() + new Array(leadingWhitespace - targetTextWidth + 1).join(' ') + source.trimLeft()\n}\n\nUI.prototype._rasterize = function (row) {\n  var _this = this\n  var i\n  var rrow\n  var rrows = []\n  var widths = this._columnWidths(row)\n  var wrapped\n\n  // word wrap all columns, and create\n  // a data-structure that is easy to rasterize.\n  row.forEach(function (col, c) {\n    // leave room for left and right padding.\n    col.width = widths[c]\n    if (_this.wrap) wrapped = wrap(col.text, _this._negatePadding(col), {hard: true}).split('\\n')\n    else wrapped = col.text.split('\\n')\n\n    if (col.border) {\n      wrapped.unshift('.' + new Array(_this._negatePadding(col) + 3).join('-') + '.')\n      wrapped.push(\"'\" + new Array(_this._negatePadding(col) + 3).join('-') + \"'\")\n    }\n\n    // add top and bottom padding.\n    if (col.padding) {\n      for (i = 0; i < (col.padding[top] || 0); i++) wrapped.unshift('')\n      for (i = 0; i < (col.padding[bottom] || 0); i++) wrapped.push('')\n    }\n\n    wrapped.forEach(function (str, r) {\n      if (!rrows[r]) rrows.push([])\n\n      rrow = rrows[r]\n\n      for (var i = 0; i < c; i++) {\n        if (rrow[i] === undefined) rrow.push('')\n      }\n      rrow.push(str)\n    })\n  })\n\n  return rrows\n}\n\nUI.prototype._negatePadding = function (col) {\n  var wrapWidth = col.width\n  if (col.padding) wrapWidth -= (col.padding[left] || 0) + (col.padding[right] || 0)\n  if (col.border) wrapWidth -= 4\n  return wrapWidth\n}\n\nUI.prototype._columnWidths = function (row) {\n  var _this = this\n  var widths = []\n  var unset = row.length\n  var unsetWidth\n  var remainingWidth = this.width\n\n  // column widths can be set in config.\n  row.forEach(function (col, i) {\n    if (col.width) {\n      unset--\n      widths[i] = col.width\n      remainingWidth -= col.width\n    } else {\n      widths[i] = undefined\n    }\n  })\n\n  // any unset widths should be calculated.\n  if (unset) unsetWidth = Math.floor(remainingWidth / unset)\n  widths.forEach(function (w, i) {\n    if (!_this.wrap) widths[i] = row[i].width || stringWidth(row[i].text)\n    else if (w === undefined) widths[i] = Math.max(unsetWidth, _minWidth(row[i]))\n  })\n\n  return widths\n}\n\n// calculates the minimum width of\n// a column, based on padding preferences.\nfunction _minWidth (col) {\n  var padding = col.padding || []\n  var minWidth = 1 + (padding[left] || 0) + (padding[right] || 0)\n  if (col.border) minWidth += 4\n  return minWidth\n}\n\nfunction alignRight (str, width) {\n  str = str.trim()\n  var padding = ''\n  var strWidth = stringWidth(str)\n\n  if (strWidth < width) {\n    padding = new Array(width - strWidth + 1).join(' ')\n  }\n\n  return padding + str\n}\n\nfunction alignCenter (str, width) {\n  str = str.trim()\n  var padding = ''\n  var strWidth = stringWidth(str.trim())\n\n  if (strWidth < width) {\n    padding = new Array(parseInt((width - strWidth) / 2, 10) + 1).join(' ')\n  }\n\n  return padding + str\n}\n\nmodule.exports = function (opts) {\n  opts = opts || {}\n\n  return new UI({\n    width: (opts || {}).width || 80,\n    wrap: typeof opts.wrap === 'boolean' ? opts.wrap : true\n  })\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}