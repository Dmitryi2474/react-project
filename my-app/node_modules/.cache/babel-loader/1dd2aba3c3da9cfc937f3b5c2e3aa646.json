{"ast":null,"code":"/*!\n * preserve <https://github.com/jonschlinkert/preserve>\n *\n * Copyright (c) 2014-2015, Jon Schlinkert.\n * Licensed under the MIT license.\n */\n\n'use strict';\n\n/**\n * Replace tokens in `str` with a temporary, heuristic placeholder.\n *\n * ```js\n * tokens.before('{a\\\\,b}');\n * //=> '{__ID1__}'\n * ```\n *\n * @param  {String} `str`\n * @return {String} String with placeholders.\n * @api public\n */\nexports.before = function before(str, re) {\n  return str.replace(re, function (match) {\n    var id = randomize();\n    cache[id] = match;\n    return '__ID' + id + '__';\n  });\n};\n\n/**\n * Replace placeholders in `str` with original tokens.\n *\n * ```js\n * tokens.after('{__ID1__}');\n * //=> '{a\\\\,b}'\n * ```\n *\n * @param  {String} `str` String with placeholders\n * @return {String} `str` String with original tokens.\n * @api public\n */\n\nexports.after = function after(str) {\n  return str.replace(/__ID(.{5})__/g, function (_, id) {\n    return cache[id];\n  });\n};\nfunction randomize() {\n  return Math.random().toString().slice(2, 7);\n}\nvar cache = {};","map":{"version":3,"names":["exports","before","str","re","replace","match","id","randomize","cache","after","_","Math","random","toString","slice"],"sources":["/home/user/Рабочий стол/pizza/project/node_modules/preserve/index.js"],"sourcesContent":["/*!\n * preserve <https://github.com/jonschlinkert/preserve>\n *\n * Copyright (c) 2014-2015, Jon Schlinkert.\n * Licensed under the MIT license.\n */\n\n'use strict';\n\n/**\n * Replace tokens in `str` with a temporary, heuristic placeholder.\n *\n * ```js\n * tokens.before('{a\\\\,b}');\n * //=> '{__ID1__}'\n * ```\n *\n * @param  {String} `str`\n * @return {String} String with placeholders.\n * @api public\n */\n\nexports.before = function before(str, re) {\n  return str.replace(re, function (match) {\n    var id = randomize();\n    cache[id] = match;\n    return '__ID' + id + '__';\n  });\n};\n\n/**\n * Replace placeholders in `str` with original tokens.\n *\n * ```js\n * tokens.after('{__ID1__}');\n * //=> '{a\\\\,b}'\n * ```\n *\n * @param  {String} `str` String with placeholders\n * @return {String} `str` String with original tokens.\n * @api public\n */\n\nexports.after = function after(str) {\n  return str.replace(/__ID(.{5})__/g, function (_, id) {\n    return cache[id];\n  });\n};\n\nfunction randomize() {\n  return Math.random().toString().slice(2, 7);\n}\n\nvar cache = {};"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA,YAAY;;AAEZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEAA,OAAO,CAACC,MAAM,GAAG,SAASA,MAAM,CAACC,GAAG,EAAEC,EAAE,EAAE;EACxC,OAAOD,GAAG,CAACE,OAAO,CAACD,EAAE,EAAE,UAAUE,KAAK,EAAE;IACtC,IAAIC,EAAE,GAAGC,SAAS,EAAE;IACpBC,KAAK,CAACF,EAAE,CAAC,GAAGD,KAAK;IACjB,OAAO,MAAM,GAAGC,EAAE,GAAG,IAAI;EAC3B,CAAC,CAAC;AACJ,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAN,OAAO,CAACS,KAAK,GAAG,SAASA,KAAK,CAACP,GAAG,EAAE;EAClC,OAAOA,GAAG,CAACE,OAAO,CAAC,eAAe,EAAE,UAAUM,CAAC,EAAEJ,EAAE,EAAE;IACnD,OAAOE,KAAK,CAACF,EAAE,CAAC;EAClB,CAAC,CAAC;AACJ,CAAC;AAED,SAASC,SAAS,GAAG;EACnB,OAAOI,IAAI,CAACC,MAAM,EAAE,CAACC,QAAQ,EAAE,CAACC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC;AAC7C;AAEA,IAAIN,KAAK,GAAG,CAAC,CAAC"},"metadata":{},"sourceType":"script"}