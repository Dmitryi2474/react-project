{"ast":null,"code":"\"use strict\";\n\nvar connectUtils = require(\"./connect-utils\");\nvar config = require(\"./config\");\nvar lrSnippet = require(\"resp-modifier\");\nvar path = require(\"path\");\nvar _ = require(\"./lodash.custom\");\nvar utils = require(\"./utils\");\nvar fs = require(\"fs\");\nvar path = require(\"path\");\n/**\n * Utils for snippet injection\n */\nvar snippetUtils = {\n  /**\n   * @param {String} url\n   * @param {Array} excludeList\n   * @returns {boolean}\n   */\n  isExcluded: function (url, excludeList) {\n    var extension = path.extname(url);\n    if (extension) {\n      if (~url.indexOf(\"?\")) {\n        return true;\n      }\n      extension = extension.slice(1);\n      return _.includes(excludeList, extension);\n    }\n    return false;\n  },\n  /**\n   * @param {String} snippet\n   * @param {Object} options\n   * @returns {{match: RegExp, fn: Function}}\n   */\n  getRegex: function (snippet, options) {\n    var fn = options.getIn([\"rule\", \"fn\"]);\n    return {\n      match: options.getIn([\"rule\", \"match\"]),\n      fn: function (req, res, match) {\n        return fn.apply(null, [snippet, match]);\n      },\n      once: true,\n      id: \"bs-snippet\"\n    };\n  },\n  getSnippetMiddleware: function (snippet, options, rewriteRules) {\n    return lrSnippet.create(snippetUtils.getRules(snippet, options, rewriteRules));\n  },\n  getRules: function (snippet, options, rewriteRules) {\n    var rules = [snippetUtils.getRegex(snippet, options)];\n    if (rewriteRules) {\n      rules = rules.concat(rewriteRules);\n    }\n    return {\n      rules: rules,\n      blacklist: utils.arrayify(options.get(\"blacklist\")),\n      whitelist: utils.arrayify(options.get(\"whitelist\"))\n    };\n  },\n  /**\n   * @param {Object} req\n   * @param {Array} [excludeList]\n   * @returns {Object}\n   */\n  isOldIe: function (excludeList) {\n    return function (req, res, next) {\n      var ua = req.headers[\"user-agent\"];\n      var match = /MSIE (\\d)\\.\\d/.exec(ua);\n      if (match) {\n        if (parseInt(match[1], 10) < 9) {\n          if (!snippetUtils.isExcluded(req.url, excludeList)) {\n            req.headers[\"accept\"] = \"text/html\";\n          }\n        }\n      }\n      next();\n    };\n  },\n  /**\n   * @param {Number} port\n   * @param {BrowserSync.options} options\n   * @returns {String}\n   */\n  getClientJs: function (port, options) {\n    return function () {\n      var script = options.get(\"minify\") ? \"index.min.js\" : \"index.js\";\n      var client = fs.readFileSync(require.resolve(\"browser-sync-client/dist/\" + script), \"utf8\");\n      return [connectUtils.socketConnector(options), client].join(\";\\n\");\n    };\n  }\n};\nmodule.exports.utils = snippetUtils;","map":{"version":3,"mappings":"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","names":["connectUtils","require","config","lrSnippet","path","_","utils","fs","snippetUtils","isExcluded","url","excludeList","extension","extname","indexOf","slice","includes","getRegex","snippet","options","fn","getIn","match","req","res","apply","once","id","getSnippetMiddleware","rewriteRules","create","getRules","rules","concat","blacklist","arrayify","get","whitelist","isOldIe","next","ua","headers","exec","parseInt","getClientJs","port","script","client","readFileSync","resolve","socketConnector","join","module","exports"],"sources":["../lib/snippet.js"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}