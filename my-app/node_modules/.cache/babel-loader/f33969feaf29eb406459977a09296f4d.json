{"ast":null,"code":"'use strict';\n\n// most of this code was written by Andrew Kelley\n// licensed under the BSD license: see\n// https://github.com/andrewrk/node-mv/blob/master/package.json\n\n// this needs a cleanup\nconst u = require('universalify').fromCallback;\nconst fs = require('graceful-fs');\nconst ncp = require('../copy/ncp');\nconst path = require('path');\nconst remove = require('../remove').remove;\nconst mkdirp = require('../mkdirs').mkdirs;\nfunction move(source, dest, options, callback) {\n  if (typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n  const shouldMkdirp = 'mkdirp' in options ? options.mkdirp : true;\n  const overwrite = options.overwrite || options.clobber || false;\n  if (shouldMkdirp) {\n    mkdirs();\n  } else {\n    doRename();\n  }\n  function mkdirs() {\n    mkdirp(path.dirname(dest), err => {\n      if (err) return callback(err);\n      doRename();\n    });\n  }\n  function doRename() {\n    if (path.resolve(source) === path.resolve(dest)) {\n      fs.access(source, callback);\n    } else if (overwrite) {\n      fs.rename(source, dest, err => {\n        if (!err) return callback();\n        if (err.code === 'ENOTEMPTY' || err.code === 'EEXIST') {\n          remove(dest, err => {\n            if (err) return callback(err);\n            options.overwrite = false; // just overwriteed it, no need to do it again\n            move(source, dest, options, callback);\n          });\n          return;\n        }\n\n        // weird Windows shit\n        if (err.code === 'EPERM') {\n          setTimeout(() => {\n            remove(dest, err => {\n              if (err) return callback(err);\n              options.overwrite = false;\n              move(source, dest, options, callback);\n            });\n          }, 200);\n          return;\n        }\n        if (err.code !== 'EXDEV') return callback(err);\n        moveAcrossDevice(source, dest, overwrite, callback);\n      });\n    } else {\n      fs.link(source, dest, err => {\n        if (err) {\n          if (err.code === 'EXDEV' || err.code === 'EISDIR' || err.code === 'EPERM' || err.code === 'ENOTSUP') {\n            moveAcrossDevice(source, dest, overwrite, callback);\n            return;\n          }\n          callback(err);\n          return;\n        }\n        fs.unlink(source, callback);\n      });\n    }\n  }\n}\nfunction moveAcrossDevice(source, dest, overwrite, callback) {\n  fs.stat(source, (err, stat) => {\n    if (err) {\n      callback(err);\n      return;\n    }\n    if (stat.isDirectory()) {\n      moveDirAcrossDevice(source, dest, overwrite, callback);\n    } else {\n      moveFileAcrossDevice(source, dest, overwrite, callback);\n    }\n  });\n}\nfunction moveFileAcrossDevice(source, dest, overwrite, callback) {\n  const flags = overwrite ? 'w' : 'wx';\n  const ins = fs.createReadStream(source);\n  const outs = fs.createWriteStream(dest, {\n    flags\n  });\n  ins.on('error', err => {\n    ins.destroy();\n    outs.destroy();\n    outs.removeListener('close', onClose);\n\n    // may want to create a directory but `out` line above\n    // creates an empty file for us: See #108\n    // don't care about error here\n    fs.unlink(dest, () => {\n      // note: `err` here is from the input stream errror\n      if (err.code === 'EISDIR' || err.code === 'EPERM') {\n        moveDirAcrossDevice(source, dest, overwrite, callback);\n      } else {\n        callback(err);\n      }\n    });\n  });\n  outs.on('error', err => {\n    ins.destroy();\n    outs.destroy();\n    outs.removeListener('close', onClose);\n    callback(err);\n  });\n  outs.once('close', onClose);\n  ins.pipe(outs);\n  function onClose() {\n    fs.unlink(source, callback);\n  }\n}\nfunction moveDirAcrossDevice(source, dest, overwrite, callback) {\n  const options = {\n    overwrite: false\n  };\n  if (overwrite) {\n    remove(dest, err => {\n      if (err) return callback(err);\n      startNcp();\n    });\n  } else {\n    startNcp();\n  }\n  function startNcp() {\n    ncp(source, dest, options, err => {\n      if (err) return callback(err);\n      remove(source, callback);\n    });\n  }\n}\nmodule.exports = {\n  move: u(move)\n};","map":{"version":3,"names":["u","require","fromCallback","fs","ncp","path","remove","mkdirp","mkdirs","move","source","dest","options","callback","shouldMkdirp","overwrite","clobber","doRename","dirname","err","resolve","access","rename","code","setTimeout","moveAcrossDevice","link","unlink","stat","isDirectory","moveDirAcrossDevice","moveFileAcrossDevice","flags","ins","createReadStream","outs","createWriteStream","on","destroy","removeListener","onClose","once","pipe","startNcp","module","exports"],"sources":["/home/user/Рабочий стол/pizza/project/node_modules/fs-extra/lib/move/index.js"],"sourcesContent":["'use strict'\n\n// most of this code was written by Andrew Kelley\n// licensed under the BSD license: see\n// https://github.com/andrewrk/node-mv/blob/master/package.json\n\n// this needs a cleanup\n\nconst u = require('universalify').fromCallback\nconst fs = require('graceful-fs')\nconst ncp = require('../copy/ncp')\nconst path = require('path')\nconst remove = require('../remove').remove\nconst mkdirp = require('../mkdirs').mkdirs\n\nfunction move (source, dest, options, callback) {\n  if (typeof options === 'function') {\n    callback = options\n    options = {}\n  }\n\n  const shouldMkdirp = ('mkdirp' in options) ? options.mkdirp : true\n  const overwrite = options.overwrite || options.clobber || false\n\n  if (shouldMkdirp) {\n    mkdirs()\n  } else {\n    doRename()\n  }\n\n  function mkdirs () {\n    mkdirp(path.dirname(dest), err => {\n      if (err) return callback(err)\n      doRename()\n    })\n  }\n\n  function doRename () {\n    if (path.resolve(source) === path.resolve(dest)) {\n      fs.access(source, callback)\n    } else if (overwrite) {\n      fs.rename(source, dest, err => {\n        if (!err) return callback()\n\n        if (err.code === 'ENOTEMPTY' || err.code === 'EEXIST') {\n          remove(dest, err => {\n            if (err) return callback(err)\n            options.overwrite = false // just overwriteed it, no need to do it again\n            move(source, dest, options, callback)\n          })\n          return\n        }\n\n        // weird Windows shit\n        if (err.code === 'EPERM') {\n          setTimeout(() => {\n            remove(dest, err => {\n              if (err) return callback(err)\n              options.overwrite = false\n              move(source, dest, options, callback)\n            })\n          }, 200)\n          return\n        }\n\n        if (err.code !== 'EXDEV') return callback(err)\n        moveAcrossDevice(source, dest, overwrite, callback)\n      })\n    } else {\n      fs.link(source, dest, err => {\n        if (err) {\n          if (err.code === 'EXDEV' || err.code === 'EISDIR' || err.code === 'EPERM' || err.code === 'ENOTSUP') {\n            moveAcrossDevice(source, dest, overwrite, callback)\n            return\n          }\n          callback(err)\n          return\n        }\n        fs.unlink(source, callback)\n      })\n    }\n  }\n}\n\nfunction moveAcrossDevice (source, dest, overwrite, callback) {\n  fs.stat(source, (err, stat) => {\n    if (err) {\n      callback(err)\n      return\n    }\n\n    if (stat.isDirectory()) {\n      moveDirAcrossDevice(source, dest, overwrite, callback)\n    } else {\n      moveFileAcrossDevice(source, dest, overwrite, callback)\n    }\n  })\n}\n\nfunction moveFileAcrossDevice (source, dest, overwrite, callback) {\n  const flags = overwrite ? 'w' : 'wx'\n  const ins = fs.createReadStream(source)\n  const outs = fs.createWriteStream(dest, { flags })\n\n  ins.on('error', err => {\n    ins.destroy()\n    outs.destroy()\n    outs.removeListener('close', onClose)\n\n    // may want to create a directory but `out` line above\n    // creates an empty file for us: See #108\n    // don't care about error here\n    fs.unlink(dest, () => {\n      // note: `err` here is from the input stream errror\n      if (err.code === 'EISDIR' || err.code === 'EPERM') {\n        moveDirAcrossDevice(source, dest, overwrite, callback)\n      } else {\n        callback(err)\n      }\n    })\n  })\n\n  outs.on('error', err => {\n    ins.destroy()\n    outs.destroy()\n    outs.removeListener('close', onClose)\n    callback(err)\n  })\n\n  outs.once('close', onClose)\n  ins.pipe(outs)\n\n  function onClose () {\n    fs.unlink(source, callback)\n  }\n}\n\nfunction moveDirAcrossDevice (source, dest, overwrite, callback) {\n  const options = {\n    overwrite: false\n  }\n\n  if (overwrite) {\n    remove(dest, err => {\n      if (err) return callback(err)\n      startNcp()\n    })\n  } else {\n    startNcp()\n  }\n\n  function startNcp () {\n    ncp(source, dest, options, err => {\n      if (err) return callback(err)\n      remove(source, callback)\n    })\n  }\n}\n\nmodule.exports = {\n  move: u(move)\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}