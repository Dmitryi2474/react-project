{"ast":null,"code":"/**\n * tFunk for colours/compiler\n */\nvar tfunk = require(\"tfunk\");\n\n/**\n * Lodash clonedeep & merge\n */\nvar _ = require(\"./lodash.custom\");\n\n/**\n * Default configuration.\n * Can be overridden in first constructor arg\n */\nvar defaults = {\n  /**\n   * Initial log level\n   */\n  level: \"info\",\n  /**\n   * Prefix for logger\n   */\n  prefix: \"\",\n  /**\n   * Available levels and their score\n   */\n  levels: {\n    \"trace\": 100,\n    \"debug\": 200,\n    \"warn\": 300,\n    \"info\": 400,\n    \"error\": 500\n  },\n  /**\n   * Default prefixes\n   */\n  prefixes: {\n    \"trace\": \"[trace] \",\n    \"debug\": \"{yellow:[debug]} \",\n    \"info\": \"{cyan:[info]} \",\n    \"warn\": \"{magenta:[warn]} \",\n    \"error\": \"{red:[error]} \"\n  },\n  /**\n   * Should easy log statement be prefixed with the level?\n   */\n  useLevelPrefixes: false\n};\n\n/**\n * @param {Object} config\n * @constructor\n */\nvar Logger = function (config) {\n  if (!(this instanceof Logger)) {\n    return new Logger(config);\n  }\n  config = config || {};\n  this._mute = false;\n  this.config = _.merge({}, defaults, config);\n  this.addLevelMethods(this.config.levels);\n  this.compiler = new tfunk.Compiler(this.config.custom || {}, this.config);\n  this._memo = {};\n  return this;\n};\n\n/**\n * Set an option once\n * @param path\n * @param value\n */\nLogger.prototype.setOnce = function (path, value) {\n  if (typeof this.config[path] !== \"undefined\") {\n    if (typeof this._memo[path] === \"undefined\") {\n      this._memo[path] = this.config[path];\n    }\n    this.config[path] = value;\n  }\n  return this;\n};\n/**\n * Add convenience method such as\n * logger.warn(\"msg\")\n * logger.error(\"msg\")\n * logger.info(\"msg\")\n *\n * instead of\n * logger.log(\"warn\", \"msg\");\n * @param items\n */\nLogger.prototype.addLevelMethods = function (items) {\n  Object.keys(items).forEach(function (item) {\n    if (!this[item]) {\n      this[item] = function () {\n        var args = Array.prototype.slice.call(arguments);\n        this.log.apply(this, args);\n        return this;\n      }.bind(this, item);\n    }\n  }, this);\n};\n/**\n * Reset the state of the logger.\n * @returns {Logger}\n */\nLogger.prototype.reset = function () {\n  this.setLevel(defaults.level).setLevelPrefixes(defaults.useLevelPrefixes).mute(false);\n  return this;\n};\n\n/**\n * @param {String} level\n * @returns {boolean}\n */\nLogger.prototype.canLog = function (level) {\n  return this.config.levels[level] >= this.config.levels[this.config.level] && !this._mute;\n};\n\n/**\n * Log to the console with prefix\n * @param {String} level\n * @param {String} msg\n * @returns {Logger}\n */\nLogger.prototype.log = function (level, msg) {\n  var args = Array.prototype.slice.call(arguments);\n  this.logOne(args, msg, level);\n  return this;\n};\n\n/**\n * Set the log level\n * @param {String} level\n * @returns {Logger}\n */\nLogger.prototype.setLevel = function (level) {\n  this.config.level = level;\n  return this;\n};\n\n/**\n * @param {boolean} state\n * @returns {Logger}\n */\nLogger.prototype.setLevelPrefixes = function (state) {\n  this.config.useLevelPrefixes = state;\n  return this;\n};\n\n/**\n * @param prefix\n */\nLogger.prototype.setPrefix = function (prefix) {\n  if (typeof prefix === \"string\") {\n    this.compiler.prefix = this.compiler.compile(prefix, true);\n  }\n  if (typeof prefix === \"function\") {\n    this.compiler.prefix = prefix;\n  }\n};\n\n/**\n * @param {String} level\n * @param {String} msg\n * @returns {Logger}\n */\nLogger.prototype.unprefixed = function (level, msg) {\n  var args = Array.prototype.slice.call(arguments);\n  this.logOne(args, msg, level, true);\n  return this;\n};\n\n/**\n * @param {Array} args\n * @param {String} msg\n * @param {String} level\n * @param {boolean} [unprefixed]\n * @returns {Logger}\n */\nLogger.prototype.logOne = function (args, msg, level, unprefixed) {\n  if (!this.canLog(level)) {\n    return;\n  }\n  args = args.slice(2);\n  if (this.config.useLevelPrefixes && !unprefixed) {\n    msg = this.config.prefixes[level] + msg;\n  }\n  msg = this.compiler.compile(msg, unprefixed);\n  args.unshift(msg);\n  console.log.apply(console, args);\n  this.resetTemps();\n  return this;\n};\n\n/**\n * Reset any temporary value\n */\nLogger.prototype.resetTemps = function () {\n  Object.keys(this._memo).forEach(function (key) {\n    this.config[key] = this._memo[key];\n  }, this);\n};\n\n/**\n * Mute the logger\n */\nLogger.prototype.mute = function (bool) {\n  this._mute = bool;\n  return this;\n};\n\n/**\n * Clone the instance to share setup\n * @param opts\n * @returns {Logger}\n */\nLogger.prototype.clone = function (opts) {\n  var config = _.cloneDeep(this.config);\n  if (typeof opts === \"function\") {\n    config = opts(config) || {};\n  } else {\n    config = _.merge({}, config, opts || {});\n  }\n  return new Logger(config);\n};\nmodule.exports.Logger = Logger;\nmodule.exports.compile = tfunk;","map":{"version":3,"names":["tfunk","require","_","defaults","level","prefix","levels","prefixes","useLevelPrefixes","Logger","config","_mute","merge","addLevelMethods","compiler","Compiler","custom","_memo","prototype","setOnce","path","value","items","Object","keys","forEach","item","args","Array","slice","call","arguments","log","apply","bind","reset","setLevel","setLevelPrefixes","mute","canLog","msg","logOne","state","setPrefix","compile","unprefixed","unshift","console","resetTemps","key","bool","clone","opts","cloneDeep","module","exports"],"sources":["/home/user/Рабочий стол/pizza/project/node_modules/eazy-logger/index.js"],"sourcesContent":["/**\n * tFunk for colours/compiler\n */\nvar tfunk = require(\"tfunk\");\n\n/**\n * Lodash clonedeep & merge\n */\nvar _ = require(\"./lodash.custom\");\n\n/**\n * Default configuration.\n * Can be overridden in first constructor arg\n */\nvar defaults = {\n\n    /**\n     * Initial log level\n     */\n    level: \"info\",\n\n    /**\n     * Prefix for logger\n     */\n    prefix: \"\",\n\n    /**\n     * Available levels and their score\n     */\n    levels: {\n        \"trace\": 100,\n        \"debug\": 200,\n        \"warn\":  300,\n        \"info\":  400,\n        \"error\": 500\n    },\n\n    /**\n     * Default prefixes\n     */\n    prefixes: {\n        \"trace\": \"[trace] \",\n        \"debug\": \"{yellow:[debug]} \",\n        \"info\":  \"{cyan:[info]} \",\n        \"warn\":  \"{magenta:[warn]} \",\n        \"error\": \"{red:[error]} \"\n    },\n\n    /**\n     * Should easy log statement be prefixed with the level?\n     */\n    useLevelPrefixes: false\n};\n\n\n/**\n * @param {Object} config\n * @constructor\n */\nvar Logger = function(config) {\n\n    if (!(this instanceof Logger)) {\n        return new Logger(config);\n    }\n\n    config = config || {};\n\n    this._mute = false;\n    this.config = _.merge({}, defaults, config);\n    this.addLevelMethods(this.config.levels);\n    this.compiler = new tfunk.Compiler(this.config.custom || {}, this.config);\n    this._memo = {};\n\n    return this;\n};\n\n/**\n * Set an option once\n * @param path\n * @param value\n */\nLogger.prototype.setOnce = function (path, value) {\n\n    if (typeof this.config[path] !== \"undefined\") {\n\n        if (typeof this._memo[path] === \"undefined\") {\n            this._memo[path] = this.config[path];\n        }\n\n        this.config[path] = value;\n    }\n\n    return this;\n};\n/**\n * Add convenience method such as\n * logger.warn(\"msg\")\n * logger.error(\"msg\")\n * logger.info(\"msg\")\n *\n * instead of\n * logger.log(\"warn\", \"msg\");\n * @param items\n */\nLogger.prototype.addLevelMethods = function (items) {\n    Object.keys(items).forEach(function (item) {\n        if (!this[item]) {\n            this[item] = function () {\n                var args = Array.prototype.slice.call(arguments);\n                this.log.apply(this, args);\n                return this;\n            }.bind(this, item);\n        }\n    }, this);\n};\n/**\n * Reset the state of the logger.\n * @returns {Logger}\n */\nLogger.prototype.reset = function () {\n\n    this.setLevel(defaults.level)\n        .setLevelPrefixes(defaults.useLevelPrefixes)\n        .mute(false);\n\n    return this;\n};\n\n/**\n * @param {String} level\n * @returns {boolean}\n */\nLogger.prototype.canLog = function (level) {\n    return this.config.levels[level] >= this.config.levels[this.config.level] && !this._mute;\n};\n\n/**\n * Log to the console with prefix\n * @param {String} level\n * @param {String} msg\n * @returns {Logger}\n */\nLogger.prototype.log = function (level, msg) {\n\n    var args = Array.prototype.slice.call(arguments);\n\n    this.logOne(args, msg, level);\n\n    return this;\n};\n\n/**\n * Set the log level\n * @param {String} level\n * @returns {Logger}\n */\nLogger.prototype.setLevel = function (level) {\n\n    this.config.level = level;\n\n    return this;\n};\n\n/**\n * @param {boolean} state\n * @returns {Logger}\n */\nLogger.prototype.setLevelPrefixes = function (state) {\n\n    this.config.useLevelPrefixes = state;\n\n    return this;\n};\n\n/**\n * @param prefix\n */\nLogger.prototype.setPrefix = function (prefix) {\n    if (typeof prefix === \"string\") {\n        this.compiler.prefix = this.compiler.compile(prefix, true);\n    }\n    if (typeof prefix === \"function\") {\n        this.compiler.prefix = prefix;\n    }\n};\n\n/**\n * @param {String} level\n * @param {String} msg\n * @returns {Logger}\n */\nLogger.prototype.unprefixed = function (level, msg) {\n\n    var args = Array.prototype.slice.call(arguments);\n\n    this.logOne(args, msg, level, true);\n\n    return this;\n};\n\n/**\n * @param {Array} args\n * @param {String} msg\n * @param {String} level\n * @param {boolean} [unprefixed]\n * @returns {Logger}\n */\nLogger.prototype.logOne = function (args, msg, level, unprefixed) {\n\n    if (!this.canLog(level)) {\n        return;\n    }\n\n    args = args.slice(2);\n\n    if (this.config.useLevelPrefixes && !unprefixed) {\n        msg = this.config.prefixes[level] + msg;\n    }\n\n    msg = this.compiler.compile(msg, unprefixed);\n\n    args.unshift(msg);\n\n    console.log.apply(console, args);\n\n    this.resetTemps();\n\n    return this;\n};\n\n/**\n * Reset any temporary value\n */\nLogger.prototype.resetTemps = function () {\n\n    Object.keys(this._memo).forEach(function (key) {\n        this.config[key] = this._memo[key];\n    }, this);\n};\n\n/**\n * Mute the logger\n */\nLogger.prototype.mute = function (bool) {\n\n    this._mute = bool;\n    return this;\n};\n\n/**\n * Clone the instance to share setup\n * @param opts\n * @returns {Logger}\n */\nLogger.prototype.clone = function (opts) {\n\n    var config = _.cloneDeep(this.config);\n\n    if (typeof opts === \"function\") {\n        config = opts(config) || {};\n    } else {\n        config = _.merge({}, config, opts || {});\n    }\n\n    return new Logger(config);\n};\n\nmodule.exports.Logger  = Logger;\nmodule.exports.compile = tfunk;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}