{"ast":null,"code":"/**\n * Module dependencies.\n */\n\nvar Emitter = require('events').EventEmitter;\n\n/**\n * Module exports.\n */\n\nmodule.exports = Adapter;\n\n/**\n * Memory adapter constructor.\n *\n * @param {Namespace} nsp\n * @api public\n */\n\nfunction Adapter(nsp) {\n  this.nsp = nsp;\n  this.rooms = {};\n  this.sids = {};\n  this.encoder = nsp.server.encoder;\n}\n\n/**\n * Inherits from `EventEmitter`.\n */\n\nAdapter.prototype.__proto__ = Emitter.prototype;\n\n/**\n * Adds a socket to a room.\n *\n * @param {String} socket id\n * @param {String} room name\n * @param {Function} callback\n * @api public\n */\n\nAdapter.prototype.add = function (id, room, fn) {\n  return this.addAll(id, [room], fn);\n};\n\n/**\n * Adds a socket to a list of room.\n *\n * @param {String} socket id\n * @param {String} rooms\n * @param {Function} callback\n * @api public\n */\n\nAdapter.prototype.addAll = function (id, rooms, fn) {\n  for (var i = 0; i < rooms.length; i++) {\n    var room = rooms[i];\n    this.sids[id] = this.sids[id] || {};\n    this.sids[id][room] = true;\n    this.rooms[room] = this.rooms[room] || Room();\n    this.rooms[room].add(id);\n  }\n  if (fn) process.nextTick(fn.bind(null, null));\n};\n\n/**\n * Removes a socket from a room.\n *\n * @param {String} socket id\n * @param {String} room name\n * @param {Function} callback\n * @api public\n */\n\nAdapter.prototype.del = function (id, room, fn) {\n  this.sids[id] = this.sids[id] || {};\n  delete this.sids[id][room];\n  if (this.rooms.hasOwnProperty(room)) {\n    this.rooms[room].del(id);\n    if (this.rooms[room].length === 0) delete this.rooms[room];\n  }\n  if (fn) process.nextTick(fn.bind(null, null));\n};\n\n/**\n * Removes a socket from all rooms it's joined.\n *\n * @param {String} socket id\n * @param {Function} callback\n * @api public\n */\n\nAdapter.prototype.delAll = function (id, fn) {\n  var rooms = this.sids[id];\n  if (rooms) {\n    for (var room in rooms) {\n      if (this.rooms.hasOwnProperty(room)) {\n        this.rooms[room].del(id);\n        if (this.rooms[room].length === 0) delete this.rooms[room];\n      }\n    }\n  }\n  delete this.sids[id];\n  if (fn) process.nextTick(fn.bind(null, null));\n};\n\n/**\n * Broadcasts a packet.\n *\n * Options:\n *  - `flags` {Object} flags for this packet\n *  - `except` {Array} sids that should be excluded\n *  - `rooms` {Array} list of rooms to broadcast to\n *\n * @param {Object} packet object\n * @api public\n */\n\nAdapter.prototype.broadcast = function (packet, opts) {\n  var rooms = opts.rooms || [];\n  var except = opts.except || [];\n  var flags = opts.flags || {};\n  var packetOpts = {\n    preEncoded: true,\n    volatile: flags.volatile,\n    compress: flags.compress\n  };\n  var ids = {};\n  var self = this;\n  var socket;\n  packet.nsp = this.nsp.name;\n  this.encoder.encode(packet, function (encodedPackets) {\n    if (rooms.length) {\n      for (var i = 0; i < rooms.length; i++) {\n        var room = self.rooms[rooms[i]];\n        if (!room) continue;\n        var sockets = room.sockets;\n        for (var id in sockets) {\n          if (sockets.hasOwnProperty(id)) {\n            if (ids[id] || ~except.indexOf(id)) continue;\n            socket = self.nsp.connected[id];\n            if (socket) {\n              socket.packet(encodedPackets, packetOpts);\n              ids[id] = true;\n            }\n          }\n        }\n      }\n    } else {\n      for (var id in self.sids) {\n        if (self.sids.hasOwnProperty(id)) {\n          if (~except.indexOf(id)) continue;\n          socket = self.nsp.connected[id];\n          if (socket) socket.packet(encodedPackets, packetOpts);\n        }\n      }\n    }\n  });\n};\n\n/**\n * Gets a list of clients by sid.\n *\n * @param {Array} explicit set of rooms to check.\n * @param {Function} callback\n * @api public\n */\n\nAdapter.prototype.clients = function (rooms, fn) {\n  if ('function' == typeof rooms) {\n    fn = rooms;\n    rooms = null;\n  }\n  rooms = rooms || [];\n  var ids = {};\n  var sids = [];\n  var socket;\n  if (rooms.length) {\n    for (var i = 0; i < rooms.length; i++) {\n      var room = this.rooms[rooms[i]];\n      if (!room) continue;\n      var sockets = room.sockets;\n      for (var id in sockets) {\n        if (sockets.hasOwnProperty(id)) {\n          if (ids[id]) continue;\n          socket = this.nsp.connected[id];\n          if (socket) {\n            sids.push(id);\n            ids[id] = true;\n          }\n        }\n      }\n    }\n  } else {\n    for (var id in this.sids) {\n      if (this.sids.hasOwnProperty(id)) {\n        socket = this.nsp.connected[id];\n        if (socket) sids.push(id);\n      }\n    }\n  }\n  if (fn) process.nextTick(fn.bind(null, null, sids));\n};\n\n/**\n * Gets the list of rooms a given client has joined.\n *\n * @param {String} socket id\n * @param {Function} callback\n * @api public\n */\nAdapter.prototype.clientRooms = function (id, fn) {\n  var rooms = this.sids[id];\n  if (fn) process.nextTick(fn.bind(null, null, rooms ? Object.keys(rooms) : null));\n};\n\n/**\n* Room constructor.\n*\n* @api private\n*/\n\nfunction Room() {\n  if (!(this instanceof Room)) return new Room();\n  this.sockets = {};\n  this.length = 0;\n}\n\n/**\n * Adds a socket to a room.\n *\n * @param {String} socket id\n * @api private\n */\n\nRoom.prototype.add = function (id) {\n  if (!this.sockets.hasOwnProperty(id)) {\n    this.sockets[id] = true;\n    this.length++;\n  }\n};\n\n/**\n * Removes a socket from a room.\n *\n * @param {String} socket id\n * @api private\n */\n\nRoom.prototype.del = function (id) {\n  if (this.sockets.hasOwnProperty(id)) {\n    delete this.sockets[id];\n    this.length--;\n  }\n};","map":{"version":3,"names":["Emitter","require","EventEmitter","module","exports","Adapter","nsp","rooms","sids","encoder","server","prototype","__proto__","add","id","room","fn","addAll","i","length","Room","process","nextTick","bind","del","hasOwnProperty","delAll","broadcast","packet","opts","except","flags","packetOpts","preEncoded","volatile","compress","ids","self","socket","name","encode","encodedPackets","sockets","indexOf","connected","clients","push","clientRooms","Object","keys"],"sources":["/home/user/Рабочий стол/pizza/project/node_modules/socket.io-adapter/index.js"],"sourcesContent":["\n/**\n * Module dependencies.\n */\n\nvar Emitter = require('events').EventEmitter;\n\n/**\n * Module exports.\n */\n\nmodule.exports = Adapter;\n\n/**\n * Memory adapter constructor.\n *\n * @param {Namespace} nsp\n * @api public\n */\n\nfunction Adapter(nsp){\n  this.nsp = nsp;\n  this.rooms = {};\n  this.sids = {};\n  this.encoder = nsp.server.encoder;\n}\n\n/**\n * Inherits from `EventEmitter`.\n */\n\nAdapter.prototype.__proto__ = Emitter.prototype;\n\n/**\n * Adds a socket to a room.\n *\n * @param {String} socket id\n * @param {String} room name\n * @param {Function} callback\n * @api public\n */\n\nAdapter.prototype.add = function(id, room, fn){\n  return this.addAll(id, [ room ], fn);\n};\n\n/**\n * Adds a socket to a list of room.\n *\n * @param {String} socket id\n * @param {String} rooms\n * @param {Function} callback\n * @api public\n */\n\nAdapter.prototype.addAll = function(id, rooms, fn){\n  for (var i = 0; i < rooms.length; i++) {\n    var room = rooms[i];\n    this.sids[id] = this.sids[id] || {};\n    this.sids[id][room] = true;\n    this.rooms[room] = this.rooms[room] || Room();\n    this.rooms[room].add(id);\n  }\n  if (fn) process.nextTick(fn.bind(null, null));\n};\n\n/**\n * Removes a socket from a room.\n *\n * @param {String} socket id\n * @param {String} room name\n * @param {Function} callback\n * @api public\n */\n\nAdapter.prototype.del = function(id, room, fn){\n  this.sids[id] = this.sids[id] || {};\n  delete this.sids[id][room];\n  if (this.rooms.hasOwnProperty(room)) {\n    this.rooms[room].del(id);\n    if (this.rooms[room].length === 0) delete this.rooms[room];\n  }\n\n  if (fn) process.nextTick(fn.bind(null, null));\n};\n\n/**\n * Removes a socket from all rooms it's joined.\n *\n * @param {String} socket id\n * @param {Function} callback\n * @api public\n */\n\nAdapter.prototype.delAll = function(id, fn){\n  var rooms = this.sids[id];\n  if (rooms) {\n    for (var room in rooms) {\n      if (this.rooms.hasOwnProperty(room)) {\n        this.rooms[room].del(id);\n        if (this.rooms[room].length === 0) delete this.rooms[room];\n      }\n    }\n  }\n  delete this.sids[id];\n\n  if (fn) process.nextTick(fn.bind(null, null));\n};\n\n/**\n * Broadcasts a packet.\n *\n * Options:\n *  - `flags` {Object} flags for this packet\n *  - `except` {Array} sids that should be excluded\n *  - `rooms` {Array} list of rooms to broadcast to\n *\n * @param {Object} packet object\n * @api public\n */\n\nAdapter.prototype.broadcast = function(packet, opts){\n  var rooms = opts.rooms || [];\n  var except = opts.except || [];\n  var flags = opts.flags || {};\n  var packetOpts = {\n    preEncoded: true,\n    volatile: flags.volatile,\n    compress: flags.compress\n  };\n  var ids = {};\n  var self = this;\n  var socket;\n\n  packet.nsp = this.nsp.name;\n  this.encoder.encode(packet, function(encodedPackets) {\n    if (rooms.length) {\n      for (var i = 0; i < rooms.length; i++) {\n        var room = self.rooms[rooms[i]];\n        if (!room) continue;\n        var sockets = room.sockets;\n        for (var id in sockets) {\n          if (sockets.hasOwnProperty(id)) {\n            if (ids[id] || ~except.indexOf(id)) continue;\n            socket = self.nsp.connected[id];\n            if (socket) {\n              socket.packet(encodedPackets, packetOpts);\n              ids[id] = true;\n            }\n          }\n        }\n      }\n    } else {\n      for (var id in self.sids) {\n        if (self.sids.hasOwnProperty(id)) {\n          if (~except.indexOf(id)) continue;\n          socket = self.nsp.connected[id];\n          if (socket) socket.packet(encodedPackets, packetOpts);\n        }\n      }\n    }\n  });\n};\n\n/**\n * Gets a list of clients by sid.\n *\n * @param {Array} explicit set of rooms to check.\n * @param {Function} callback\n * @api public\n */\n\nAdapter.prototype.clients = function(rooms, fn){\n  if ('function' == typeof rooms){\n    fn = rooms;\n    rooms = null;\n  }\n\n  rooms = rooms || [];\n\n  var ids = {};\n  var sids = [];\n  var socket;\n\n  if (rooms.length) {\n    for (var i = 0; i < rooms.length; i++) {\n      var room = this.rooms[rooms[i]];\n      if (!room) continue;\n      var sockets = room.sockets;\n      for (var id in sockets) {\n        if (sockets.hasOwnProperty(id)) {\n          if (ids[id]) continue;\n          socket = this.nsp.connected[id];\n          if (socket) {\n            sids.push(id);\n            ids[id] = true;\n          }\n        }\n      }\n    }\n  } else {\n    for (var id in this.sids) {\n      if (this.sids.hasOwnProperty(id)) {\n        socket = this.nsp.connected[id];\n        if (socket) sids.push(id);\n      }\n    }\n  }\n\n  if (fn) process.nextTick(fn.bind(null, null, sids));\n};\n\n/**\n * Gets the list of rooms a given client has joined.\n *\n * @param {String} socket id\n * @param {Function} callback\n * @api public\n */\nAdapter.prototype.clientRooms = function(id, fn){\n  var rooms = this.sids[id];\n  if (fn) process.nextTick(fn.bind(null, null, rooms ? Object.keys(rooms) : null));\n};\n\n/**\n* Room constructor.\n*\n* @api private\n*/\n\nfunction Room(){\n  if (!(this instanceof Room)) return new Room();\n  this.sockets = {};\n  this.length = 0;\n}\n\n/**\n * Adds a socket to a room.\n *\n * @param {String} socket id\n * @api private\n */\n\nRoom.prototype.add = function(id){\n  if (!this.sockets.hasOwnProperty(id)) {\n    this.sockets[id] = true;\n    this.length++;\n  }\n};\n\n/**\n * Removes a socket from a room.\n *\n * @param {String} socket id\n * @api private\n */\n\nRoom.prototype.del = function(id){\n  if (this.sockets.hasOwnProperty(id)) {\n    delete this.sockets[id];\n    this.length--;\n  }\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}