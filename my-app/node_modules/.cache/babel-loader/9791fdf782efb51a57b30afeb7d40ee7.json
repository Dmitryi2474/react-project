{"ast":null,"code":"/**\n * Module dependencies.\n */\n\nvar http = require('http');\n\n/**\n * Invoking the library as a function delegates to attach if the first argument\n * is an `http.Server`.\n *\n * If there are no arguments or the first argument is an options object, then\n * a new Server instance is returned.\n *\n * @param {http.Server} server (if specified, will be attached to by the new Server instance)\n * @param {Object} options\n * @return {Server} engine server\n * @api public\n */\n\nexports = module.exports = function () {\n  // backwards compatible use as `.attach`\n  // if first argument is an http server\n  if (arguments.length && arguments[0] instanceof http.Server) {\n    return attach.apply(this, arguments);\n  }\n\n  // if first argument is not an http server, then just make a regular eio server\n  return exports.Server.apply(null, arguments);\n};\n\n/**\n * Protocol revision number.\n *\n * @api public\n */\n\nexports.protocol = 1;\n\n/**\n * Expose Server constructor.\n *\n * @api public\n */\n\nexports.Server = require('./server');\n\n/**\n * Expose Socket constructor.\n *\n * @api public\n */\n\nexports.Socket = require('./socket');\n\n/**\n * Expose Transport constructor.\n *\n * @api public\n */\n\nexports.Transport = require('./transport');\n\n/**\n * Expose mutable list of available transports.\n *\n * @api public\n */\n\nexports.transports = require('./transports');\n\n/**\n * Exports parser.\n *\n * @api public\n */\n\nexports.parser = require('engine.io-parser');\n\n/**\n * Creates an http.Server exclusively used for WS upgrades.\n *\n * @param {Number} port\n * @param {Function} callback\n * @param {Object} options\n * @return {Server} websocket.io server\n * @api public\n */\n\nexports.listen = listen;\nfunction listen(port, options, fn) {\n  if ('function' === typeof options) {\n    fn = options;\n    options = {};\n  }\n  var server = http.createServer(function (req, res) {\n    res.writeHead(501);\n    res.end('Not Implemented');\n  });\n\n  // create engine server\n  var engine = exports.attach(server, options);\n  engine.httpServer = server;\n  server.listen(port, fn);\n  return engine;\n}\n\n/**\n * Captures upgrade requests for a http.Server.\n *\n * @param {http.Server} server\n * @param {Object} options\n * @return {Server} engine server\n * @api public\n */\n\nexports.attach = attach;\nfunction attach(server, options) {\n  var engine = new exports.Server(options);\n  engine.attach(server, options);\n  return engine;\n}","map":{"version":3,"names":["http","require","exports","module","arguments","length","Server","attach","apply","protocol","Socket","Transport","transports","parser","listen","port","options","fn","server","createServer","req","res","writeHead","end","engine","httpServer"],"sources":["/home/user/Рабочий стол/pizza/project/node_modules/engine.io/lib/engine.io.js"],"sourcesContent":["/**\n * Module dependencies.\n */\n\nvar http = require('http');\n\n/**\n * Invoking the library as a function delegates to attach if the first argument\n * is an `http.Server`.\n *\n * If there are no arguments or the first argument is an options object, then\n * a new Server instance is returned.\n *\n * @param {http.Server} server (if specified, will be attached to by the new Server instance)\n * @param {Object} options\n * @return {Server} engine server\n * @api public\n */\n\nexports = module.exports = function () {\n  // backwards compatible use as `.attach`\n  // if first argument is an http server\n  if (arguments.length && arguments[0] instanceof http.Server) {\n    return attach.apply(this, arguments);\n  }\n\n  // if first argument is not an http server, then just make a regular eio server\n  return exports.Server.apply(null, arguments);\n};\n\n/**\n * Protocol revision number.\n *\n * @api public\n */\n\nexports.protocol = 1;\n\n/**\n * Expose Server constructor.\n *\n * @api public\n */\n\nexports.Server = require('./server');\n\n/**\n * Expose Socket constructor.\n *\n * @api public\n */\n\nexports.Socket = require('./socket');\n\n/**\n * Expose Transport constructor.\n *\n * @api public\n */\n\nexports.Transport = require('./transport');\n\n/**\n * Expose mutable list of available transports.\n *\n * @api public\n */\n\nexports.transports = require('./transports');\n\n/**\n * Exports parser.\n *\n * @api public\n */\n\nexports.parser = require('engine.io-parser');\n\n/**\n * Creates an http.Server exclusively used for WS upgrades.\n *\n * @param {Number} port\n * @param {Function} callback\n * @param {Object} options\n * @return {Server} websocket.io server\n * @api public\n */\n\nexports.listen = listen;\n\nfunction listen (port, options, fn) {\n  if ('function' === typeof options) {\n    fn = options;\n    options = {};\n  }\n\n  var server = http.createServer(function (req, res) {\n    res.writeHead(501);\n    res.end('Not Implemented');\n  });\n\n  // create engine server\n  var engine = exports.attach(server, options);\n  engine.httpServer = server;\n\n  server.listen(port, fn);\n\n  return engine;\n}\n\n/**\n * Captures upgrade requests for a http.Server.\n *\n * @param {http.Server} server\n * @param {Object} options\n * @return {Server} engine server\n * @api public\n */\n\nexports.attach = attach;\n\nfunction attach (server, options) {\n  var engine = new exports.Server(options);\n  engine.attach(server, options);\n  return engine;\n}\n"],"mappings":"AAAA;AACA;AACA;;AAEA,IAAIA,IAAI,GAAGC,OAAO,CAAC,MAAM,CAAC;;AAE1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAC,OAAO,GAAGC,MAAM,CAACD,OAAO,GAAG,YAAY;EACrC;EACA;EACA,IAAIE,SAAS,CAACC,MAAM,IAAID,SAAS,CAAC,CAAC,CAAC,YAAYJ,IAAI,CAACM,MAAM,EAAE;IAC3D,OAAOC,MAAM,CAACC,KAAK,CAAC,IAAI,EAAEJ,SAAS,CAAC;EACtC;;EAEA;EACA,OAAOF,OAAO,CAACI,MAAM,CAACE,KAAK,CAAC,IAAI,EAAEJ,SAAS,CAAC;AAC9C,CAAC;;AAED;AACA;AACA;AACA;AACA;;AAEAF,OAAO,CAACO,QAAQ,GAAG,CAAC;;AAEpB;AACA;AACA;AACA;AACA;;AAEAP,OAAO,CAACI,MAAM,GAAGL,OAAO,CAAC,UAAU,CAAC;;AAEpC;AACA;AACA;AACA;AACA;;AAEAC,OAAO,CAACQ,MAAM,GAAGT,OAAO,CAAC,UAAU,CAAC;;AAEpC;AACA;AACA;AACA;AACA;;AAEAC,OAAO,CAACS,SAAS,GAAGV,OAAO,CAAC,aAAa,CAAC;;AAE1C;AACA;AACA;AACA;AACA;;AAEAC,OAAO,CAACU,UAAU,GAAGX,OAAO,CAAC,cAAc,CAAC;;AAE5C;AACA;AACA;AACA;AACA;;AAEAC,OAAO,CAACW,MAAM,GAAGZ,OAAO,CAAC,kBAAkB,CAAC;;AAE5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAC,OAAO,CAACY,MAAM,GAAGA,MAAM;AAEvB,SAASA,MAAM,CAAEC,IAAI,EAAEC,OAAO,EAAEC,EAAE,EAAE;EAClC,IAAI,UAAU,KAAK,OAAOD,OAAO,EAAE;IACjCC,EAAE,GAAGD,OAAO;IACZA,OAAO,GAAG,CAAC,CAAC;EACd;EAEA,IAAIE,MAAM,GAAGlB,IAAI,CAACmB,YAAY,CAAC,UAAUC,GAAG,EAAEC,GAAG,EAAE;IACjDA,GAAG,CAACC,SAAS,CAAC,GAAG,CAAC;IAClBD,GAAG,CAACE,GAAG,CAAC,iBAAiB,CAAC;EAC5B,CAAC,CAAC;;EAEF;EACA,IAAIC,MAAM,GAAGtB,OAAO,CAACK,MAAM,CAACW,MAAM,EAAEF,OAAO,CAAC;EAC5CQ,MAAM,CAACC,UAAU,GAAGP,MAAM;EAE1BA,MAAM,CAACJ,MAAM,CAACC,IAAI,EAAEE,EAAE,CAAC;EAEvB,OAAOO,MAAM;AACf;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAtB,OAAO,CAACK,MAAM,GAAGA,MAAM;AAEvB,SAASA,MAAM,CAAEW,MAAM,EAAEF,OAAO,EAAE;EAChC,IAAIQ,MAAM,GAAG,IAAItB,OAAO,CAACI,MAAM,CAACU,OAAO,CAAC;EACxCQ,MAAM,CAACjB,MAAM,CAACW,MAAM,EAAEF,OAAO,CAAC;EAC9B,OAAOQ,MAAM;AACf"},"metadata":{},"sourceType":"script"}