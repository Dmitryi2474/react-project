{"ast":null,"code":"module.exports = promisify;\nfunction promisify(fn, args) {\n  if (typeof Promise === 'undefined') {\n    throw new Error('Please run in a Promise supported environment or provide a callback');\n  }\n  return new Promise(function (resolve, reject) {\n    args = [].slice.call(args).concat([callback]);\n    fn.apply(null, args);\n    function callback(error, port) {\n      if (error || port === false) {\n        reject(error || new Error('No open port found'));\n      } else {\n        resolve(port);\n      }\n    }\n  });\n}","map":{"version":3,"names":["module","exports","promisify","fn","args","Promise","Error","resolve","reject","slice","call","concat","callback","apply","error","port"],"sources":["/home/user/Рабочий стол/pizza/project/node_modules/portscanner/lib/promisify.js"],"sourcesContent":["module.exports = promisify\n\nfunction promisify (fn, args) {\n  if (typeof Promise === 'undefined') {\n    throw new Error('Please run in a Promise supported environment or provide a callback')\n  }\n  return new Promise(function (resolve, reject) {\n    args = [].slice.call(args).concat([callback])\n    fn.apply(null, args)\n\n    function callback (error, port) {\n      if (error || port === false) {\n        reject(error || new Error('No open port found'))\n      } else {\n        resolve(port)\n      }\n    }\n  })\n}\n"],"mappings":"AAAAA,MAAM,CAACC,OAAO,GAAGC,SAAS;AAE1B,SAASA,SAAS,CAAEC,EAAE,EAAEC,IAAI,EAAE;EAC5B,IAAI,OAAOC,OAAO,KAAK,WAAW,EAAE;IAClC,MAAM,IAAIC,KAAK,CAAC,qEAAqE,CAAC;EACxF;EACA,OAAO,IAAID,OAAO,CAAC,UAAUE,OAAO,EAAEC,MAAM,EAAE;IAC5CJ,IAAI,GAAG,EAAE,CAACK,KAAK,CAACC,IAAI,CAACN,IAAI,CAAC,CAACO,MAAM,CAAC,CAACC,QAAQ,CAAC,CAAC;IAC7CT,EAAE,CAACU,KAAK,CAAC,IAAI,EAAET,IAAI,CAAC;IAEpB,SAASQ,QAAQ,CAAEE,KAAK,EAAEC,IAAI,EAAE;MAC9B,IAAID,KAAK,IAAIC,IAAI,KAAK,KAAK,EAAE;QAC3BP,MAAM,CAACM,KAAK,IAAI,IAAIR,KAAK,CAAC,oBAAoB,CAAC,CAAC;MAClD,CAAC,MAAM;QACLC,OAAO,CAACQ,IAAI,CAAC;MACf;IACF;EACF,CAAC,CAAC;AACJ"},"metadata":{},"sourceType":"script"}