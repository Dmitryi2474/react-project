{"ast":null,"code":"'use strict';\n\nvar childProcess = require('child_process');\nvar execFileSync = childProcess.execFileSync;\nvar lcid = require('lcid');\nvar defaultOpts = {\n  spawn: true\n};\nvar cache;\nfunction fallback() {\n  cache = 'en_US';\n  return cache;\n}\nfunction getEnvLocale(env) {\n  env = env || process.env;\n  var ret = env.LC_ALL || env.LC_MESSAGES || env.LANG || env.LANGUAGE;\n  cache = getLocale(ret);\n  return ret;\n}\nfunction parseLocale(x) {\n  var env = x.split('\\n').reduce(function (env, def) {\n    def = def.split('=');\n    env[def[0]] = def[1];\n    return env;\n  }, {});\n  return getEnvLocale(env);\n}\nfunction getLocale(str) {\n  return str && str.replace(/[.:].*/, '') || fallback();\n}\nmodule.exports = function (opts, cb) {\n  if (typeof opts === 'function') {\n    cb = opts;\n    opts = defaultOpts;\n  } else {\n    opts = opts || defaultOpts;\n  }\n  if (cache || getEnvLocale() || opts.spawn === false) {\n    setImmediate(cb, null, cache);\n    return;\n  }\n  var getAppleLocale = function () {\n    childProcess.execFile('defaults', ['read', '-g', 'AppleLocale'], function (err, stdout) {\n      if (err) {\n        fallback();\n        return;\n      }\n      cache = stdout.trim() || fallback();\n      cb(null, cache);\n    });\n  };\n  if (process.platform === 'win32') {\n    childProcess.execFile('wmic', ['os', 'get', 'locale'], function (err, stdout) {\n      if (err) {\n        fallback();\n        return;\n      }\n      var lcidCode = parseInt(stdout.replace('Locale', ''), 16);\n      cache = lcid.from(lcidCode) || fallback();\n      cb(null, cache);\n    });\n  } else {\n    childProcess.execFile('locale', function (err, stdout) {\n      if (err) {\n        fallback();\n        return;\n      }\n      var res = parseLocale(stdout);\n      if (!res && process.platform === 'darwin') {\n        getAppleLocale();\n        return;\n      }\n      cache = getLocale(res);\n      cb(null, cache);\n    });\n  }\n};\nmodule.exports.sync = function (opts) {\n  opts = opts || defaultOpts;\n  if (cache || getEnvLocale() || !execFileSync || opts.spawn === false) {\n    return cache;\n  }\n  if (process.platform === 'win32') {\n    var stdout;\n    try {\n      stdout = execFileSync('wmic', ['os', 'get', 'locale'], {\n        encoding: 'utf8'\n      });\n    } catch (err) {\n      return fallback();\n    }\n    var lcidCode = parseInt(stdout.replace('Locale', ''), 16);\n    cache = lcid.from(lcidCode) || fallback();\n    return cache;\n  }\n  var res;\n  try {\n    res = parseLocale(execFileSync('locale', {\n      encoding: 'utf8'\n    }));\n  } catch (err) {}\n  if (!res && process.platform === 'darwin') {\n    try {\n      cache = execFileSync('defaults', ['read', '-g', 'AppleLocale'], {\n        encoding: 'utf8'\n      }).trim() || fallback();\n      return cache;\n    } catch (err) {\n      return fallback();\n    }\n  }\n  cache = getLocale(res);\n  return cache;\n};","map":{"version":3,"names":["childProcess","require","execFileSync","lcid","defaultOpts","spawn","cache","fallback","getEnvLocale","env","process","ret","LC_ALL","LC_MESSAGES","LANG","LANGUAGE","getLocale","parseLocale","x","split","reduce","def","str","replace","module","exports","opts","cb","setImmediate","getAppleLocale","execFile","err","stdout","trim","platform","lcidCode","parseInt","from","res","sync","encoding"],"sources":["/home/user/Рабочий стол/pizza/project/node_modules/os-locale/index.js"],"sourcesContent":["'use strict';\nvar childProcess = require('child_process');\nvar execFileSync = childProcess.execFileSync;\nvar lcid = require('lcid');\nvar defaultOpts = {spawn: true};\nvar cache;\n\nfunction fallback() {\n\tcache = 'en_US';\n\treturn cache;\n}\n\nfunction getEnvLocale(env) {\n\tenv = env || process.env;\n\tvar ret = env.LC_ALL || env.LC_MESSAGES || env.LANG || env.LANGUAGE;\n\tcache = getLocale(ret);\n\treturn ret;\n}\n\nfunction parseLocale(x) {\n\tvar env = x.split('\\n').reduce(function (env, def) {\n\t\tdef = def.split('=');\n\t\tenv[def[0]] = def[1];\n\t\treturn env;\n\t}, {});\n\treturn getEnvLocale(env);\n}\n\nfunction getLocale(str) {\n\treturn (str && str.replace(/[.:].*/, '')) || fallback();\n}\n\nmodule.exports = function (opts, cb) {\n\tif (typeof opts === 'function') {\n\t\tcb = opts;\n\t\topts = defaultOpts;\n\t} else {\n\t\topts = opts || defaultOpts;\n\t}\n\n\tif (cache || getEnvLocale() || opts.spawn === false) {\n\t\tsetImmediate(cb, null, cache);\n\t\treturn;\n\t}\n\n\tvar getAppleLocale = function () {\n\t\tchildProcess.execFile('defaults', ['read', '-g', 'AppleLocale'], function (err, stdout) {\n\t\t\tif (err) {\n\t\t\t\tfallback();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tcache = stdout.trim() || fallback();\n\t\t\tcb(null, cache);\n\t\t});\n\t};\n\n\tif (process.platform === 'win32') {\n\t\tchildProcess.execFile('wmic', ['os', 'get', 'locale'], function (err, stdout) {\n\t\t\tif (err) {\n\t\t\t\tfallback();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar lcidCode = parseInt(stdout.replace('Locale', ''), 16);\n\t\t\tcache = lcid.from(lcidCode) || fallback();\n\t\t\tcb(null, cache);\n\t\t});\n\t} else {\n\t\tchildProcess.execFile('locale', function (err, stdout) {\n\t\t\tif (err) {\n\t\t\t\tfallback();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar res = parseLocale(stdout);\n\n\t\t\tif (!res && process.platform === 'darwin') {\n\t\t\t\tgetAppleLocale();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tcache = getLocale(res);\n\t\t\tcb(null, cache);\n\t\t});\n\t}\n};\n\nmodule.exports.sync = function (opts) {\n\topts = opts || defaultOpts;\n\n\tif (cache || getEnvLocale() || !execFileSync || opts.spawn === false) {\n\t\treturn cache;\n\t}\n\n\tif (process.platform === 'win32') {\n\t\tvar stdout;\n\n\t\ttry {\n\t\t\tstdout = execFileSync('wmic', ['os', 'get', 'locale'], {encoding: 'utf8'});\n\t\t} catch (err) {\n\t\t\treturn fallback();\n\t\t}\n\n\t\tvar lcidCode = parseInt(stdout.replace('Locale', ''), 16);\n\t\tcache = lcid.from(lcidCode) || fallback();\n\t\treturn cache;\n\t}\n\n\tvar res;\n\n\ttry {\n\t\tres = parseLocale(execFileSync('locale', {encoding: 'utf8'}));\n\t} catch (err) {}\n\n\tif (!res && process.platform === 'darwin') {\n\t\ttry {\n\t\t\tcache = execFileSync('defaults', ['read', '-g', 'AppleLocale'], {encoding: 'utf8'}).trim() || fallback();\n\t\t\treturn cache;\n\t\t} catch (err) {\n\t\t\treturn fallback();\n\t\t}\n\t}\n\n\tcache = getLocale(res);\n\treturn cache;\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}