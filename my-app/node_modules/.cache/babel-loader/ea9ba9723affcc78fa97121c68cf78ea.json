{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar _ = require(\"./lodash.custom\");\nvar Immutable = require(\"immutable\");\nvar defaultConfig = require(\"./default-config\");\n/**\n * Move top-level ws options to proxy.ws\n * This is to allow it to be set from the CLI\n * @param incoming\n */\nfunction setProxyWs(incoming) {\n  if (incoming.get(\"ws\") && incoming.get(\"mode\") === \"proxy\") {\n    return [incoming.setIn([\"proxy\", \"ws\"], true), []];\n  }\n  return [incoming, []];\n}\nexports.setProxyWs = setProxyWs;\n/**\n * @param incoming\n */\nfunction setOpen(incoming) {\n  return [incoming.update('open', function (open) {\n    if (incoming.get(\"mode\") === \"snippet\") {\n      if (open !== \"ui\" && open !== \"ui-external\") {\n        return false;\n      }\n    }\n    return open;\n  }), []];\n}\nexports.setOpen = setOpen;\n/**\n * Set the running mode\n * @param incoming\n */\nfunction setMode(incoming) {\n  var output = incoming.set(\"mode\", function () {\n    if (incoming.get(\"server\")) {\n      return \"server\";\n    }\n    if (incoming.get(\"proxy\")) {\n      return \"proxy\";\n    }\n    return \"snippet\";\n  }());\n  return [output, []];\n}\nexports.setMode = setMode;\n/**\n * @param incoming\n */\nfunction setScheme(incoming) {\n  var scheme = \"http\";\n  if (incoming.getIn([\"server\", \"https\"])) {\n    scheme = \"https\";\n  }\n  if (incoming.get(\"https\")) {\n    scheme = \"https\";\n  }\n  if (incoming.getIn([\"proxy\", \"url\", \"protocol\"])) {\n    if (incoming.getIn([\"proxy\", \"url\", \"protocol\"]) === \"https:\") {\n      scheme = \"https\";\n    }\n  }\n  return [incoming.set(\"scheme\", scheme), []];\n}\nexports.setScheme = setScheme;\n/**\n * @param incoming\n */\nfunction setStartPath(incoming) {\n  if (incoming.get(\"proxy\")) {\n    var path = incoming.getIn([\"proxy\", \"url\", \"path\"]);\n    if (path !== \"/\") {\n      return [incoming.set(\"startPath\", path), []];\n    }\n  }\n  return [incoming, []];\n}\nexports.setStartPath = setStartPath;\n/**\n * @param incoming\n */\nfunction setNamespace(incoming) {\n  var namespace = incoming.getIn([\"socket\", \"namespace\"]);\n  if (_.isFunction(namespace)) {\n    return [incoming.setIn([\"socket\", \"namespace\"], namespace(defaultConfig.socket.namespace)), []];\n  }\n  return [incoming, []];\n}\nexports.setNamespace = setNamespace;\n/**\n * @param incoming\n */\nfunction setServerOpts(incoming) {\n  if (!incoming.get(\"server\")) {\n    return [incoming, []];\n  }\n  var indexarg = incoming.getIn([\"server\", \"index\"]) || \"index.html\";\n  var optPath = [\"server\", \"serveStaticOptions\"];\n  if (!incoming.getIn(optPath)) {\n    return [incoming.setIn(optPath, Immutable.Map({\n      index: indexarg\n    })), []];\n  }\n  if (!incoming.hasIn(optPath.concat([\"index\"]))) {\n    return [incoming.setIn(optPath.concat([\"index\"]), indexarg), []];\n  }\n  return [incoming, []];\n}\nexports.setServerOpts = setServerOpts;\nfunction liftExtensionsOptionFromCli(incoming) {\n  // cli extensions\n  var optPath = [\"server\", \"serveStaticOptions\"];\n  if (incoming.get(\"extensions\")) {\n    return [incoming.setIn(optPath.concat([\"extensions\"]), incoming.get(\"extensions\")), []];\n  }\n  return [incoming, []];\n}\nexports.liftExtensionsOptionFromCli = liftExtensionsOptionFromCli;\n/**\n * Back-compat fixes for rewriteRules being set to a boolean\n */\nfunction fixRewriteRules(incoming) {\n  return [incoming.update(\"rewriteRules\", function (rr) {\n    return Immutable.List([]).concat(rr).filter(Boolean);\n  }), []];\n}\nexports.fixRewriteRules = fixRewriteRules;\nfunction fixSnippetIgnorePaths(incoming) {\n  var ignorePaths = incoming.getIn([\"snippetOptions\", \"ignorePaths\"]);\n  if (ignorePaths) {\n    if (_.isString(ignorePaths)) {\n      ignorePaths = [ignorePaths];\n    }\n    ignorePaths = ignorePaths.map(ensureSlash);\n    return [incoming.setIn([\"snippetOptions\", \"blacklist\"], Immutable.List(ignorePaths)), []];\n  }\n  return [incoming, []];\n}\nexports.fixSnippetIgnorePaths = fixSnippetIgnorePaths;\nfunction fixSnippetIncludePaths(incoming) {\n  var includePaths = incoming.getIn([\"snippetOptions\", \"whitelist\"]);\n  if (includePaths) {\n    includePaths = includePaths.map(ensureSlash);\n    return [incoming.setIn([\"snippetOptions\", \"whitelist\"], Immutable.List(includePaths)), []];\n  }\n  return [incoming, []];\n}\nexports.fixSnippetIncludePaths = fixSnippetIncludePaths;\n/**\n * Enforce paths to begin with a forward slash\n */\nfunction ensureSlash(item) {\n  if (item[0] !== \"/\") {\n    return \"/\" + item;\n  }\n  return item;\n}\n/**\n *\n */\nfunction setMiddleware(incoming) {\n  var mw = getMiddlwares(incoming);\n  return [incoming.set(\"middleware\", mw), []];\n}\nexports.setMiddleware = setMiddleware;\n/**\n * top-level option, or given as part of the proxy/server option\n * @param item\n * @returns {*}\n */\nfunction getMiddlwares(item) {\n  var mw = item.get(\"middleware\");\n  var serverMw = item.getIn([\"server\", \"middleware\"]);\n  var proxyMw = item.getIn([\"proxy\", \"middleware\"]);\n  var list = Immutable.List([]);\n  if (mw) {\n    return listMerge(list, mw);\n  }\n  if (serverMw) {\n    return listMerge(list, serverMw);\n  }\n  if (proxyMw) {\n    return listMerge(list, proxyMw);\n  }\n  return list;\n}\n/**\n * @param item\n * @returns {*}\n */\nfunction isList(item) {\n  return Immutable.List.isList(item);\n}\n/**\n * @param list\n * @param item\n * @returns {*}\n */\nfunction listMerge(list, item) {\n  if (_.isFunction(item)) {\n    list = list.push(item);\n  }\n  if (isList(item) && item.size) {\n    list = list.merge(item);\n  }\n  return list;\n}\n/**\n * @param incoming\n * @returns {*}\n */\nfunction setUiPort(incoming) {\n  if (incoming.get(\"uiPort\")) {\n    return [incoming.setIn([\"ui\", \"port\"], incoming.get(\"uiPort\")), []];\n  }\n  return [incoming, []];\n}\nexports.setUiPort = setUiPort;","map":{"version":3,"mappings":"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","names":["_","require","setProxyWs","incoming","get","setIn","exports","setOpen","update","open","setMode","output","set","setScheme","scheme","getIn","setStartPath","path","setNamespace","namespace","isFunction","defaultConfig","socket","setServerOpts","indexarg","optPath","Immutable","Map","index","hasIn","concat","liftExtensionsOptionFromCli","fixRewriteRules","rr","List","filter","Boolean","fixSnippetIgnorePaths","ignorePaths","isString","map","ensureSlash","fixSnippetIncludePaths","includePaths","item","setMiddleware","mw","getMiddlwares","serverMw","proxyMw","list","listMerge","isList","push","size","merge","setUiPort"],"sources":["../lib/options.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}