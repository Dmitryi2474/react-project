{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar immutable_1 = require(\"immutable\");\nvar addToFilesOption_1 = require(\"./transforms/addToFilesOption\");\nvar addDefaultIgnorePatterns_1 = require(\"./transforms/addDefaultIgnorePatterns\");\nvar copyCLIIgnoreToWatchOptions_1 = require(\"./transforms/copyCLIIgnoreToWatchOptions\");\nvar handleExtensionsOption_1 = require(\"./transforms/handleExtensionsOption\");\nvar handleFilesOption_1 = require(\"./transforms/handleFilesOption\");\nvar handleGhostModeOption_1 = require(\"./transforms/handleGhostModeOption\");\nvar handlePortsOption_1 = require(\"./transforms/handlePortsOption\");\nvar handleProxyOption_1 = require(\"./transforms/handleProxyOption\");\nvar handleServerOption_1 = require(\"./transforms/handleServerOption\");\nvar appendServerIndexOption_1 = require(\"./transforms/appendServerIndexOption\");\nvar appendServerDirectoryOption_1 = require(\"./transforms/appendServerDirectoryOption\");\nvar addCwdToWatchOptions_1 = require(\"./transforms/addCwdToWatchOptions\");\nvar options_1 = require(\"../options\");\nvar handleHostOption_1 = require(\"./transforms/handleHostOption\");\nvar _ = require(\"../lodash.custom\");\nvar defaultConfig = require(\"../default-config\");\nvar immDefs = immutable_1.fromJS(defaultConfig);\nfunction merge(input) {\n  var merged = immDefs.mergeDeep(input);\n  var transforms = [addToFilesOption_1.addToFilesOption, addCwdToWatchOptions_1.addCwdToWatchOptions, addDefaultIgnorePatterns_1.addDefaultIgnorePatterns, copyCLIIgnoreToWatchOptions_1.copyCLIIgnoreToWatchOptions, handleServerOption_1.handleServerOption, appendServerIndexOption_1.appendServerIndexOption, appendServerDirectoryOption_1.appendServerDirectoryOption, handleProxyOption_1.handleProxyOption, handlePortsOption_1.handlePortsOption, handleHostOption_1.handleHostOption, handleGhostModeOption_1.handleGhostModeOption, handleFilesOption_1.handleFilesOption, handleExtensionsOption_1.handleExtensionsOption, options_1.setMode, options_1.setScheme, options_1.setStartPath, options_1.setProxyWs, options_1.setServerOpts, options_1.liftExtensionsOptionFromCli, options_1.setNamespace, options_1.fixSnippetIgnorePaths, options_1.fixSnippetIncludePaths, options_1.fixRewriteRules, options_1.setMiddleware, options_1.setOpen, options_1.setUiPort];\n  var output = transforms.reduce(function (acc, item) {\n    var current = acc[0],\n      currentErrors = acc[1];\n    var _a = item.call(null, current),\n      result = _a[0],\n      errors = _a[1];\n    return [result, currentErrors.concat(errors)];\n  }, [merged, []]);\n  return output;\n}\nexports.merge = merge;\n/**\n * @param string\n */\nfunction explodeFilesArg(string) {\n  return string.split(\",\").map(function (item) {\n    return item.trim();\n  });\n}\nexports.explodeFilesArg = explodeFilesArg;\n/**\n * @param value\n * @returns {{globs: Array, objs: Array}}\n */\nfunction makeFilesArg(value) {\n  var globs = [];\n  var objs = [];\n  if (_.isString(value)) {\n    globs = globs.concat(explodeFilesArg(value));\n  }\n  if (immutable_1.List.isList(value) && value.size) {\n    value.forEach(function (value) {\n      if (_.isString(value)) {\n        globs.push(value);\n      } else {\n        if (immutable_1.Map.isMap(value)) {\n          objs.push(value);\n        }\n      }\n    });\n  }\n  return {\n    globs: globs,\n    objs: objs\n  };\n}\nexports.makeFilesArg = makeFilesArg;\nfunction printErrors(errors) {\n  return errors.map(function (error) {\n    return [\"Error Type:    \" + error.type, \"Error Level:   \" + error.level, error.errors.map(function (item) {\n      return [\"Error Message: \" + item.error.message, item.meta ? item.meta().join(\"\\n\") : \"\"].filter(Boolean).join(\"\\n\");\n    })].join(\"\\n\");\n  }).join(\"\\n\\n\");\n}\nexports.printErrors = printErrors;","map":{"version":3,"mappings":"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","names":["_","require","defaultConfig","immDefs","immutable_1","merge","input","merged","mergeDeep","transforms","addToFilesOption_1","addCwdToWatchOptions_1","addDefaultIgnorePatterns_1","copyCLIIgnoreToWatchOptions_1","handleServerOption_1","appendServerIndexOption_1","appendServerDirectoryOption_1","handleProxyOption_1","handlePortsOption_1","handleHostOption_1","handleGhostModeOption_1","handleFilesOption_1","handleExtensionsOption_1","options_1","output","reduce","acc","item","currentErrors","result","errors","exports","explodeFilesArg","string","split","map","trim","makeFilesArg","value","globs","objs","isString","concat","isList","size","forEach","push","isMap","printErrors","error","type","level","message","meta","join","filter","Boolean"],"sources":["../../lib/cli/cli-options.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}