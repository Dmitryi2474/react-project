{"ast":null,"code":"'use strict';\n\nconst fs = require('graceful-fs');\nconst path = require('path');\nconst ncp = require('./ncp');\nconst mkdir = require('../mkdirs');\nconst pathExists = require('../path-exists').pathExists;\nfunction copy(src, dest, options, callback) {\n  if (typeof options === 'function' && !callback) {\n    callback = options;\n    options = {};\n  } else if (typeof options === 'function' || options instanceof RegExp) {\n    options = {\n      filter: options\n    };\n  }\n  callback = callback || function () {};\n  options = options || {};\n\n  // Warn about using preserveTimestamps on 32-bit node:\n  if (options.preserveTimestamps && process.arch === 'ia32') {\n    console.warn(`fs-extra: Using the preserveTimestamps option in 32-bit node is not recommended;\\n\n    see https://github.com/jprichardson/node-fs-extra/issues/269`);\n  }\n\n  // don't allow src and dest to be the same\n  const basePath = process.cwd();\n  const currentPath = path.resolve(basePath, src);\n  const targetPath = path.resolve(basePath, dest);\n  if (currentPath === targetPath) return callback(new Error('Source and destination must not be the same.'));\n  fs.lstat(src, (err, stats) => {\n    if (err) return callback(err);\n    let dir = null;\n    if (stats.isDirectory()) {\n      const parts = dest.split(path.sep);\n      parts.pop();\n      dir = parts.join(path.sep);\n    } else {\n      dir = path.dirname(dest);\n    }\n    pathExists(dir, (err, dirExists) => {\n      if (err) return callback(err);\n      if (dirExists) return ncp(src, dest, options, callback);\n      mkdir.mkdirs(dir, err => {\n        if (err) return callback(err);\n        ncp(src, dest, options, callback);\n      });\n    });\n  });\n}\nmodule.exports = copy;","map":{"version":3,"names":["fs","require","path","ncp","mkdir","pathExists","copy","src","dest","options","callback","RegExp","filter","preserveTimestamps","process","arch","console","warn","basePath","cwd","currentPath","resolve","targetPath","Error","lstat","err","stats","dir","isDirectory","parts","split","sep","pop","join","dirname","dirExists","mkdirs","module","exports"],"sources":["/home/user/Рабочий стол/pizza/project/node_modules/fs-extra/lib/copy/copy.js"],"sourcesContent":["'use strict'\n\nconst fs = require('graceful-fs')\nconst path = require('path')\nconst ncp = require('./ncp')\nconst mkdir = require('../mkdirs')\nconst pathExists = require('../path-exists').pathExists\n\nfunction copy (src, dest, options, callback) {\n  if (typeof options === 'function' && !callback) {\n    callback = options\n    options = {}\n  } else if (typeof options === 'function' || options instanceof RegExp) {\n    options = {filter: options}\n  }\n  callback = callback || function () {}\n  options = options || {}\n\n  // Warn about using preserveTimestamps on 32-bit node:\n  if (options.preserveTimestamps && process.arch === 'ia32') {\n    console.warn(`fs-extra: Using the preserveTimestamps option in 32-bit node is not recommended;\\n\n    see https://github.com/jprichardson/node-fs-extra/issues/269`)\n  }\n\n  // don't allow src and dest to be the same\n  const basePath = process.cwd()\n  const currentPath = path.resolve(basePath, src)\n  const targetPath = path.resolve(basePath, dest)\n  if (currentPath === targetPath) return callback(new Error('Source and destination must not be the same.'))\n\n  fs.lstat(src, (err, stats) => {\n    if (err) return callback(err)\n\n    let dir = null\n    if (stats.isDirectory()) {\n      const parts = dest.split(path.sep)\n      parts.pop()\n      dir = parts.join(path.sep)\n    } else {\n      dir = path.dirname(dest)\n    }\n\n    pathExists(dir, (err, dirExists) => {\n      if (err) return callback(err)\n      if (dirExists) return ncp(src, dest, options, callback)\n      mkdir.mkdirs(dir, err => {\n        if (err) return callback(err)\n        ncp(src, dest, options, callback)\n      })\n    })\n  })\n}\n\nmodule.exports = copy\n"],"mappings":"AAAA,YAAY;;AAEZ,MAAMA,EAAE,GAAGC,OAAO,CAAC,aAAa,CAAC;AACjC,MAAMC,IAAI,GAAGD,OAAO,CAAC,MAAM,CAAC;AAC5B,MAAME,GAAG,GAAGF,OAAO,CAAC,OAAO,CAAC;AAC5B,MAAMG,KAAK,GAAGH,OAAO,CAAC,WAAW,CAAC;AAClC,MAAMI,UAAU,GAAGJ,OAAO,CAAC,gBAAgB,CAAC,CAACI,UAAU;AAEvD,SAASC,IAAI,CAAEC,GAAG,EAAEC,IAAI,EAAEC,OAAO,EAAEC,QAAQ,EAAE;EAC3C,IAAI,OAAOD,OAAO,KAAK,UAAU,IAAI,CAACC,QAAQ,EAAE;IAC9CA,QAAQ,GAAGD,OAAO;IAClBA,OAAO,GAAG,CAAC,CAAC;EACd,CAAC,MAAM,IAAI,OAAOA,OAAO,KAAK,UAAU,IAAIA,OAAO,YAAYE,MAAM,EAAE;IACrEF,OAAO,GAAG;MAACG,MAAM,EAAEH;IAAO,CAAC;EAC7B;EACAC,QAAQ,GAAGA,QAAQ,IAAI,YAAY,CAAC,CAAC;EACrCD,OAAO,GAAGA,OAAO,IAAI,CAAC,CAAC;;EAEvB;EACA,IAAIA,OAAO,CAACI,kBAAkB,IAAIC,OAAO,CAACC,IAAI,KAAK,MAAM,EAAE;IACzDC,OAAO,CAACC,IAAI,CAAE;AAClB,iEAAiE,CAAC;EAChE;;EAEA;EACA,MAAMC,QAAQ,GAAGJ,OAAO,CAACK,GAAG,EAAE;EAC9B,MAAMC,WAAW,GAAGlB,IAAI,CAACmB,OAAO,CAACH,QAAQ,EAAEX,GAAG,CAAC;EAC/C,MAAMe,UAAU,GAAGpB,IAAI,CAACmB,OAAO,CAACH,QAAQ,EAAEV,IAAI,CAAC;EAC/C,IAAIY,WAAW,KAAKE,UAAU,EAAE,OAAOZ,QAAQ,CAAC,IAAIa,KAAK,CAAC,8CAA8C,CAAC,CAAC;EAE1GvB,EAAE,CAACwB,KAAK,CAACjB,GAAG,EAAE,CAACkB,GAAG,EAAEC,KAAK,KAAK;IAC5B,IAAID,GAAG,EAAE,OAAOf,QAAQ,CAACe,GAAG,CAAC;IAE7B,IAAIE,GAAG,GAAG,IAAI;IACd,IAAID,KAAK,CAACE,WAAW,EAAE,EAAE;MACvB,MAAMC,KAAK,GAAGrB,IAAI,CAACsB,KAAK,CAAC5B,IAAI,CAAC6B,GAAG,CAAC;MAClCF,KAAK,CAACG,GAAG,EAAE;MACXL,GAAG,GAAGE,KAAK,CAACI,IAAI,CAAC/B,IAAI,CAAC6B,GAAG,CAAC;IAC5B,CAAC,MAAM;MACLJ,GAAG,GAAGzB,IAAI,CAACgC,OAAO,CAAC1B,IAAI,CAAC;IAC1B;IAEAH,UAAU,CAACsB,GAAG,EAAE,CAACF,GAAG,EAAEU,SAAS,KAAK;MAClC,IAAIV,GAAG,EAAE,OAAOf,QAAQ,CAACe,GAAG,CAAC;MAC7B,IAAIU,SAAS,EAAE,OAAOhC,GAAG,CAACI,GAAG,EAAEC,IAAI,EAAEC,OAAO,EAAEC,QAAQ,CAAC;MACvDN,KAAK,CAACgC,MAAM,CAACT,GAAG,EAAEF,GAAG,IAAI;QACvB,IAAIA,GAAG,EAAE,OAAOf,QAAQ,CAACe,GAAG,CAAC;QAC7BtB,GAAG,CAACI,GAAG,EAAEC,IAAI,EAAEC,OAAO,EAAEC,QAAQ,CAAC;MACnC,CAAC,CAAC;IACJ,CAAC,CAAC;EACJ,CAAC,CAAC;AACJ;AAEA2B,MAAM,CAACC,OAAO,GAAGhC,IAAI"},"metadata":{},"sourceType":"script"}