{"ast":null,"code":"\"use strict\";\n\nvar fs = require(\"fs\");\nvar path = require(\"path\");\nvar join = require(\"path\").join;\nvar connect = require(\"connect\");\nvar Immutable = require(\"immutable\");\nvar http = require(\"http\");\nvar https = require(\"https\");\nvar Map = require(\"immutable\").Map;\nvar fromJS = require(\"immutable\").fromJS;\nvar List = require(\"immutable\").List;\nvar snippet = require(\"./../snippet\").utils;\nvar _ = require(\"../lodash.custom\");\nvar serveStatic = require(\"./serve-static-wrapper\").default();\nvar serveIndex = require(\"serve-index\");\nvar logger = require(\"../logger\");\nvar snippetUtils = require(\"../snippet\").utils;\nvar lrSnippet = require(\"resp-modifier\");\nvar certPath = join(__dirname, \"..\", \"..\", \"certs\");\nfunction getCa(options) {\n  var caOption = options.getIn([\"https\", \"ca\"]);\n  // if not provided, use Browsersync self-signed\n  if (typeof caOption === \"undefined\") {\n    return fs.readFileSync(join(certPath, \"server.csr\"));\n  }\n  // if a string was given, read that file from disk\n  if (typeof caOption === \"string\") {\n    return fs.readFileSync(caOption);\n  }\n  // if an array was given, read all\n  if (List.isList(caOption)) {\n    return caOption.toArray().map(function (x) {\n      return fs.readFileSync(x);\n    });\n  }\n}\nfunction getKey(options) {\n  return fs.readFileSync(options.getIn([\"https\", \"key\"]) || join(certPath, \"server.key\"));\n}\nfunction getCert(options) {\n  return fs.readFileSync(options.getIn([\"https\", \"cert\"]) || join(certPath, \"server.crt\"));\n}\nfunction getHttpsServerDefaults(options) {\n  return fromJS({\n    key: getKey(options),\n    cert: getCert(options),\n    ca: getCa(options),\n    passphrase: \"\"\n  });\n}\nfunction getPFXDefaults(options) {\n  return fromJS({\n    pfx: fs.readFileSync(options.getIn([\"https\", \"pfx\"]))\n  });\n}\nvar serverUtils = {\n  /**\n   * @param options\n   * @returns {{key, cert}}\n   */\n  getHttpsOptions: function (options) {\n    var userOption = options.get(\"https\");\n    if (Map.isMap(userOption)) {\n      if (userOption.has(\"pfx\")) {\n        return userOption.mergeDeep(getPFXDefaults(options));\n      }\n      return userOption.mergeDeep(getHttpsServerDefaults(options));\n    }\n    return getHttpsServerDefaults(options);\n  },\n  /**\n   * Get either http or https server\n   * or use the httpModule provided in options if present\n   */\n  getServer: function (app, options) {\n    return {\n      server: function () {\n        var httpModule = serverUtils.getHttpModule(options);\n        if (options.get(\"scheme\") === \"https\" || options.get(\"httpModule\") === \"http2\") {\n          var opts = serverUtils.getHttpsOptions(options);\n          return httpModule.createServer(opts.toJS(), app);\n        }\n        return httpModule.createServer(app);\n      }(),\n      app: app\n    };\n  },\n  getHttpModule: function (options) {\n    /**\n     * Users may provide a string to be used by nodes\n     * require lookup.\n     */\n    var httpModule = options.get(\"httpModule\");\n    if (typeof httpModule === \"string\") {\n      /**\n       * Note, this could throw, but let that happen as\n       * the error message good enough.\n       */\n      var maybe = require.resolve(httpModule);\n      return require(maybe);\n    }\n    if (options.get(\"scheme\") === \"https\") {\n      return https;\n    }\n    return http;\n  },\n  getMiddlewares: function (bs) {\n    var clientJs = bs.pluginManager.hook(\"client:js\", {\n      port: bs.options.get(\"port\"),\n      options: bs.options\n    });\n    var scripts = bs.pluginManager.get(\"client:script\")(bs.options.toJS(), clientJs, \"middleware\");\n    var defaultMiddlewares = [{\n      id: \"Browsersync HTTP Protocol\",\n      route: require(\"../config\").httpProtocol.path,\n      handle: require(\"../http-protocol\").middleware(bs)\n    }, {\n      id: \"Browsersync IE8 Support\",\n      route: \"\",\n      handle: snippet.isOldIe(bs.options.get(\"excludedFileTypes\").toJS())\n    }, {\n      id: \"Browsersync Response Modifier\",\n      route: \"\",\n      handle: serverUtils.getSnippetMiddleware(bs)\n    }, {\n      id: \"Browsersync Client - versioned\",\n      route: bs.options.getIn([\"scriptPaths\", \"versioned\"]),\n      handle: scripts\n    }, {\n      id: \"Browsersync Client\",\n      route: bs.options.getIn([\"scriptPaths\", \"path\"]),\n      handle: scripts\n    }];\n    /**\n     * Add cors middleware to the front of the stack\n     * if a user provided a 'cors' flag\n     */\n    if (bs.options.get(\"cors\")) {\n      defaultMiddlewares.unshift({\n        id: \"Browsersync CORS support\",\n        route: \"\",\n        handle: serverUtils.getCorsMiddlewware()\n      });\n    }\n    /**\n     * Add connect-history-api-fallback if 'single' argument given\n     */\n    if (bs.options.get(\"single\")) {\n      defaultMiddlewares.unshift({\n        id: \"Browsersync SPA support\",\n        route: \"\",\n        handle: require(\"connect-history-api-fallback\")()\n      });\n    }\n    /**\n     * Add serve static middleware\n     */\n    if (bs.options.get(\"serveStatic\")) {\n      var ssMiddlewares = serverUtils.getServeStaticMiddlewares(bs.options.get(\"serveStatic\"), bs.options.get(\"serveStaticOptions\", Immutable.Map({})).toJS());\n      var withErrors = ssMiddlewares.filter(function (x) {\n        return x.get(\"errors\").size > 0;\n      });\n      var withoutErrors = ssMiddlewares.filter(function (x) {\n        return x.get(\"errors\").size === 0;\n      });\n      if (withErrors.size) {\n        withErrors.forEach(function (item) {\n          logger.logger.error(\"{red:Warning!} %s\", item.getIn([\"errors\", 0, \"data\", \"message\"]));\n        });\n      }\n      if (withoutErrors.size) {\n        withoutErrors.forEach(function (item) {\n          defaultMiddlewares.push.apply(defaultMiddlewares, item.get(\"items\").toJS());\n        });\n      }\n    }\n    /**\n     * Add user-provided middlewares\n     */\n    var userMiddlewares = bs.options.get(\"middleware\").map(normaliseMiddleware).toArray();\n    var beforeMiddlewares = userMiddlewares.filter(function (x) {\n      return x.override;\n    });\n    var afterMiddlewares = userMiddlewares.filter(function (x) {\n      return !x.override;\n    }).concat(bs.options.get(\"mode\") !== \"proxy\" && userMiddlewares.length === 0 && {\n      id: \"Browsersync 404/index support\",\n      route: \"\",\n      handle: serveIndex(bs.options.get(\"cwd\"), {\n        icons: true,\n        view: \"details\"\n      })\n    });\n    var mwStack = [].concat(beforeMiddlewares, defaultMiddlewares, afterMiddlewares).filter(Boolean);\n    return mwStack;\n    function normaliseMiddleware(item) {\n      /**\n       * Object given in options, which\n       * ended up being a Map\n       */\n      if (Map.isMap(item)) {\n        return item.toJS();\n      }\n      /**\n       * Single function\n       */\n      if (typeof item === \"function\") {\n        return {\n          route: \"\",\n          handle: item\n        };\n      }\n      /**\n       * Plain obj\n       */\n      if (item.route !== undefined && item.handle) {\n        return item;\n      }\n    }\n  },\n  getBaseApp: function (bs) {\n    var app = connect();\n    var middlewares = serverUtils.getMiddlewares(bs);\n    /**\n     * Add all internal middlewares\n     */\n    middlewares.forEach(function (item) {\n      app.stack.push(item);\n    });\n    return app;\n  },\n  getSnippetMiddleware: function (bs) {\n    var rules = [];\n    var blacklist = List([]).concat(bs.options.getIn([\"snippetOptions\", \"ignorePaths\"])).concat(bs.options.getIn([\"snippetOptions\", \"blacklist\"])).filter(Boolean);\n    var whitelist = List([]).concat(bs.options.getIn([\"snippetOptions\", \"whitelist\"]));\n    // Snippet\n    rules.push(snippetUtils.getRegex(bs.options.get(\"snippet\"), bs.options.get(\"snippetOptions\")));\n    // User\n    bs.options.get(\"rewriteRules\").forEach(function (rule) {\n      if (Map.isMap(rule)) {\n        rules.push(rule.toJS());\n      }\n      if (_.isPlainObject(rule)) {\n        rules.push(rule);\n      }\n    });\n    // Proxy\n    if (bs.options.get(\"proxy\")) {\n      var proxyRule = require(\"./proxy-utils\").rewriteLinks(bs.options.getIn([\"proxy\", \"url\"]).toJS());\n      rules.push(proxyRule);\n    }\n    var lr = lrSnippet.create({\n      rules: rules,\n      blacklist: blacklist.toArray(),\n      whitelist: whitelist.toArray()\n    });\n    return lr.middleware;\n  },\n  getCorsMiddlewware: function () {\n    return function (req, res, next) {\n      // Website you wish to allow to connect\n      res.setHeader(\"Access-Control-Allow-Origin\", \"*\");\n      // Request methods you wish to allow\n      res.setHeader(\"Access-Control-Allow-Methods\", \"GET, POST, OPTIONS, PUT, PATCH, DELETE\");\n      // Request headers you wish to allow\n      res.setHeader(\"Access-Control-Allow-Headers\", \"X-Requested-With,content-type\");\n      // Set to true if you need the website to include cookies in the requests sent\n      // to the API (e.g. in case you use sessions)\n      res.setHeader(\"Access-Control-Allow-Credentials\", true);\n      next();\n    };\n  },\n  /**\n   * @param ssOption\n   * @param serveStaticOptions\n   * @returns {*}\n   */\n  getServeStaticMiddlewares: function (ssOption, serveStaticOptions) {\n    return ssOption.map(function (dir, i) {\n      /**\n       * When a user gives a plain string only, eg:\n       *   serveStatic: ['./temp']\n       *     ->\n       *       This means a middleware will be created with\n       *         route: ''\n       *         handle: serveStatic('./temp', options)\n       */\n      if (_.isString(dir)) {\n        return getFromString(dir);\n      }\n      /**\n       * If a user gave an object eg:\n       *   serveStatic: [{route: \"\", dir: [\"test\", \"./tmp\"]}]\n       *     ->\n       *       This means we need to create a middle for each route + dir combo\n       */\n      if (Immutable.Map.isMap(dir)) {\n        return getFromMap(dir, i);\n      }\n      /**\n       * At this point, an item in the serveStatic array was not a string\n       * or an object so we return an error that can be logged\n       */\n      return fromJS({\n        items: [],\n        errors: [{\n          type: \"Invalid Type\",\n          data: {\n            message: \"Only strings and Objects (with route+dir) are supported for the ServeStatic option\"\n          }\n        }]\n      });\n    });\n    /**\n     * @param {string} x\n     * @returns {string}\n     */\n    function getRoute(x) {\n      if (x === \"\") return \"\";\n      return x[0] === \"/\" ? x : \"/\" + x;\n    }\n    /**\n     * @param dir\n     * @returns {Map}\n     */\n    function getFromString(dir) {\n      return fromJS({\n        items: [{\n          route: \"\",\n          handle: serveStatic(dir, serveStaticOptions)\n        }],\n        errors: []\n      });\n    }\n    /**\n     * @param dir\n     * @returns {Map}\n     */\n    function getFromMap(dir) {\n      var ssOptions = function () {\n        if (dir.get(\"options\")) {\n          return dir.get(\"options\").toJS();\n        }\n        return {};\n      }();\n      var route = Immutable.List([]).concat(dir.get(\"route\")).filter(_.isString);\n      var _dir = Immutable.List([]).concat(dir.get(\"dir\")).filter(_.isString);\n      if (_dir.size === 0) {\n        return fromJS({\n          items: [],\n          errors: [{\n            type: \"Invalid Object\",\n            data: {\n              message: \"Serve Static requires a 'dir' property when using an Object\"\n            }\n          }]\n        });\n      }\n      var ssItems = function () {\n        /**\n         * iterate over every 'route' item\n         * @type {Immutable.List<any>|Immutable.List<*>|Immutable.List<any>|*}\n         */\n        var routeItems = function () {\n          /**\n           * If no 'route' was given, assume we want to match all\n           * paths\n           */\n          if (route.size === 0) {\n            return _dir.map(function (dirString) {\n              return Map({\n                route: \"\",\n                dir: dirString\n              });\n            });\n          }\n          return route.reduce(function (acc, routeString) {\n            /**\n             * For each 'route' item, also iterate through 'dirs'\n             * @type {Immutable.Iterable<K, M>}\n             */\n            var perDir = _dir.map(function (dirString) {\n              return Map({\n                route: getRoute(routeString),\n                dir: dirString\n              });\n            });\n            return acc.concat(perDir);\n          }, List([]));\n        }();\n        /**\n         * Now create a serverStatic Middleware for each item\n         */\n        return routeItems.map(function (routeItem) {\n          return routeItem.merge({\n            handle: serveStatic(routeItem.get(\"dir\"), ssOptions)\n          });\n        });\n      }();\n      return fromJS({\n        items: ssItems,\n        errors: []\n      });\n    }\n  }\n};\nmodule.exports = serverUtils;","map":{"version":3,"mappings":"AAAA,YAAY;;AAEZ,IAAIA,EAAE,GAAGC,OAAO,CAAC,IAAI,CAAC;AACtB,IAAIC,IAAI,GAAGD,OAAO,CAAC,MAAM,CAAC;AAC1B,IAAIE,IAAI,GAAGF,OAAO,CAAC,MAAM,CAAC,CAACE,IAAI;AAC/B,IAAIC,OAAO,GAAGH,OAAO,CAAC,SAAS,CAAC;AAChC,IAAII,SAAS,GAAGJ,OAAO,CAAC,WAAW,CAAC;AACpC,IAAIK,IAAI,GAAGL,OAAO,CAAC,MAAM,CAAC;AAC1B,IAAIM,KAAK,GAAGN,OAAO,CAAC,OAAO,CAAC;AAC5B,IAAIO,GAAG,GAAGP,OAAO,CAAC,WAAW,CAAC,CAACO,GAAG;AAClC,IAAIC,MAAM,GAAGR,OAAO,CAAC,WAAW,CAAC,CAACQ,MAAM;AACxC,IAAIC,IAAI,GAAGT,OAAO,CAAC,WAAW,CAAC,CAACS,IAAI;AACpC,IAAIC,OAAO,GAAGV,OAAO,CAAC,cAAc,CAAC,CAACW,KAAK;AAC3C,IAAIC,CAAC,GAAGZ,OAAO,CAAC,kBAAkB,CAAC;AACnC,IAAIa,WAAW,GAAGb,OAAO,CAAC,wBAAwB,CAAC,CAACc,OAAO,EAAE;AAC7D,IAAIC,UAAU,GAAGf,OAAO,CAAC,aAAa,CAAC;AACvC,IAAIgB,MAAM,GAAGhB,OAAO,CAAC,WAAW,CAAC;AACjC,IAAIiB,YAAY,GAAGjB,OAAO,CAAC,YAAY,CAAC,CAACW,KAAK;AAC9C,IAAIO,SAAS,GAAGlB,OAAO,CAAC,eAAe,CAAC;AACxC,IAAImB,QAAQ,GAAGjB,IAAI,CAACkB,SAAS,EAAE,IAAI,EAAE,IAAI,EAAE,OAAO,CAAC;AAEnD,SAASC,KAAK,CAACC,OAAO;EAClB,IAAIC,QAAQ,GAAGD,OAAO,CAACE,KAAK,CAAC,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;EAC7C;EACA,IAAI,OAAOD,QAAQ,KAAK,WAAW,EAAE;IACjC,OAAOxB,EAAE,CAAC0B,YAAY,CAACvB,IAAI,CAACiB,QAAQ,EAAE,YAAY,CAAC,CAAC;;EAExD;EACA,IAAI,OAAOI,QAAQ,KAAK,QAAQ,EAAE;IAC9B,OAAOxB,EAAE,CAAC0B,YAAY,CAACF,QAAQ,CAAC;;EAEpC;EACA,IAAId,IAAI,CAACiB,MAAM,CAACH,QAAQ,CAAC,EAAE;IACvB,OAAOA,QAAQ,CAACI,OAAO,EAAE,CAACC,GAAG,CAAC,UAASC,CAAC;MACpC,OAAO9B,EAAE,CAAC0B,YAAY,CAACI,CAAC,CAAC;IAC7B,CAAC,CAAC;;AAEV;AAEA,SAASC,MAAM,CAACR,OAAO;EACnB,OAAOvB,EAAE,CAAC0B,YAAY,CAClBH,OAAO,CAACE,KAAK,CAAC,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC,IAAItB,IAAI,CAACiB,QAAQ,EAAE,YAAY,CAAC,CAClE;AACL;AAEA,SAASY,OAAO,CAACT,OAAO;EACpB,OAAOvB,EAAE,CAAC0B,YAAY,CAClBH,OAAO,CAACE,KAAK,CAAC,CAAC,OAAO,EAAE,MAAM,CAAC,CAAC,IAAItB,IAAI,CAACiB,QAAQ,EAAE,YAAY,CAAC,CACnE;AACL;AAEA,SAASa,sBAAsB,CAACV,OAAO;EACnC,OAAOd,MAAM,CAAC;IACVyB,GAAG,EAAEH,MAAM,CAACR,OAAO,CAAC;IACpBY,IAAI,EAAEH,OAAO,CAACT,OAAO,CAAC;IACtBa,EAAE,EAAEd,KAAK,CAACC,OAAO,CAAC;IAClBc,UAAU,EAAE;GACf,CAAC;AACN;AAEA,SAASC,cAAc,CAACf,OAAO;EAC3B,OAAOd,MAAM,CAAC;IACV8B,GAAG,EAAEvC,EAAE,CAAC0B,YAAY,CAACH,OAAO,CAACE,KAAK,CAAC,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;GACvD,CAAC;AACN;AAEA,IAAIe,WAAW,GAAG;EACd;;;;EAIAC,eAAe,EAAE,UAASlB,OAAO;IAC7B,IAAImB,UAAU,GAAGnB,OAAO,CAACoB,GAAG,CAAC,OAAO,CAAC;IACrC,IAAInC,GAAG,CAACoC,KAAK,CAACF,UAAU,CAAC,EAAE;MACvB,IAAIA,UAAU,CAACG,GAAG,CAAC,KAAK,CAAC,EAAE;QACvB,OAAOH,UAAU,CAACI,SAAS,CAACR,cAAc,CAACf,OAAO,CAAC,CAAC;;MAExD,OAAOmB,UAAU,CAACI,SAAS,CAACb,sBAAsB,CAACV,OAAO,CAAC,CAAC;;IAEhE,OAAOU,sBAAsB,CAACV,OAAO,CAAC;EAC1C,CAAC;EACD;;;;EAIAwB,SAAS,EAAE,UAASC,GAAG,EAAEzB,OAAO;IAC5B,OAAO;MACH0B,MAAM,EAAG;QACL,IAAIC,UAAU,GAAGV,WAAW,CAACW,aAAa,CAAC5B,OAAO,CAAC;QAEnD,IACIA,OAAO,CAACoB,GAAG,CAAC,QAAQ,CAAC,KAAK,OAAO,IACjCpB,OAAO,CAACoB,GAAG,CAAC,YAAY,CAAC,KAAK,OAAO,EACvC;UACE,IAAIS,IAAI,GAAGZ,WAAW,CAACC,eAAe,CAAClB,OAAO,CAAC;UAC/C,OAAO2B,UAAU,CAACG,YAAY,CAACD,IAAI,CAACE,IAAI,EAAE,EAAEN,GAAG,CAAC;;QAGpD,OAAOE,UAAU,CAACG,YAAY,CAACL,GAAG,CAAC;MACvC,CAAC,EAAG;MACJA,GAAG,EAAEA;KACR;EACL,CAAC;EACDG,aAAa,EAAE,UAAS5B,OAAO;IAC3B;;;;IAIA,IAAI2B,UAAU,GAAG3B,OAAO,CAACoB,GAAG,CAAC,YAAY,CAAC;IAE1C,IAAI,OAAOO,UAAU,KAAK,QAAQ,EAAE;MAChC;;;;MAIA,IAAIK,KAAK,GAAGtD,OAAO,CAACuD,OAAO,CAACN,UAAU,CAAC;MACvC,OAAOjD,OAAO,CAACsD,KAAK,CAAC;;IAGzB,IAAIhC,OAAO,CAACoB,GAAG,CAAC,QAAQ,CAAC,KAAK,OAAO,EAAE;MACnC,OAAOpC,KAAK;;IAGhB,OAAOD,IAAI;EACf,CAAC;EACDmD,cAAc,EAAE,UAASC,EAAE;IACvB,IAAIC,QAAQ,GAAGD,EAAE,CAACE,aAAa,CAACC,IAAI,CAAC,WAAW,EAAE;MAC9CC,IAAI,EAAEJ,EAAE,CAACnC,OAAO,CAACoB,GAAG,CAAC,MAAM,CAAC;MAC5BpB,OAAO,EAAEmC,EAAE,CAACnC;KACf,CAAC;IAEF,IAAIwC,OAAO,GAAGL,EAAE,CAACE,aAAa,CAACjB,GAAG,CAAC,eAAe,CAAC,CAC/Ce,EAAE,CAACnC,OAAO,CAAC+B,IAAI,EAAE,EACjBK,QAAQ,EACR,YAAY,CACf;IAED,IAAIK,kBAAkB,GAAG,CACrB;MACIC,EAAE,EAAE,2BAA2B;MAC/BC,KAAK,EAAEjE,OAAO,CAAC,WAAW,CAAC,CAACkE,YAAY,CAACjE,IAAI;MAC7CkE,MAAM,EAAEnE,OAAO,CAAC,kBAAkB,CAAC,CAACoE,UAAU,CAACX,EAAE;KACpD,EACD;MACIO,EAAE,EAAE,yBAAyB;MAC7BC,KAAK,EAAE,EAAE;MACTE,MAAM,EAAEzD,OAAO,CAAC2D,OAAO,CACnBZ,EAAE,CAACnC,OAAO,CAACoB,GAAG,CAAC,mBAAmB,CAAC,CAACW,IAAI,EAAE;KAEjD,EACD;MACIW,EAAE,EAAE,+BAA+B;MACnCC,KAAK,EAAE,EAAE;MACTE,MAAM,EAAE5B,WAAW,CAAC+B,oBAAoB,CAACb,EAAE;KAC9C,EACD;MACIO,EAAE,EAAE,gCAAgC;MACpCC,KAAK,EAAER,EAAE,CAACnC,OAAO,CAACE,KAAK,CAAC,CAAC,aAAa,EAAE,WAAW,CAAC,CAAC;MACrD2C,MAAM,EAAEL;KACX,EACD;MACIE,EAAE,EAAE,oBAAoB;MACxBC,KAAK,EAAER,EAAE,CAACnC,OAAO,CAACE,KAAK,CAAC,CAAC,aAAa,EAAE,MAAM,CAAC,CAAC;MAChD2C,MAAM,EAAEL;KACX,CACJ;IAED;;;;IAIA,IAAIL,EAAE,CAACnC,OAAO,CAACoB,GAAG,CAAC,MAAM,CAAC,EAAE;MACxBqB,kBAAkB,CAACQ,OAAO,CAAC;QACvBP,EAAE,EAAE,0BAA0B;QAC9BC,KAAK,EAAE,EAAE;QACTE,MAAM,EAAE5B,WAAW,CAACiC,kBAAkB;OACzC,CAAC;;IAGN;;;IAGA,IAAIf,EAAE,CAACnC,OAAO,CAACoB,GAAG,CAAC,QAAQ,CAAC,EAAE;MAC1BqB,kBAAkB,CAACQ,OAAO,CAAC;QACvBP,EAAE,EAAE,yBAAyB;QAC7BC,KAAK,EAAE,EAAE;QACTE,MAAM,EAAEnE,OAAO,CAAC,8BAA8B,CAAC;OAClD,CAAC;;IAGN;;;IAGA,IAAIyD,EAAE,CAACnC,OAAO,CAACoB,GAAG,CAAC,aAAa,CAAC,EAAE;MAC/B,IAAI+B,aAAa,GAAGlC,WAAW,CAACmC,yBAAyB,CACrDjB,EAAE,CAACnC,OAAO,CAACoB,GAAG,CAAC,aAAa,CAAC,EAC7Be,EAAE,CAACnC,OAAO,CAACoB,GAAG,CAAC,oBAAoB,EAAEtC,SAAS,CAACG,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC8C,IAAI,EAAE,CACjE;MACD,IAAIsB,UAAU,GAAGF,aAAa,CAACG,MAAM,CAAC,UAAS/C,CAAC;QAC5C,OAAOA,CAAC,CAACa,GAAG,CAAC,QAAQ,CAAC,CAACmC,IAAI,GAAG,CAAC;MACnC,CAAC,CAAC;MACF,IAAIC,aAAa,GAAGL,aAAa,CAACG,MAAM,CAAC,UAAS/C,CAAC;QAC/C,OAAOA,CAAC,CAACa,GAAG,CAAC,QAAQ,CAAC,CAACmC,IAAI,KAAK,CAAC;MACrC,CAAC,CAAC;MAEF,IAAIF,UAAU,CAACE,IAAI,EAAE;QACjBF,UAAU,CAACI,OAAO,CAAC,UAASC,IAAI;UAC5BhE,MAAM,CAACA,MAAM,CAACiE,KAAK,CACf,mBAAmB,EACnBD,IAAI,CAACxD,KAAK,CAAC,CAAC,QAAQ,EAAE,CAAC,EAAE,MAAM,EAAE,SAAS,CAAC,CAAC,CAC/C;QACL,CAAC,CAAC;;MAGN,IAAIsD,aAAa,CAACD,IAAI,EAAE;QACpBC,aAAa,CAACC,OAAO,CAAC,UAASC,IAAI;UAC/BjB,kBAAkB,CAACmB,IAAI,CAACC,KAAK,CACzBpB,kBAAkB,EAClBiB,IAAI,CAACtC,GAAG,CAAC,OAAO,CAAC,CAACW,IAAI,EAAE,CAC3B;QACL,CAAC,CAAC;;;IAIV;;;IAGA,IAAI+B,eAAe,GAAG3B,EAAE,CAACnC,OAAO,CAC3BoB,GAAG,CAAC,YAAY,CAAC,CACjBd,GAAG,CAACyD,mBAAmB,CAAC,CACxB1D,OAAO,EAAE;IACd,IAAI2D,iBAAiB,GAAGF,eAAe,CAACR,MAAM,CAAC,UAAS/C,CAAC;MACrD,OAAOA,CAAC,CAAC0D,QAAQ;IACrB,CAAC,CAAC;IACF,IAAIC,gBAAgB,GAAGJ,eAAe,CACjCR,MAAM,CAAC,UAAS/C,CAAC;MACd,OAAO,CAACA,CAAC,CAAC0D,QAAQ;IACtB,CAAC,CAAC,CACDE,MAAM,CACHhC,EAAE,CAACnC,OAAO,CAACoB,GAAG,CAAC,MAAM,CAAC,KAAK,OAAO,IAC9B0C,eAAe,CAACM,MAAM,KAAK,CAAC,IAAI;MAC5B1B,EAAE,EAAE,+BAA+B;MACnCC,KAAK,EAAE,EAAE;MACTE,MAAM,EAAEpD,UAAU,CAAC0C,EAAE,CAACnC,OAAO,CAACoB,GAAG,CAAC,KAAK,CAAC,EAAE;QACtCiD,KAAK,EAAE,IAAI;QACXC,IAAI,EAAE;OACT;KACJ,CACR;IAEL,IAAMC,OAAO,GAAG,EAAE,CACbJ,MAAM,CAACH,iBAAiB,EAAEvB,kBAAkB,EAAEyB,gBAAgB,CAAC,CAC/DZ,MAAM,CAACkB,OAAO,CAAC;IAEpB,OAAOD,OAAO;IAEd,SAASR,mBAAmB,CAACL,IAAI;MAC7B;;;;MAIA,IAAIzE,GAAG,CAACoC,KAAK,CAACqC,IAAI,CAAC,EAAE;QACjB,OAAOA,IAAI,CAAC3B,IAAI,EAAE;;MAEtB;;;MAGA,IAAI,OAAO2B,IAAI,KAAK,UAAU,EAAE;QAC5B,OAAO;UACHf,KAAK,EAAE,EAAE;UACTE,MAAM,EAAEa;SACX;;MAEL;;;MAGA,IAAIA,IAAI,CAACf,KAAK,KAAK8B,SAAS,IAAIf,IAAI,CAACb,MAAM,EAAE;QACzC,OAAOa,IAAI;;IAEnB;EACJ,CAAC;EACDgB,UAAU,EAAE,UAASvC,EAAE;IACnB,IAAIV,GAAG,GAAG5C,OAAO,EAAE;IACnB,IAAI8F,WAAW,GAAG1D,WAAW,CAACiB,cAAc,CAACC,EAAE,CAAC;IAEhD;;;IAGAwC,WAAW,CAAClB,OAAO,CAAC,UAASC,IAAI;MAC7BjC,GAAG,CAACmD,KAAK,CAAChB,IAAI,CAACF,IAAI,CAAC;IACxB,CAAC,CAAC;IAEF,OAAOjC,GAAG;EACd,CAAC;EACDuB,oBAAoB,EAAE,UAASb,EAAE;IAC7B,IAAI0C,KAAK,GAAG,EAAE;IACd,IAAIC,SAAS,GAAG3F,IAAI,CAAC,EAAE,CAAC,CACnBgF,MAAM,CAAChC,EAAE,CAACnC,OAAO,CAACE,KAAK,CAAC,CAAC,gBAAgB,EAAE,aAAa,CAAC,CAAC,CAAC,CAC3DiE,MAAM,CAAChC,EAAE,CAACnC,OAAO,CAACE,KAAK,CAAC,CAAC,gBAAgB,EAAE,WAAW,CAAC,CAAC,CAAC,CACzDoD,MAAM,CAACkB,OAAO,CAAC;IAEpB,IAAIO,SAAS,GAAG5F,IAAI,CAAC,EAAE,CAAC,CAACgF,MAAM,CAC3BhC,EAAE,CAACnC,OAAO,CAACE,KAAK,CAAC,CAAC,gBAAgB,EAAE,WAAW,CAAC,CAAC,CACpD;IAED;IACA2E,KAAK,CAACjB,IAAI,CACNjE,YAAY,CAACqF,QAAQ,CACjB7C,EAAE,CAACnC,OAAO,CAACoB,GAAG,CAAC,SAAS,CAAC,EACzBe,EAAE,CAACnC,OAAO,CAACoB,GAAG,CAAC,gBAAgB,CAAC,CACnC,CACJ;IAED;IACAe,EAAE,CAACnC,OAAO,CAACoB,GAAG,CAAC,cAAc,CAAC,CAACqC,OAAO,CAAC,UAASwB,IAAI;MAChD,IAAIhG,GAAG,CAACoC,KAAK,CAAC4D,IAAI,CAAC,EAAE;QACjBJ,KAAK,CAACjB,IAAI,CAACqB,IAAI,CAAClD,IAAI,EAAE,CAAC;;MAE3B,IAAIzC,CAAC,CAAC4F,aAAa,CAACD,IAAI,CAAC,EAAE;QACvBJ,KAAK,CAACjB,IAAI,CAACqB,IAAI,CAAC;;IAExB,CAAC,CAAC;IAEF;IACA,IAAI9C,EAAE,CAACnC,OAAO,CAACoB,GAAG,CAAC,OAAO,CAAC,EAAE;MACzB,IAAI+D,SAAS,GAAGzG,OAAO,CAAC,eAAe,CAAC,CAAC0G,YAAY,CACjDjD,EAAE,CAACnC,OAAO,CAACE,KAAK,CAAC,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC,CAAC6B,IAAI,EAAE,CAC5C;MACD8C,KAAK,CAACjB,IAAI,CAACuB,SAAS,CAAC;;IAGzB,IAAIE,EAAE,GAAGzF,SAAS,CAAC0F,MAAM,CAAC;MACtBT,KAAK,EAAEA,KAAK;MACZC,SAAS,EAAEA,SAAS,CAACzE,OAAO,EAAE;MAC9B0E,SAAS,EAAEA,SAAS,CAAC1E,OAAO;KAC/B,CAAC;IAEF,OAAOgF,EAAE,CAACvC,UAAU;EACxB,CAAC;EACDI,kBAAkB,EAAE;IAChB,OAAO,UAASqC,GAAG,EAAEC,GAAG,EAAEC,IAAI;MAC1B;MACAD,GAAG,CAACE,SAAS,CAAC,6BAA6B,EAAE,GAAG,CAAC;MAEjD;MACAF,GAAG,CAACE,SAAS,CACT,8BAA8B,EAC9B,wCAAwC,CAC3C;MAED;MACAF,GAAG,CAACE,SAAS,CACT,8BAA8B,EAC9B,+BAA+B,CAClC;MAED;MACA;MACAF,GAAG,CAACE,SAAS,CAAC,kCAAkC,EAAE,IAAI,CAAC;MACvDD,IAAI,EAAE;IACV,CAAC;EACL,CAAC;EACD;;;;;EAKArC,yBAAyB,EAAE,UAASuC,QAAQ,EAAEC,kBAAkB;IAC5D,OAAOD,QAAQ,CAACrF,GAAG,CAAC,UAASuF,GAAG,EAAEC,CAAC;MAC/B;;;;;;;;MAQA,IAAIxG,CAAC,CAACyG,QAAQ,CAACF,GAAG,CAAC,EAAE;QACjB,OAAOG,aAAa,CAACH,GAAG,CAAC;;MAG7B;;;;;;MAMA,IAAI/G,SAAS,CAACG,GAAG,CAACoC,KAAK,CAACwE,GAAG,CAAC,EAAE;QAC1B,OAAOI,UAAU,CAACJ,GAAG,EAAEC,CAAC,CAAC;;MAG7B;;;;MAIA,OAAO5G,MAAM,CAAC;QACVgH,KAAK,EAAE,EAAE;QACTC,MAAM,EAAE,CACJ;UACIC,IAAI,EAAE,cAAc;UACpBC,IAAI,EAAE;YACFC,OAAO,EACH;;SAEX;OAER,CAAC;IACN,CAAC,CAAC;IAEF;;;;IAIA,SAASC,QAAQ,CAAChG,CAAC;MACf,IAAIA,CAAC,KAAK,EAAE,EAAE,OAAO,EAAE;MACvB,OAAOA,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,GAAGA,CAAC,GAAG,GAAG,GAAGA,CAAC;IACrC;IAEA;;;;IAIA,SAASyF,aAAa,CAACH,GAAG;MACtB,OAAO3G,MAAM,CAAC;QACVgH,KAAK,EAAE,CACH;UACIvD,KAAK,EAAE,EAAE;UACTE,MAAM,EAAEtD,WAAW,CAACsG,GAAG,EAAED,kBAAkB;SAC9C,CACJ;QACDO,MAAM,EAAE;OACX,CAAC;IACN;IAEA;;;;IAIA,SAASF,UAAU,CAACJ,GAAG;MACnB,IAAIW,SAAS,GAAI;QACb,IAAIX,GAAG,CAACzE,GAAG,CAAC,SAAS,CAAC,EAAE;UACpB,OAAOyE,GAAG,CAACzE,GAAG,CAAC,SAAS,CAAC,CAACW,IAAI,EAAE;;QAEpC,OAAO,EAAE;MACb,CAAC,EAAG;MAEJ,IAAIY,KAAK,GAAG7D,SAAS,CAACK,IAAI,CAAC,EAAE,CAAC,CACzBgF,MAAM,CAAC0B,GAAG,CAACzE,GAAG,CAAC,OAAO,CAAC,CAAC,CACxBkC,MAAM,CAAChE,CAAC,CAACyG,QAAQ,CAAC;MACvB,IAAIU,IAAI,GAAG3H,SAAS,CAACK,IAAI,CAAC,EAAE,CAAC,CACxBgF,MAAM,CAAC0B,GAAG,CAACzE,GAAG,CAAC,KAAK,CAAC,CAAC,CACtBkC,MAAM,CAAChE,CAAC,CAACyG,QAAQ,CAAC;MAEvB,IAAIU,IAAI,CAAClD,IAAI,KAAK,CAAC,EAAE;QACjB,OAAOrE,MAAM,CAAC;UACVgH,KAAK,EAAE,EAAE;UACTC,MAAM,EAAE,CACJ;YACIC,IAAI,EAAE,gBAAgB;YACtBC,IAAI,EAAE;cACFC,OAAO,EACH;;WAEX;SAER,CAAC;;MAGN,IAAII,OAAO,GAAI;QACX;;;;QAIA,IAAIC,UAAU,GAAI;UACd;;;;UAIA,IAAIhE,KAAK,CAACY,IAAI,KAAK,CAAC,EAAE;YAClB,OAAOkD,IAAI,CAACnG,GAAG,CAAC,UAASsG,SAAS;cAC9B,OAAO3H,GAAG,CAAC;gBACP0D,KAAK,EAAE,EAAE;gBACTkD,GAAG,EAAEe;eACR,CAAC;YACN,CAAC,CAAC;;UAGN,OAAOjE,KAAK,CAACkE,MAAM,CAAC,UAASC,GAAG,EAAEC,WAAW;YACzC;;;;YAIA,IAAIC,MAAM,GAAGP,IAAI,CAACnG,GAAG,CAAC,UAASsG,SAAS;cACpC,OAAO3H,GAAG,CAAC;gBACP0D,KAAK,EAAE4D,QAAQ,CAACQ,WAAW,CAAC;gBAC5BlB,GAAG,EAAEe;eACR,CAAC;YACN,CAAC,CAAC;YACF,OAAOE,GAAG,CAAC3C,MAAM,CAAC6C,MAAM,CAAC;UAC7B,CAAC,EAAE7H,IAAI,CAAC,EAAE,CAAC,CAAC;QAChB,CAAC,EAAG;QAEJ;;;QAGA,OAAOwH,UAAU,CAACrG,GAAG,CAAC,UAAS2G,SAAS;UACpC,OAAOA,SAAS,CAACC,KAAK,CAAC;YACnBrE,MAAM,EAAEtD,WAAW,CAAC0H,SAAS,CAAC7F,GAAG,CAAC,KAAK,CAAC,EAAEoF,SAAS;WACtD,CAAC;QACN,CAAC,CAAC;MACN,CAAC,EAAG;MAEJ,OAAOtH,MAAM,CAAC;QACVgH,KAAK,EAAEQ,OAAO;QACdP,MAAM,EAAE;OACX,CAAC;IACN;EACJ;CACH;AAEDgB,MAAM,CAACC,OAAO,GAAGnG,WAAW","names":["fs","require","path","join","connect","Immutable","http","https","Map","fromJS","List","snippet","utils","_","serveStatic","default","serveIndex","logger","snippetUtils","lrSnippet","certPath","__dirname","getCa","options","caOption","getIn","readFileSync","isList","toArray","map","x","getKey","getCert","getHttpsServerDefaults","key","cert","ca","passphrase","getPFXDefaults","pfx","serverUtils","getHttpsOptions","userOption","get","isMap","has","mergeDeep","getServer","app","server","httpModule","getHttpModule","opts","createServer","toJS","maybe","resolve","getMiddlewares","bs","clientJs","pluginManager","hook","port","scripts","defaultMiddlewares","id","route","httpProtocol","handle","middleware","isOldIe","getSnippetMiddleware","unshift","getCorsMiddlewware","ssMiddlewares","getServeStaticMiddlewares","withErrors","filter","size","withoutErrors","forEach","item","error","push","apply","userMiddlewares","normaliseMiddleware","beforeMiddlewares","override","afterMiddlewares","concat","length","icons","view","mwStack","Boolean","undefined","getBaseApp","middlewares","stack","rules","blacklist","whitelist","getRegex","rule","isPlainObject","proxyRule","rewriteLinks","lr","create","req","res","next","setHeader","ssOption","serveStaticOptions","dir","i","isString","getFromString","getFromMap","items","errors","type","data","message","getRoute","ssOptions","_dir","ssItems","routeItems","dirString","reduce","acc","routeString","perDir","routeItem","merge","module","exports"],"sources":["../../lib/server/utils.js"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}