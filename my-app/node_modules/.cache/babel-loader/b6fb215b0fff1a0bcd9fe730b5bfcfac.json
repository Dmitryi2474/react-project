{"ast":null,"code":"const objFilter = require('./obj-filter');\n\n// validation-type-stuff, missing params,\n// bad implications, custom checks.\nmodule.exports = function (yargs, usage, y18n) {\n  const __ = y18n.__;\n  const __n = y18n.__n;\n  const self = {};\n\n  // validate appropriate # of non-option\n  // arguments were provided, i.e., '_'.\n  self.nonOptionCount = function (argv) {\n    const demanded = yargs.getDemanded();\n    // don't count currently executing commands\n    const _s = argv._.length - yargs.getContext().commands.length;\n    if (demanded._ && (_s < demanded._.count || _s > demanded._.max)) {\n      if (demanded._.msg !== undefined) {\n        usage.fail(demanded._.msg);\n      } else if (_s < demanded._.count) {\n        usage.fail(__('Not enough non-option arguments: got %s, need at least %s', _s, demanded._.count));\n      } else {\n        usage.fail(__('Too many non-option arguments: got %s, maximum of %s', _s, demanded._.max));\n      }\n    }\n  };\n\n  // validate the appropriate # of <required>\n  // positional arguments were provided:\n  self.positionalCount = function (required, observed) {\n    if (observed < required) {\n      usage.fail(__('Not enough non-option arguments: got %s, need at least %s', observed, required));\n    }\n  };\n\n  // make sure that any args that require an\n  // value (--foo=bar), have a value.\n  self.missingArgumentValue = function (argv) {\n    const defaultValues = [true, false, ''];\n    const options = yargs.getOptions();\n    if (options.requiresArg.length > 0) {\n      const missingRequiredArgs = [];\n      options.requiresArg.forEach(function (key) {\n        const value = argv[key];\n\n        // if a value is explicitly requested,\n        // flag argument as missing if it does not\n        // look like foo=bar was entered.\n        if (~defaultValues.indexOf(value) || Array.isArray(value) && !value.length) {\n          missingRequiredArgs.push(key);\n        }\n      });\n      if (missingRequiredArgs.length > 0) {\n        usage.fail(__n('Missing argument value: %s', 'Missing argument values: %s', missingRequiredArgs.length, missingRequiredArgs.join(', ')));\n      }\n    }\n  };\n\n  // make sure all the required arguments are present.\n  self.requiredArguments = function (argv) {\n    const demanded = yargs.getDemanded();\n    var missing = null;\n    Object.keys(demanded).forEach(function (key) {\n      if (!argv.hasOwnProperty(key)) {\n        missing = missing || {};\n        missing[key] = demanded[key];\n      }\n    });\n    if (missing) {\n      const customMsgs = [];\n      Object.keys(missing).forEach(function (key) {\n        const msg = missing[key].msg;\n        if (msg && customMsgs.indexOf(msg) < 0) {\n          customMsgs.push(msg);\n        }\n      });\n      const customMsg = customMsgs.length ? '\\n' + customMsgs.join('\\n') : '';\n      usage.fail(__n('Missing required argument: %s', 'Missing required arguments: %s', Object.keys(missing).length, Object.keys(missing).join(', ') + customMsg));\n    }\n  };\n\n  // check for unknown arguments (strict-mode).\n  self.unknownArguments = function (argv, aliases) {\n    const aliasLookup = {};\n    const descriptions = usage.getDescriptions();\n    const demanded = yargs.getDemanded();\n    const commandKeys = yargs.getCommandInstance().getCommands();\n    const unknown = [];\n    const currentContext = yargs.getContext();\n    Object.keys(aliases).forEach(function (key) {\n      aliases[key].forEach(function (alias) {\n        aliasLookup[alias] = key;\n      });\n    });\n    Object.keys(argv).forEach(function (key) {\n      if (key !== '$0' && key !== '_' && !descriptions.hasOwnProperty(key) && !demanded.hasOwnProperty(key) && !aliasLookup.hasOwnProperty(key)) {\n        unknown.push(key);\n      }\n    });\n    if (commandKeys.length > 0) {\n      argv._.slice(currentContext.commands.length).forEach(function (key) {\n        if (commandKeys.indexOf(key) === -1) {\n          unknown.push(key);\n        }\n      });\n    }\n    if (unknown.length > 0) {\n      usage.fail(__n('Unknown argument: %s', 'Unknown arguments: %s', unknown.length, unknown.join(', ')));\n    }\n  };\n\n  // validate arguments limited to enumerated choices\n  self.limitedChoices = function (argv) {\n    const options = yargs.getOptions();\n    const invalid = {};\n    if (!Object.keys(options.choices).length) return;\n    Object.keys(argv).forEach(function (key) {\n      if (key !== '$0' && key !== '_' && options.choices.hasOwnProperty(key)) {\n        [].concat(argv[key]).forEach(function (value) {\n          // TODO case-insensitive configurability\n          if (options.choices[key].indexOf(value) === -1) {\n            invalid[key] = (invalid[key] || []).concat(value);\n          }\n        });\n      }\n    });\n    const invalidKeys = Object.keys(invalid);\n    if (!invalidKeys.length) return;\n    var msg = __('Invalid values:');\n    invalidKeys.forEach(function (key) {\n      msg += '\\n  ' + __('Argument: %s, Given: %s, Choices: %s', key, usage.stringifiedValues(invalid[key]), usage.stringifiedValues(options.choices[key]));\n    });\n    usage.fail(msg);\n  };\n\n  // custom checks, added using the `check` option on yargs.\n  var checks = [];\n  self.check = function (f) {\n    checks.push(f);\n  };\n  self.customChecks = function (argv, aliases) {\n    for (var i = 0, f; (f = checks[i]) !== undefined; i++) {\n      var result = null;\n      try {\n        result = f(argv, aliases);\n      } catch (err) {\n        usage.fail(err.message ? err.message : err, err);\n        continue;\n      }\n      if (!result) {\n        usage.fail(__('Argument check failed: %s', f.toString()));\n      } else if (typeof result === 'string' || result instanceof Error) {\n        usage.fail(result.toString(), result);\n      }\n    }\n  };\n\n  // check implications, argument foo implies => argument bar.\n  var implied = {};\n  self.implies = function (key, value) {\n    if (typeof key === 'object') {\n      Object.keys(key).forEach(function (k) {\n        self.implies(k, key[k]);\n      });\n    } else {\n      implied[key] = value;\n    }\n  };\n  self.getImplied = function () {\n    return implied;\n  };\n  self.implications = function (argv) {\n    const implyFail = [];\n    Object.keys(implied).forEach(function (key) {\n      var booleanNegation;\n      if (yargs.getOptions().configuration['boolean-negation'] === false) {\n        booleanNegation = false;\n      } else {\n        booleanNegation = true;\n      }\n      var num;\n      const origKey = key;\n      var value = implied[key];\n\n      // convert string '1' to number 1\n      num = Number(key);\n      key = isNaN(num) ? key : num;\n      if (typeof key === 'number') {\n        // check length of argv._\n        key = argv._.length >= key;\n      } else if (key.match(/^--no-.+/) && booleanNegation) {\n        // check if key doesn't exist\n        key = key.match(/^--no-(.+)/)[1];\n        key = !argv[key];\n      } else {\n        // check if key exists\n        key = argv[key];\n      }\n      num = Number(value);\n      value = isNaN(num) ? value : num;\n      if (typeof value === 'number') {\n        value = argv._.length >= value;\n      } else if (value.match(/^--no-.+/) && booleanNegation) {\n        value = value.match(/^--no-(.+)/)[1];\n        value = !argv[value];\n      } else {\n        value = argv[value];\n      }\n      if (key && !value) {\n        implyFail.push(origKey);\n      }\n    });\n    if (implyFail.length) {\n      var msg = __('Implications failed:') + '\\n';\n      implyFail.forEach(function (key) {\n        msg += '  ' + key + ' -> ' + implied[key];\n      });\n      usage.fail(msg);\n    }\n  };\n  self.recommendCommands = function (cmd, potentialCommands) {\n    const distance = require('./levenshtein');\n    const threshold = 3; // if it takes more than three edits, let's move on.\n    potentialCommands = potentialCommands.sort(function (a, b) {\n      return b.length - a.length;\n    });\n    var recommended = null;\n    var bestDistance = Infinity;\n    for (var i = 0, candidate; (candidate = potentialCommands[i]) !== undefined; i++) {\n      var d = distance(cmd, candidate);\n      if (d <= threshold && d < bestDistance) {\n        bestDistance = d;\n        recommended = candidate;\n      }\n    }\n    if (recommended) usage.fail(__('Did you mean %s?', recommended));\n  };\n  self.reset = function (globalLookup) {\n    implied = objFilter(implied, function (k, v) {\n      return globalLookup[k];\n    });\n    checks = [];\n    return self;\n  };\n  var frozen;\n  self.freeze = function () {\n    frozen = {};\n    frozen.implied = implied;\n    frozen.checks = checks;\n  };\n  self.unfreeze = function () {\n    implied = frozen.implied;\n    checks = frozen.checks;\n    frozen = undefined;\n  };\n  return self;\n};","map":{"version":3,"names":["objFilter","require","module","exports","yargs","usage","y18n","__","__n","self","nonOptionCount","argv","demanded","getDemanded","_s","_","length","getContext","commands","count","max","msg","undefined","fail","positionalCount","required","observed","missingArgumentValue","defaultValues","options","getOptions","requiresArg","missingRequiredArgs","forEach","key","value","indexOf","Array","isArray","push","join","requiredArguments","missing","Object","keys","hasOwnProperty","customMsgs","customMsg","unknownArguments","aliases","aliasLookup","descriptions","getDescriptions","commandKeys","getCommandInstance","getCommands","unknown","currentContext","alias","slice","limitedChoices","invalid","choices","concat","invalidKeys","stringifiedValues","checks","check","f","customChecks","i","result","err","message","toString","Error","implied","implies","k","getImplied","implications","implyFail","booleanNegation","configuration","num","origKey","Number","isNaN","match","recommendCommands","cmd","potentialCommands","distance","threshold","sort","a","b","recommended","bestDistance","Infinity","candidate","d","reset","globalLookup","v","frozen","freeze","unfreeze"],"sources":["/home/user/Рабочий стол/pizza/project/node_modules/yargs/lib/validation.js"],"sourcesContent":["const objFilter = require('./obj-filter')\n\n// validation-type-stuff, missing params,\n// bad implications, custom checks.\nmodule.exports = function (yargs, usage, y18n) {\n  const __ = y18n.__\n  const __n = y18n.__n\n  const self = {}\n\n  // validate appropriate # of non-option\n  // arguments were provided, i.e., '_'.\n  self.nonOptionCount = function (argv) {\n    const demanded = yargs.getDemanded()\n    // don't count currently executing commands\n    const _s = argv._.length - yargs.getContext().commands.length\n\n    if (demanded._ && (_s < demanded._.count || _s > demanded._.max)) {\n      if (demanded._.msg !== undefined) {\n        usage.fail(demanded._.msg)\n      } else if (_s < demanded._.count) {\n        usage.fail(\n          __('Not enough non-option arguments: got %s, need at least %s', _s, demanded._.count)\n        )\n      } else {\n        usage.fail(\n          __('Too many non-option arguments: got %s, maximum of %s', _s, demanded._.max)\n        )\n      }\n    }\n  }\n\n  // validate the appropriate # of <required>\n  // positional arguments were provided:\n  self.positionalCount = function (required, observed) {\n    if (observed < required) {\n      usage.fail(\n        __('Not enough non-option arguments: got %s, need at least %s', observed, required)\n      )\n    }\n  }\n\n  // make sure that any args that require an\n  // value (--foo=bar), have a value.\n  self.missingArgumentValue = function (argv) {\n    const defaultValues = [true, false, '']\n    const options = yargs.getOptions()\n\n    if (options.requiresArg.length > 0) {\n      const missingRequiredArgs = []\n\n      options.requiresArg.forEach(function (key) {\n        const value = argv[key]\n\n        // if a value is explicitly requested,\n        // flag argument as missing if it does not\n        // look like foo=bar was entered.\n        if (~defaultValues.indexOf(value) ||\n          (Array.isArray(value) && !value.length)) {\n          missingRequiredArgs.push(key)\n        }\n      })\n\n      if (missingRequiredArgs.length > 0) {\n        usage.fail(__n(\n          'Missing argument value: %s',\n          'Missing argument values: %s',\n          missingRequiredArgs.length,\n          missingRequiredArgs.join(', ')\n        ))\n      }\n    }\n  }\n\n  // make sure all the required arguments are present.\n  self.requiredArguments = function (argv) {\n    const demanded = yargs.getDemanded()\n    var missing = null\n\n    Object.keys(demanded).forEach(function (key) {\n      if (!argv.hasOwnProperty(key)) {\n        missing = missing || {}\n        missing[key] = demanded[key]\n      }\n    })\n\n    if (missing) {\n      const customMsgs = []\n      Object.keys(missing).forEach(function (key) {\n        const msg = missing[key].msg\n        if (msg && customMsgs.indexOf(msg) < 0) {\n          customMsgs.push(msg)\n        }\n      })\n\n      const customMsg = customMsgs.length ? '\\n' + customMsgs.join('\\n') : ''\n\n      usage.fail(__n(\n        'Missing required argument: %s',\n        'Missing required arguments: %s',\n        Object.keys(missing).length,\n        Object.keys(missing).join(', ') + customMsg\n      ))\n    }\n  }\n\n  // check for unknown arguments (strict-mode).\n  self.unknownArguments = function (argv, aliases) {\n    const aliasLookup = {}\n    const descriptions = usage.getDescriptions()\n    const demanded = yargs.getDemanded()\n    const commandKeys = yargs.getCommandInstance().getCommands()\n    const unknown = []\n    const currentContext = yargs.getContext()\n\n    Object.keys(aliases).forEach(function (key) {\n      aliases[key].forEach(function (alias) {\n        aliasLookup[alias] = key\n      })\n    })\n\n    Object.keys(argv).forEach(function (key) {\n      if (key !== '$0' && key !== '_' &&\n        !descriptions.hasOwnProperty(key) &&\n        !demanded.hasOwnProperty(key) &&\n        !aliasLookup.hasOwnProperty(key)) {\n        unknown.push(key)\n      }\n    })\n\n    if (commandKeys.length > 0) {\n      argv._.slice(currentContext.commands.length).forEach(function (key) {\n        if (commandKeys.indexOf(key) === -1) {\n          unknown.push(key)\n        }\n      })\n    }\n\n    if (unknown.length > 0) {\n      usage.fail(__n(\n        'Unknown argument: %s',\n        'Unknown arguments: %s',\n        unknown.length,\n        unknown.join(', ')\n      ))\n    }\n  }\n\n  // validate arguments limited to enumerated choices\n  self.limitedChoices = function (argv) {\n    const options = yargs.getOptions()\n    const invalid = {}\n\n    if (!Object.keys(options.choices).length) return\n\n    Object.keys(argv).forEach(function (key) {\n      if (key !== '$0' && key !== '_' &&\n        options.choices.hasOwnProperty(key)) {\n        [].concat(argv[key]).forEach(function (value) {\n          // TODO case-insensitive configurability\n          if (options.choices[key].indexOf(value) === -1) {\n            invalid[key] = (invalid[key] || []).concat(value)\n          }\n        })\n      }\n    })\n\n    const invalidKeys = Object.keys(invalid)\n\n    if (!invalidKeys.length) return\n\n    var msg = __('Invalid values:')\n    invalidKeys.forEach(function (key) {\n      msg += '\\n  ' + __(\n        'Argument: %s, Given: %s, Choices: %s',\n        key,\n        usage.stringifiedValues(invalid[key]),\n        usage.stringifiedValues(options.choices[key])\n      )\n    })\n    usage.fail(msg)\n  }\n\n  // custom checks, added using the `check` option on yargs.\n  var checks = []\n  self.check = function (f) {\n    checks.push(f)\n  }\n\n  self.customChecks = function (argv, aliases) {\n    for (var i = 0, f; (f = checks[i]) !== undefined; i++) {\n      var result = null\n      try {\n        result = f(argv, aliases)\n      } catch (err) {\n        usage.fail(err.message ? err.message : err, err)\n        continue\n      }\n\n      if (!result) {\n        usage.fail(__('Argument check failed: %s', f.toString()))\n      } else if (typeof result === 'string' || result instanceof Error) {\n        usage.fail(result.toString(), result)\n      }\n    }\n  }\n\n  // check implications, argument foo implies => argument bar.\n  var implied = {}\n  self.implies = function (key, value) {\n    if (typeof key === 'object') {\n      Object.keys(key).forEach(function (k) {\n        self.implies(k, key[k])\n      })\n    } else {\n      implied[key] = value\n    }\n  }\n  self.getImplied = function () {\n    return implied\n  }\n\n  self.implications = function (argv) {\n    const implyFail = []\n\n    Object.keys(implied).forEach(function (key) {\n      var booleanNegation\n      if (yargs.getOptions().configuration['boolean-negation'] === false) {\n        booleanNegation = false\n      } else {\n        booleanNegation = true\n      }\n      var num\n      const origKey = key\n      var value = implied[key]\n\n      // convert string '1' to number 1\n      num = Number(key)\n      key = isNaN(num) ? key : num\n\n      if (typeof key === 'number') {\n        // check length of argv._\n        key = argv._.length >= key\n      } else if (key.match(/^--no-.+/) && booleanNegation) {\n        // check if key doesn't exist\n        key = key.match(/^--no-(.+)/)[1]\n        key = !argv[key]\n      } else {\n        // check if key exists\n        key = argv[key]\n      }\n\n      num = Number(value)\n      value = isNaN(num) ? value : num\n\n      if (typeof value === 'number') {\n        value = argv._.length >= value\n      } else if (value.match(/^--no-.+/) && booleanNegation) {\n        value = value.match(/^--no-(.+)/)[1]\n        value = !argv[value]\n      } else {\n        value = argv[value]\n      }\n\n      if (key && !value) {\n        implyFail.push(origKey)\n      }\n    })\n\n    if (implyFail.length) {\n      var msg = __('Implications failed:') + '\\n'\n\n      implyFail.forEach(function (key) {\n        msg += ('  ' + key + ' -> ' + implied[key])\n      })\n\n      usage.fail(msg)\n    }\n  }\n\n  self.recommendCommands = function (cmd, potentialCommands) {\n    const distance = require('./levenshtein')\n    const threshold = 3 // if it takes more than three edits, let's move on.\n    potentialCommands = potentialCommands.sort(function (a, b) { return b.length - a.length })\n\n    var recommended = null\n    var bestDistance = Infinity\n    for (var i = 0, candidate; (candidate = potentialCommands[i]) !== undefined; i++) {\n      var d = distance(cmd, candidate)\n      if (d <= threshold && d < bestDistance) {\n        bestDistance = d\n        recommended = candidate\n      }\n    }\n    if (recommended) usage.fail(__('Did you mean %s?', recommended))\n  }\n\n  self.reset = function (globalLookup) {\n    implied = objFilter(implied, function (k, v) {\n      return globalLookup[k]\n    })\n    checks = []\n    return self\n  }\n\n  var frozen\n  self.freeze = function () {\n    frozen = {}\n    frozen.implied = implied\n    frozen.checks = checks\n  }\n  self.unfreeze = function () {\n    implied = frozen.implied\n    checks = frozen.checks\n    frozen = undefined\n  }\n\n  return self\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}