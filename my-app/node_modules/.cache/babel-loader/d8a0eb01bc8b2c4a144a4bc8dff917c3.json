{"ast":null,"code":"\"use strict\";\n\nvar _ = require(\"./lodash.custom\");\nvar fileUtils = {\n  /**\n   * React to file-change events that occur on \"core\" namespace only\n   * @param bs\n   * @param data\n   */\n  changedFile: function (bs, data) {\n    /**\n     * If the event property is undefined, infer that it's a 'change'\n     * event due the fact this handler is for emitter.emit(\"file:changed\")\n     */\n    if (_.isUndefined(data.event)) {\n      data.event = \"change\";\n    }\n    /**\n     * Chokidar always sends an 'event' property - which could be\n     * `add` `unlink` etc etc so we need to check for that and only\n     * respond to 'change', for now.\n     */\n    if (bs.options.get(\"watchEvents\").indexOf(data.event) > -1) {\n      if (!bs.paused && data.namespace === \"core\") {\n        bs.events.emit(\"file:reload\", fileUtils.getFileInfo(data, bs.options));\n      }\n    }\n  },\n  /**\n   * @param data\n   * @param options\n   * @returns {{assetFileName: *, fileExtension: String}}\n   */\n  getFileInfo: function (data, options) {\n    data.ext = require(\"path\").extname(data.path).slice(1);\n    data.basename = require(\"path\").basename(data.path);\n    var obj = {\n      ext: data.ext,\n      path: data.path,\n      basename: data.basename,\n      event: data.event,\n      type: \"inject\"\n    };\n    // RELOAD page\n    if (!_.includes(options.get(\"injectFileTypes\").toJS(), obj.ext)) {\n      obj.url = obj.path;\n      obj.type = \"reload\";\n    }\n    obj.path = data.path;\n    obj.log = data.log;\n    return obj;\n  }\n};\nmodule.exports = fileUtils;","map":{"version":3,"mappings":"AAAA,YAAY;;AAEZ,IAAIA,CAAC,GAAGC,OAAO,CAAC,iBAAiB,CAAC;AAElC,IAAIC,SAAS,GAAG;EACZ;;;;;EAKAC,WAAW,EAAE,UAASC,EAAE,EAAEC,IAAI;IAC1B;;;;IAIA,IAAIL,CAAC,CAACM,WAAW,CAACD,IAAI,CAACE,KAAK,CAAC,EAAE;MAC3BF,IAAI,CAACE,KAAK,GAAG,QAAQ;;IAEzB;;;;;IAKA,IAAIH,EAAE,CAACI,OAAO,CAACC,GAAG,CAAC,aAAa,CAAC,CAACC,OAAO,CAACL,IAAI,CAACE,KAAK,CAAC,GAAG,CAAC,CAAC,EAAE;MACxD,IAAI,CAACH,EAAE,CAACO,MAAM,IAAIN,IAAI,CAACO,SAAS,KAAK,MAAM,EAAE;QACzCR,EAAE,CAACS,MAAM,CAACC,IAAI,CACV,aAAa,EACbZ,SAAS,CAACa,WAAW,CAACV,IAAI,EAAED,EAAE,CAACI,OAAO,CAAC,CAC1C;;;EAGb,CAAC;EACD;;;;;EAKAO,WAAW,EAAE,UAASV,IAAI,EAAEG,OAAO;IAC/BH,IAAI,CAACW,GAAG,GAAGf,OAAO,CAAC,MAAM,CAAC,CACrBgB,OAAO,CAACZ,IAAI,CAACa,IAAI,CAAC,CAClBC,KAAK,CAAC,CAAC,CAAC;IACbd,IAAI,CAACe,QAAQ,GAAGnB,OAAO,CAAC,MAAM,CAAC,CAACmB,QAAQ,CAACf,IAAI,CAACa,IAAI,CAAC;IAEnD,IAAIG,GAAG,GAAG;MACNL,GAAG,EAAEX,IAAI,CAACW,GAAG;MACbE,IAAI,EAAEb,IAAI,CAACa,IAAI;MACfE,QAAQ,EAAEf,IAAI,CAACe,QAAQ;MACvBb,KAAK,EAAEF,IAAI,CAACE,KAAK;MACjBe,IAAI,EAAE;KACT;IAED;IACA,IAAI,CAACtB,CAAC,CAACuB,QAAQ,CAACf,OAAO,CAACC,GAAG,CAAC,iBAAiB,CAAC,CAACe,IAAI,EAAE,EAAEH,GAAG,CAACL,GAAG,CAAC,EAAE;MAC7DK,GAAG,CAACI,GAAG,GAAGJ,GAAG,CAACH,IAAI;MAClBG,GAAG,CAACC,IAAI,GAAG,QAAQ;;IAGvBD,GAAG,CAACH,IAAI,GAAGb,IAAI,CAACa,IAAI;IACpBG,GAAG,CAACK,GAAG,GAAGrB,IAAI,CAACqB,GAAG;IAElB,OAAOL,GAAG;EACd;CACH;AAEDM,MAAM,CAACC,OAAO,GAAG1B,SAAS","names":["_","require","fileUtils","changedFile","bs","data","isUndefined","event","options","get","indexOf","paused","namespace","events","emit","getFileInfo","ext","extname","path","slice","basename","obj","type","includes","toJS","url","log","module","exports"],"sources":["../lib/file-utils.js"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}