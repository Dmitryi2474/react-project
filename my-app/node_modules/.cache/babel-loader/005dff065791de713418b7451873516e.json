{"ast":null,"code":"//var compression     = require(\"./compression\");\n//var noCachePlugin   = require(\"./no-cache\");\nvar overlayPlugin = require(\"./overlay-grid/overlay-grid\");\nvar clientFiles = require(\"./client-files\");\nconst PLUGIN_NAME = \"Remote Debug\";\n\n/**\n * @type {{plugin: Function, plugin:name: string, markup: string}}\n */\nmodule.exports = {\n  /**\n   * @param ui\n   * @param bs\n   */\n  \"plugin\": function (ui, bs) {\n    ui.overlayGrid = overlayPlugin.init(ui, bs);\n\n    //ui.noCache     = noCachePlugin.init(ui, bs);\n    //ui.compression = compression.init(ui, bs);\n\n    /**\n     * Listen for file events\n     */\n    ui.listen(\"remote-debug:files\", {\n      \"enableFile\": function (file) {\n        ui.enableElement(file);\n      },\n      \"disableFile\": function (file) {\n        ui.disableElement(file);\n      }\n    });\n\n    /**\n     * Listen for overlay-grid events\n     */\n    ui.listen(\"remote-debug:overlay-grid\", ui.overlayGrid);\n  },\n  /**\n   * Hooks\n   */\n  \"hooks\": {\n    \"markup\": fileContent(\"remote-debug.html\"),\n    \"client:js\": [fileContent(\"/remote-debug.client.js\"), fileContent(\"/overlay-grid/overlay-grid.client.js\")],\n    \"templates\": [getPath(\"/overlay-grid/overlay-grid.html\")],\n    \"page\": {\n      path: \"/remote-debug\",\n      title: PLUGIN_NAME,\n      template: \"remote-debug.html\",\n      controller: PLUGIN_NAME.replace(\" \", \"\") + \"Controller\",\n      order: 4,\n      icon: \"bug\"\n    },\n    elements: clientFiles.files\n  },\n  /**\n   * Plugin name\n   */\n  \"plugin:name\": PLUGIN_NAME\n};\n\n/**\n * @param filepath\n * @returns {*}\n */\nfunction getPath(filepath) {\n  return require(\"path\").join(__dirname, filepath);\n}\n\n/**\n * @param filepath\n * @returns {*}\n */\nfunction fileContent(filepath) {\n  return require(\"fs\").readFileSync(getPath(filepath), \"utf-8\");\n}","map":{"version":3,"names":["overlayPlugin","require","clientFiles","PLUGIN_NAME","module","exports","ui","bs","overlayGrid","init","listen","file","enableElement","disableElement","fileContent","getPath","path","title","template","controller","replace","order","icon","elements","files","filepath","join","__dirname","readFileSync"],"sources":["/home/user/Рабочий стол/pizza/project/node_modules/browser-sync-ui/lib/plugins/remote-debug/remote-debug.plugin.js"],"sourcesContent":["//var compression     = require(\"./compression\");\n//var noCachePlugin   = require(\"./no-cache\");\nvar overlayPlugin  = require(\"./overlay-grid/overlay-grid\");\nvar clientFiles    = require(\"./client-files\");\n\nconst PLUGIN_NAME  = \"Remote Debug\";\n\n/**\n * @type {{plugin: Function, plugin:name: string, markup: string}}\n */\nmodule.exports = {\n    /**\n     * @param ui\n     * @param bs\n     */\n    \"plugin\": function (ui, bs) {\n\n        ui.overlayGrid = overlayPlugin.init(ui, bs);\n\n        //ui.noCache     = noCachePlugin.init(ui, bs);\n        //ui.compression = compression.init(ui, bs);\n\n        /**\n         * Listen for file events\n         */\n        ui.listen(\"remote-debug:files\", {\n            \"enableFile\": function (file) {\n                ui.enableElement(file);\n            },\n            \"disableFile\": function (file) {\n                ui.disableElement(file);\n            }\n        });\n\n        /**\n         * Listen for overlay-grid events\n         */\n        ui.listen(\"remote-debug:overlay-grid\", ui.overlayGrid);\n    },\n    /**\n     * Hooks\n     */\n    \"hooks\": {\n        \"markup\": fileContent(\"remote-debug.html\"),\n        \"client:js\": [\n            fileContent(\"/remote-debug.client.js\"),\n            fileContent(\"/overlay-grid/overlay-grid.client.js\")\n        ],\n        \"templates\": [\n            getPath(\"/overlay-grid/overlay-grid.html\")\n        ],\n        \"page\": {\n            path: \"/remote-debug\",\n            title: PLUGIN_NAME,\n            template: \"remote-debug.html\",\n            controller: PLUGIN_NAME.replace(\" \", \"\") + \"Controller\",\n            order: 4,\n            icon: \"bug\"\n        },\n        elements: clientFiles.files\n    },\n    /**\n     * Plugin name\n     */\n    \"plugin:name\": PLUGIN_NAME\n};\n\n/**\n * @param filepath\n * @returns {*}\n */\nfunction getPath (filepath) {\n    return require(\"path\").join(__dirname, filepath);\n}\n\n/**\n * @param filepath\n * @returns {*}\n */\nfunction fileContent (filepath) {\n    return require(\"fs\").readFileSync(getPath(filepath), \"utf-8\");\n}"],"mappings":"AAAA;AACA;AACA,IAAIA,aAAa,GAAIC,OAAO,CAAC,6BAA6B,CAAC;AAC3D,IAAIC,WAAW,GAAMD,OAAO,CAAC,gBAAgB,CAAC;AAE9C,MAAME,WAAW,GAAI,cAAc;;AAEnC;AACA;AACA;AACAC,MAAM,CAACC,OAAO,GAAG;EACb;AACJ;AACA;AACA;EACI,QAAQ,EAAE,UAAUC,EAAE,EAAEC,EAAE,EAAE;IAExBD,EAAE,CAACE,WAAW,GAAGR,aAAa,CAACS,IAAI,CAACH,EAAE,EAAEC,EAAE,CAAC;;IAE3C;IACA;;IAEA;AACR;AACA;IACQD,EAAE,CAACI,MAAM,CAAC,oBAAoB,EAAE;MAC5B,YAAY,EAAE,UAAUC,IAAI,EAAE;QAC1BL,EAAE,CAACM,aAAa,CAACD,IAAI,CAAC;MAC1B,CAAC;MACD,aAAa,EAAE,UAAUA,IAAI,EAAE;QAC3BL,EAAE,CAACO,cAAc,CAACF,IAAI,CAAC;MAC3B;IACJ,CAAC,CAAC;;IAEF;AACR;AACA;IACQL,EAAE,CAACI,MAAM,CAAC,2BAA2B,EAAEJ,EAAE,CAACE,WAAW,CAAC;EAC1D,CAAC;EACD;AACJ;AACA;EACI,OAAO,EAAE;IACL,QAAQ,EAAEM,WAAW,CAAC,mBAAmB,CAAC;IAC1C,WAAW,EAAE,CACTA,WAAW,CAAC,yBAAyB,CAAC,EACtCA,WAAW,CAAC,sCAAsC,CAAC,CACtD;IACD,WAAW,EAAE,CACTC,OAAO,CAAC,iCAAiC,CAAC,CAC7C;IACD,MAAM,EAAE;MACJC,IAAI,EAAE,eAAe;MACrBC,KAAK,EAAEd,WAAW;MAClBe,QAAQ,EAAE,mBAAmB;MAC7BC,UAAU,EAAEhB,WAAW,CAACiB,OAAO,CAAC,GAAG,EAAE,EAAE,CAAC,GAAG,YAAY;MACvDC,KAAK,EAAE,CAAC;MACRC,IAAI,EAAE;IACV,CAAC;IACDC,QAAQ,EAAErB,WAAW,CAACsB;EAC1B,CAAC;EACD;AACJ;AACA;EACI,aAAa,EAAErB;AACnB,CAAC;;AAED;AACA;AACA;AACA;AACA,SAASY,OAAO,CAAEU,QAAQ,EAAE;EACxB,OAAOxB,OAAO,CAAC,MAAM,CAAC,CAACyB,IAAI,CAACC,SAAS,EAAEF,QAAQ,CAAC;AACpD;;AAEA;AACA;AACA;AACA;AACA,SAASX,WAAW,CAAEW,QAAQ,EAAE;EAC5B,OAAOxB,OAAO,CAAC,IAAI,CAAC,CAAC2B,YAAY,CAACb,OAAO,CAACU,QAAQ,CAAC,EAAE,OAAO,CAAC;AACjE"},"metadata":{},"sourceType":"script"}