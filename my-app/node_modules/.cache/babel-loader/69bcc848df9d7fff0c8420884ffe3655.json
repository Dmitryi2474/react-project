{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar bin_1 = require(\"../../bin\");\nfunction handleHostOption(incoming) {\n  var host = incoming.get(\"host\");\n  var listen = incoming.get(\"listen\");\n  if (host && listen) {\n    if (host !== listen) {\n      return [incoming, [{\n        errors: [{\n          error: new Error(\"Cannot specify both `host` and `listen` options\"),\n          meta: function () {\n            return [\"\", \"Tip:           Use just the `listen` option *only* if you want to bind only to a particular host.\"];\n          }\n        }],\n        level: bin_1.BsErrorLevels.Fatal,\n        type: bin_1.BsErrorTypes.HostAndListenIncompatible\n      }]];\n    }\n    // whenever we have have both `host` + `listen` options,\n    // we remove the 'host' to prevent complication further down the line\n    return [incoming.delete('host'), []];\n  }\n  return [incoming, []];\n}\nexports.handleHostOption = handleHostOption;","map":{"version":3,"mappings":";;;;;AACA;AAEA,SAAgBA,gBAAgB,CAACC,QAAuB;EACpD,IAAMC,IAAI,GAAgBD,QAAQ,CAACE,GAAG,CAAC,MAAM,CAAC;EAC9C,IAAMC,MAAM,GAAgBH,QAAQ,CAACE,GAAG,CAAC,QAAQ,CAAC;EAElD,IAAID,IAAI,IAAIE,MAAM,EAAE;IAChB,IAAIF,IAAI,KAAKE,MAAM,EAAE;MACjB,OAAO,CAACH,QAAQ,EAAE,CAAC;QACfI,MAAM,EAAE,CACJ;UACIC,KAAK,EAAE,IAAIC,KAAK,CAAC,iDAAiD,CAAC;UACnEC,IAAI;YACA,OAAO,CACH,EAAE,EACF,mGAAmG,CACtG;UACL;SACH,CACJ;QACDC,KAAK,EAAEC,mBAAa,CAACC,KAAK;QAC1BC,IAAI,EAAEF,kBAAY,CAACG;OACtB,CAAC,CAAC;;IAGP;IACA;IACA,OAAO,CACHZ,QAAQ,CAACa,MAAM,CAAC,MAAM,CAAC,EAC3B,EAAE,CAAC;;EAGP,OAAO,CAACb,QAAQ,EAAE,EAAE,CAAC;AACzB;AA/BAc","names":["handleHostOption","incoming","host","get","listen","errors","error","Error","meta","level","bin_1","Fatal","type","HostAndListenIncompatible","delete","exports"],"sources":["../../../lib/cli/transforms/handleHostOption.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}