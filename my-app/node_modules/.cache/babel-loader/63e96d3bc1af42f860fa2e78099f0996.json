{"ast":null,"code":"var fs = require(\"fs\");\nvar path = require(\"path\");\nvar Immutable = require(\"immutable\");\n\n/**\n * Take Browsersync plugins and determine if\n * any UI is provided by looking at data in the the\n * modules package.json file\n * @param plugins\n * @returns {*}\n */\nmodule.exports = function (plugins) {\n  return require(\"immutable\").fromJS(plugins)\n  /**\n   * Exclude the UI\n   */.filter(function (plugin) {\n    return plugin.get(\"name\") !== \"UI\";\n  })\n  /**\n   * Attempt to retrieve a plugins package.json file\n   */.map(function (plugin) {\n    var moduleName = plugin.getIn([\"opts\", \"moduleName\"]);\n    var pkg = {};\n    if (!moduleName) {\n      return plugin;\n    }\n    try {\n      pkg = require(\"immutable\").fromJS(require(path.join(moduleName, \"package.json\")));\n    } catch (e) {\n      console.error(e);\n      return plugin;\n    }\n    plugin = plugin.set(\"pkg\", pkg);\n    return plugin.set(\"relpath\", path.dirname(require.resolve(moduleName)));\n  })\n  /**\n   * Try to load markup for each plugin\n   */.map(function (plugin) {\n    if (!plugin.hasIn([\"pkg\", \"browser-sync:ui\"])) {\n      return plugin;\n    }\n    var markup = plugin.getIn([\"pkg\", \"browser-sync:ui\", \"hooks\", \"markup\"]);\n    if (markup) {\n      plugin = plugin.set(\"markup\", fs.readFileSync(path.resolve(plugin.get(\"relpath\"), markup), \"utf8\"));\n    }\n    return plugin;\n  })\n  /**\n   * Load any template files for the plugin\n   */.map(function (plugin) {\n    if (!plugin.hasIn([\"pkg\", \"browser-sync:ui\"])) {\n      return plugin;\n    }\n    return resolveIfPluginHas([\"pkg\", \"browser-sync:ui\", \"hooks\", \"templates\"], \"templates\", plugin);\n  })\n  /**\n   * Try to load Client JS for each plugin\n   */.map(function (plugin) {\n    if (!plugin.hasIn([\"pkg\", \"browser-sync:ui\"])) {\n      return plugin;\n    }\n    return resolveIfPluginHas([\"pkg\", \"browser-sync:ui\", \"hooks\", \"client:js\"], \"client:js\", plugin);\n  });\n};\n\n/**\n * If a plugin contains this option path, resolve/read the files\n * @param {Array} optPath - How to access the collection\n * @param {String} propName - Key for property access\n * @param {Immutable.Map} plugin\n * @returns {*}\n */\nfunction resolveIfPluginHas(optPath, propName, plugin) {\n  var opt = plugin.getIn(optPath);\n  if (opt.size) {\n    return plugin.set(propName, resolvePluginFiles(opt, plugin.get(\"relpath\")));\n  }\n  return plugin;\n}\n\n/**\n * Read & store a file from a plugin\n * @param {Array|Immutable.List} collection\n * @param {String} relPath\n * @returns {any}\n */\nfunction resolvePluginFiles(collection, relPath) {\n  return Immutable.fromJS(collection.reduce(function (all, item) {\n    var full = path.join(relPath, item);\n    if (fs.existsSync(full)) {\n      all[full] = fs.readFileSync(full, \"utf8\");\n    }\n    return all;\n  }, {}));\n}","map":{"version":3,"names":["fs","require","path","Immutable","module","exports","plugins","fromJS","filter","plugin","get","map","moduleName","getIn","pkg","join","e","console","error","set","dirname","resolve","hasIn","markup","readFileSync","resolveIfPluginHas","optPath","propName","opt","size","resolvePluginFiles","collection","relPath","reduce","all","item","full","existsSync"],"sources":["/home/user/Рабочий стол/pizza/project/node_modules/browser-sync-ui/lib/resolve-plugins.js"],"sourcesContent":["var fs          = require(\"fs\");\nvar path        = require(\"path\");\nvar Immutable   = require(\"immutable\");\n\n/**\n * Take Browsersync plugins and determine if\n * any UI is provided by looking at data in the the\n * modules package.json file\n * @param plugins\n * @returns {*}\n */\nmodule.exports = function (plugins) {\n    return require(\"immutable\")\n        .fromJS(plugins)\n        /**\n         * Exclude the UI\n         */\n        .filter(function (plugin) {\n            return plugin.get(\"name\") !== \"UI\";\n        })\n        /**\n         * Attempt to retrieve a plugins package.json file\n         */\n        .map(function (plugin) {\n\n            var moduleName = plugin.getIn([\"opts\", \"moduleName\"]);\n            var pkg = {};\n\n            if (!moduleName) {\n                return plugin;\n            }\n\n            try {\n                pkg = require(\"immutable\").fromJS(require(path.join(moduleName, \"package.json\")));\n            } catch (e) {\n                console.error(e);\n                return plugin;\n            }\n\n            plugin = plugin.set(\"pkg\", pkg);\n\n            return plugin.set(\"relpath\", path.dirname(require.resolve(moduleName)));\n        })\n        /**\n         * Try to load markup for each plugin\n         */\n        .map(function (plugin) {\n\n            if (!plugin.hasIn([\"pkg\", \"browser-sync:ui\"])) {\n                return plugin;\n            }\n\n            var markup    = plugin.getIn([\"pkg\", \"browser-sync:ui\", \"hooks\", \"markup\"]);\n\n            if (markup) {\n                plugin = plugin.set(\"markup\", fs.readFileSync(path.resolve(plugin.get(\"relpath\"), markup), \"utf8\"));\n            }\n\n            return plugin;\n        })\n        /**\n         * Load any template files for the plugin\n         */\n        .map(function (plugin) {\n\n            if (!plugin.hasIn([\"pkg\", \"browser-sync:ui\"])) {\n                return plugin;\n            }\n\n            return resolveIfPluginHas([\"pkg\", \"browser-sync:ui\", \"hooks\", \"templates\"], \"templates\", plugin);\n        })\n        /**\n         * Try to load Client JS for each plugin\n         */\n        .map(function (plugin) {\n\n            if (!plugin.hasIn([\"pkg\", \"browser-sync:ui\"])) {\n                return plugin;\n            }\n\n            return resolveIfPluginHas([\"pkg\", \"browser-sync:ui\", \"hooks\", \"client:js\"], \"client:js\", plugin);\n        });\n};\n\n/**\n * If a plugin contains this option path, resolve/read the files\n * @param {Array} optPath - How to access the collection\n * @param {String} propName - Key for property access\n * @param {Immutable.Map} plugin\n * @returns {*}\n */\nfunction resolveIfPluginHas(optPath, propName, plugin) {\n    var opt = plugin.getIn(optPath);\n    if (opt.size) {\n        return plugin.set(\n            propName,\n            resolvePluginFiles(opt, plugin.get(\"relpath\"))\n        );\n    }\n    return plugin;\n}\n\n/**\n * Read & store a file from a plugin\n * @param {Array|Immutable.List} collection\n * @param {String} relPath\n * @returns {any}\n */\nfunction resolvePluginFiles (collection, relPath) {\n    return Immutable.fromJS(collection.reduce(function (all, item) {\n        var full = path.join(relPath, item);\n        if (fs.existsSync(full)) {\n            all[full] = fs.readFileSync(full, \"utf8\");\n        }\n        return all;\n    }, {}));\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}