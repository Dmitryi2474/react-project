{"ast":null,"code":"/*!\n * expand-range <https://github.com/jonschlinkert/expand-range>\n *\n * Copyright (c) 2014-2015, Jon Schlinkert.\n * Licensed under the MIT license.\n */\n\n'use strict';\n\nvar fill = require('fill-range');\nmodule.exports = function expandRange(str, options, fn) {\n  if (typeof str !== 'string') {\n    throw new TypeError('expand-range expects a string.');\n  }\n  if (typeof options === 'function') {\n    fn = options;\n    options = {};\n  }\n  if (typeof options === 'boolean') {\n    options = {};\n    options.makeRe = true;\n  }\n\n  // create arguments to pass to fill-range\n  var opts = options || {};\n  var args = str.split('..');\n  var len = args.length;\n  if (len > 3) {\n    return str;\n  }\n\n  // if only one argument, it can't expand so return it\n  if (len === 1) {\n    return args;\n  }\n\n  // if `true`, tell fill-range to regexify the string\n  if (typeof fn === 'boolean' && fn === true) {\n    opts.makeRe = true;\n  }\n  args.push(opts);\n  return fill.apply(null, args.concat(fn));\n};","map":{"version":3,"names":["fill","require","module","exports","expandRange","str","options","fn","TypeError","makeRe","opts","args","split","len","length","push","apply","concat"],"sources":["/home/user/Рабочий стол/pizza/project/node_modules/expand-range/index.js"],"sourcesContent":["/*!\n * expand-range <https://github.com/jonschlinkert/expand-range>\n *\n * Copyright (c) 2014-2015, Jon Schlinkert.\n * Licensed under the MIT license.\n */\n\n'use strict';\n\nvar fill = require('fill-range');\n\nmodule.exports = function expandRange(str, options, fn) {\n  if (typeof str !== 'string') {\n    throw new TypeError('expand-range expects a string.');\n  }\n\n  if (typeof options === 'function') {\n    fn = options;\n    options = {};\n  }\n\n  if (typeof options === 'boolean') {\n    options = {};\n    options.makeRe = true;\n  }\n\n  // create arguments to pass to fill-range\n  var opts = options || {};\n  var args = str.split('..');\n  var len = args.length;\n  if (len > 3) { return str; }\n\n  // if only one argument, it can't expand so return it\n  if (len === 1) { return args; }\n\n  // if `true`, tell fill-range to regexify the string\n  if (typeof fn === 'boolean' && fn === true) {\n    opts.makeRe = true;\n  }\n\n  args.push(opts);\n  return fill.apply(null, args.concat(fn));\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA,YAAY;;AAEZ,IAAIA,IAAI,GAAGC,OAAO,CAAC,YAAY,CAAC;AAEhCC,MAAM,CAACC,OAAO,GAAG,SAASC,WAAW,CAACC,GAAG,EAAEC,OAAO,EAAEC,EAAE,EAAE;EACtD,IAAI,OAAOF,GAAG,KAAK,QAAQ,EAAE;IAC3B,MAAM,IAAIG,SAAS,CAAC,gCAAgC,CAAC;EACvD;EAEA,IAAI,OAAOF,OAAO,KAAK,UAAU,EAAE;IACjCC,EAAE,GAAGD,OAAO;IACZA,OAAO,GAAG,CAAC,CAAC;EACd;EAEA,IAAI,OAAOA,OAAO,KAAK,SAAS,EAAE;IAChCA,OAAO,GAAG,CAAC,CAAC;IACZA,OAAO,CAACG,MAAM,GAAG,IAAI;EACvB;;EAEA;EACA,IAAIC,IAAI,GAAGJ,OAAO,IAAI,CAAC,CAAC;EACxB,IAAIK,IAAI,GAAGN,GAAG,CAACO,KAAK,CAAC,IAAI,CAAC;EAC1B,IAAIC,GAAG,GAAGF,IAAI,CAACG,MAAM;EACrB,IAAID,GAAG,GAAG,CAAC,EAAE;IAAE,OAAOR,GAAG;EAAE;;EAE3B;EACA,IAAIQ,GAAG,KAAK,CAAC,EAAE;IAAE,OAAOF,IAAI;EAAE;;EAE9B;EACA,IAAI,OAAOJ,EAAE,KAAK,SAAS,IAAIA,EAAE,KAAK,IAAI,EAAE;IAC1CG,IAAI,CAACD,MAAM,GAAG,IAAI;EACpB;EAEAE,IAAI,CAACI,IAAI,CAACL,IAAI,CAAC;EACf,OAAOV,IAAI,CAACgB,KAAK,CAAC,IAAI,EAAEL,IAAI,CAACM,MAAM,CAACV,EAAE,CAAC,CAAC;AAC1C,CAAC"},"metadata":{},"sourceType":"script"}