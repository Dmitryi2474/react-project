{"ast":null,"code":"// This is adapted from https://github.com/normalize/mz\n// Copyright (c) 2014-2016 Jonathan Ong me@jongleberry.com and Contributors\nconst u = require('universalify').fromCallback;\nconst fs = require('graceful-fs');\nconst api = ['access', 'appendFile', 'chmod', 'chown', 'close', 'fchmod', 'fchown', 'fdatasync', 'fstat', 'fsync', 'ftruncate', 'futimes', 'lchown', 'link', 'lstat', 'mkdir', 'open', 'read', 'readFile', 'readdir', 'readlink', 'realpath', 'rename', 'rmdir', 'stat', 'symlink', 'truncate', 'unlink', 'utimes', 'write', 'writeFile'];\n// fs.mkdtemp() was added in Node.js v5.10.0, so check if it exists\ntypeof fs.mkdtemp === 'function' && api.push('mkdtemp');\n\n// Export all keys:\nObject.keys(fs).forEach(key => {\n  exports[key] = fs[key];\n});\n\n// Universalify async methods:\napi.forEach(method => {\n  exports[method] = u(fs[method]);\n});\n\n// We differ from mz/fs in that we still ship the old, broken, fs.exists()\n// since we are a drop-in replacement for the native module\nexports.exists = function (filename, callback) {\n  if (typeof callback === 'function') {\n    return fs.exists(filename, callback);\n  }\n  return new Promise(resolve => {\n    return fs.exists(filename, resolve);\n  });\n};","map":{"version":3,"names":["u","require","fromCallback","fs","api","mkdtemp","push","Object","keys","forEach","key","exports","method","exists","filename","callback","Promise","resolve"],"sources":["/home/user/Рабочий стол/pizza/project/node_modules/fs-extra/lib/fs/index.js"],"sourcesContent":["// This is adapted from https://github.com/normalize/mz\n// Copyright (c) 2014-2016 Jonathan Ong me@jongleberry.com and Contributors\nconst u = require('universalify').fromCallback\nconst fs = require('graceful-fs')\n\nconst api = [\n  'access',\n  'appendFile',\n  'chmod',\n  'chown',\n  'close',\n  'fchmod',\n  'fchown',\n  'fdatasync',\n  'fstat',\n  'fsync',\n  'ftruncate',\n  'futimes',\n  'lchown',\n  'link',\n  'lstat',\n  'mkdir',\n  'open',\n  'read',\n  'readFile',\n  'readdir',\n  'readlink',\n  'realpath',\n  'rename',\n  'rmdir',\n  'stat',\n  'symlink',\n  'truncate',\n  'unlink',\n  'utimes',\n  'write',\n  'writeFile'\n]\n// fs.mkdtemp() was added in Node.js v5.10.0, so check if it exists\ntypeof fs.mkdtemp === 'function' && api.push('mkdtemp')\n\n// Export all keys:\nObject.keys(fs).forEach(key => {\n  exports[key] = fs[key]\n})\n\n// Universalify async methods:\napi.forEach(method => {\n  exports[method] = u(fs[method])\n})\n\n// We differ from mz/fs in that we still ship the old, broken, fs.exists()\n// since we are a drop-in replacement for the native module\nexports.exists = function (filename, callback) {\n  if (typeof callback === 'function') {\n    return fs.exists(filename, callback)\n  }\n  return new Promise(resolve => {\n    return fs.exists(filename, resolve)\n  })\n}\n"],"mappings":"AAAA;AACA;AACA,MAAMA,CAAC,GAAGC,OAAO,CAAC,cAAc,CAAC,CAACC,YAAY;AAC9C,MAAMC,EAAE,GAAGF,OAAO,CAAC,aAAa,CAAC;AAEjC,MAAMG,GAAG,GAAG,CACV,QAAQ,EACR,YAAY,EACZ,OAAO,EACP,OAAO,EACP,OAAO,EACP,QAAQ,EACR,QAAQ,EACR,WAAW,EACX,OAAO,EACP,OAAO,EACP,WAAW,EACX,SAAS,EACT,QAAQ,EACR,MAAM,EACN,OAAO,EACP,OAAO,EACP,MAAM,EACN,MAAM,EACN,UAAU,EACV,SAAS,EACT,UAAU,EACV,UAAU,EACV,QAAQ,EACR,OAAO,EACP,MAAM,EACN,SAAS,EACT,UAAU,EACV,QAAQ,EACR,QAAQ,EACR,OAAO,EACP,WAAW,CACZ;AACD;AACA,OAAOD,EAAE,CAACE,OAAO,KAAK,UAAU,IAAID,GAAG,CAACE,IAAI,CAAC,SAAS,CAAC;;AAEvD;AACAC,MAAM,CAACC,IAAI,CAACL,EAAE,CAAC,CAACM,OAAO,CAACC,GAAG,IAAI;EAC7BC,OAAO,CAACD,GAAG,CAAC,GAAGP,EAAE,CAACO,GAAG,CAAC;AACxB,CAAC,CAAC;;AAEF;AACAN,GAAG,CAACK,OAAO,CAACG,MAAM,IAAI;EACpBD,OAAO,CAACC,MAAM,CAAC,GAAGZ,CAAC,CAACG,EAAE,CAACS,MAAM,CAAC,CAAC;AACjC,CAAC,CAAC;;AAEF;AACA;AACAD,OAAO,CAACE,MAAM,GAAG,UAAUC,QAAQ,EAAEC,QAAQ,EAAE;EAC7C,IAAI,OAAOA,QAAQ,KAAK,UAAU,EAAE;IAClC,OAAOZ,EAAE,CAACU,MAAM,CAACC,QAAQ,EAAEC,QAAQ,CAAC;EACtC;EACA,OAAO,IAAIC,OAAO,CAACC,OAAO,IAAI;IAC5B,OAAOd,EAAE,CAACU,MAAM,CAACC,QAAQ,EAAEG,OAAO,CAAC;EACrC,CAAC,CAAC;AACJ,CAAC"},"metadata":{},"sourceType":"script"}