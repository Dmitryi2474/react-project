{"ast":null,"code":"\"use strict\";\n\nvar _ = require(\"./lodash.custom\");\nvar utils = require(\"./utils\");\nvar Rx = require(\"rx\");\n/**\n * Plugin interface\n * @returns {*|function(this:exports)}\n */\nmodule.exports.plugin = function (bs) {\n  var options = bs.options;\n  var emitter = bs.emitter;\n  var defaultWatchOptions = options.get(\"watchOptions\").toJS();\n  return options.get(\"files\").reduce(function (map, glob, namespace) {\n    /**\n     * Default CB when not given\n     * @param event\n     * @param path\n     */\n    var fn = function (event, path) {\n      emitter.emit(\"file:changed\", {\n        event: event,\n        path: path,\n        namespace: namespace\n      });\n    };\n    var jsItem = glob.toJS();\n    if (jsItem.globs.length) {\n      var watcher = watch(jsItem.globs, defaultWatchOptions, fn);\n      map[namespace] = {\n        watchers: [watcher]\n      };\n    }\n    if (jsItem.objs.length) {\n      jsItem.objs.forEach(function (item) {\n        if (!_.isFunction(item.fn)) {\n          item.fn = fn;\n        }\n        var watcher = watch(item.match, item.options || defaultWatchOptions, item.fn.bind(bs.publicInstance));\n        if (!map[namespace]) {\n          map[namespace] = {\n            watchers: [watcher]\n          };\n        } else {\n          map[namespace].watchers.push(watcher);\n        }\n      });\n    }\n    return map;\n  }, {});\n};\n/**\n * @param patterns\n * @param opts\n * @param cb\n * @returns {*}\n */\nfunction watch(patterns, opts, cb) {\n  if (typeof opts === \"function\") {\n    cb = opts;\n    opts = {};\n  }\n  var watcher = require(\"chokidar\").watch(patterns, opts);\n  if (_.isFunction(cb)) {\n    watcher.on(\"all\", cb);\n  }\n  // watcher.on('ready', () => {\n  //     console.log(watcher.getWatched());\n  // });\n  return watcher;\n}\nmodule.exports.watch = watch;","map":{"version":3,"mappings":"AAAA,YAAY;;AAEZ,IAAIA,CAAC,GAAGC,OAAO,CAAC,iBAAiB,CAAC;AAClC,IAAIC,KAAK,GAAGD,OAAO,CAAC,SAAS,CAAC;AAC9B,IAAIE,EAAE,GAAGF,OAAO,CAAC,IAAI,CAAC;AAEtB;;;;AAIAG,MAAM,CAACC,OAAO,CAACC,MAAM,GAAG,UAASC,EAAE;EAC/B,IAAIC,OAAO,GAAGD,EAAE,CAACC,OAAO;EACxB,IAAIC,OAAO,GAAGF,EAAE,CAACE,OAAO;EAExB,IAAIC,mBAAmB,GAAGF,OAAO,CAACG,GAAG,CAAC,cAAc,CAAC,CAACC,IAAI,EAAE;EAE5D,OAAOJ,OAAO,CAACG,GAAG,CAAC,OAAO,CAAC,CAACE,MAAM,CAAC,UAASC,GAAG,EAAEC,IAAI,EAAEC,SAAS;IAC5D;;;;;IAKA,IAAIC,EAAE,GAAG,UAASC,KAAK,EAAEC,IAAI;MACzBV,OAAO,CAACW,IAAI,CAAC,cAAc,EAAE;QACzBF,KAAK,EAAEA,KAAK;QACZC,IAAI,EAAEA,IAAI;QACVH,SAAS,EAAEA;OACd,CAAC;IACN,CAAC;IAED,IAAIK,MAAM,GAAGN,IAAI,CAACH,IAAI,EAAE;IAExB,IAAIS,MAAM,CAACC,KAAK,CAACC,MAAM,EAAE;MACrB,IAAIC,OAAO,GAAGC,KAAK,CAACJ,MAAM,CAACC,KAAK,EAAEZ,mBAAmB,EAAEO,EAAE,CAAC;MAC1DH,GAAG,CAACE,SAAS,CAAC,GAAG;QACbU,QAAQ,EAAE,CAACF,OAAO;OACrB;;IAGL,IAAIH,MAAM,CAACM,IAAI,CAACJ,MAAM,EAAE;MACpBF,MAAM,CAACM,IAAI,CAACC,OAAO,CAAC,UAASC,IAAI;QAC7B,IAAI,CAAC7B,CAAC,CAAC8B,UAAU,CAACD,IAAI,CAACZ,EAAE,CAAC,EAAE;UACxBY,IAAI,CAACZ,EAAE,GAAGA,EAAE;;QAEhB,IAAIO,OAAO,GAAGC,KAAK,CACfI,IAAI,CAACE,KAAK,EACVF,IAAI,CAACrB,OAAO,IAAIE,mBAAmB,EACnCmB,IAAI,CAACZ,EAAE,CAACe,IAAI,CAACzB,EAAE,CAAC0B,cAAc,CAAC,CAClC;QACD,IAAI,CAACnB,GAAG,CAACE,SAAS,CAAC,EAAE;UACjBF,GAAG,CAACE,SAAS,CAAC,GAAG;YACbU,QAAQ,EAAE,CAACF,OAAO;WACrB;SACJ,MAAM;UACHV,GAAG,CAACE,SAAS,CAAC,CAACU,QAAQ,CAACQ,IAAI,CAACV,OAAO,CAAC;;MAE7C,CAAC,CAAC;;IAGN,OAAOV,GAAG;EACd,CAAC,EAAE,EAAE,CAAC;AACV,CAAC;AAED;;;;;;AAMA,SAASW,KAAK,CAACU,QAAQ,EAAEC,IAAI,EAAEC,EAAE;EAC7B,IAAI,OAAOD,IAAI,KAAK,UAAU,EAAE;IAC5BC,EAAE,GAAGD,IAAI;IACTA,IAAI,GAAG,EAAE;;EAGb,IAAIZ,OAAO,GAAGvB,OAAO,CAAC,UAAU,CAAC,CAACwB,KAAK,CAACU,QAAQ,EAAEC,IAAI,CAAC;EAEvD,IAAIpC,CAAC,CAAC8B,UAAU,CAACO,EAAE,CAAC,EAAE;IAClBb,OAAO,CAACc,EAAE,CAAC,KAAK,EAAED,EAAE,CAAC;;EAGzB;EACA;EACA;EAEA,OAAOb,OAAO;AAClB;AAEApB,MAAM,CAACC,OAAO,CAACoB,KAAK,GAAGA,KAAK","names":["_","require","utils","Rx","module","exports","plugin","bs","options","emitter","defaultWatchOptions","get","toJS","reduce","map","glob","namespace","fn","event","path","emit","jsItem","globs","length","watcher","watch","watchers","objs","forEach","item","isFunction","match","bind","publicInstance","push","patterns","opts","cb","on"],"sources":["../lib/file-watcher.js"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}