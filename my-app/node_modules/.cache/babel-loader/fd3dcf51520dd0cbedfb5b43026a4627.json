{"ast":null,"code":"var stream = require('stream');\nvar util = require('util');\nvar Transform = stream.Transform;\nvar HeaderHostTransformer = function (opts) {\n  if (!(this instanceof HeaderHostTransformer)) {\n    return new HeaderHostTransformer(opts);\n  }\n  opts = opts || {};\n  Transform.call(this, opts);\n  var self = this;\n  self.host = opts.host || 'localhost';\n  self.replaced = false;\n};\nutil.inherits(HeaderHostTransformer, Transform);\nHeaderHostTransformer.prototype._transform = function (chunk, enc, cb) {\n  var self = this;\n\n  // after replacing the first instance of the Host header\n  // we just become a regular passthrough\n  if (!self.replaced) {\n    chunk = chunk.toString();\n    self.push(chunk.replace(/(\\r\\n[Hh]ost: )\\S+/, function (match, $1) {\n      self.replaced = true;\n      return $1 + self.host;\n    }));\n  } else {\n    self.push(chunk);\n  }\n  cb();\n};\nmodule.exports = HeaderHostTransformer;","map":{"version":3,"names":["stream","require","util","Transform","HeaderHostTransformer","opts","call","self","host","replaced","inherits","prototype","_transform","chunk","enc","cb","toString","push","replace","match","$1","module","exports"],"sources":["/home/user/Рабочий стол/pizza/project/node_modules/localtunnel/lib/HeaderHostTransformer.js"],"sourcesContent":["var stream = require('stream');\nvar util = require('util');\n\nvar Transform = stream.Transform;\n\nvar HeaderHostTransformer = function(opts) {\n    if (!(this instanceof HeaderHostTransformer)) {\n        return new HeaderHostTransformer(opts);\n    }\n\n    opts = opts || {}\n    Transform.call(this, opts);\n\n    var self = this;\n    self.host = opts.host || 'localhost';\n    self.replaced = false;\n}\nutil.inherits(HeaderHostTransformer, Transform);\n\nHeaderHostTransformer.prototype._transform = function (chunk, enc, cb) {\n    var self = this;\n\n    // after replacing the first instance of the Host header\n    // we just become a regular passthrough\n    if (!self.replaced) {\n        chunk = chunk.toString();\n        self.push(chunk.replace(/(\\r\\n[Hh]ost: )\\S+/, function(match, $1) {\n            self.replaced = true;\n            return $1 + self.host;\n        }));\n    }\n    else {\n        self.push(chunk);\n    }\n\n    cb();\n};\n\nmodule.exports = HeaderHostTransformer;\n"],"mappings":"AAAA,IAAIA,MAAM,GAAGC,OAAO,CAAC,QAAQ,CAAC;AAC9B,IAAIC,IAAI,GAAGD,OAAO,CAAC,MAAM,CAAC;AAE1B,IAAIE,SAAS,GAAGH,MAAM,CAACG,SAAS;AAEhC,IAAIC,qBAAqB,GAAG,UAASC,IAAI,EAAE;EACvC,IAAI,EAAE,IAAI,YAAYD,qBAAqB,CAAC,EAAE;IAC1C,OAAO,IAAIA,qBAAqB,CAACC,IAAI,CAAC;EAC1C;EAEAA,IAAI,GAAGA,IAAI,IAAI,CAAC,CAAC;EACjBF,SAAS,CAACG,IAAI,CAAC,IAAI,EAAED,IAAI,CAAC;EAE1B,IAAIE,IAAI,GAAG,IAAI;EACfA,IAAI,CAACC,IAAI,GAAGH,IAAI,CAACG,IAAI,IAAI,WAAW;EACpCD,IAAI,CAACE,QAAQ,GAAG,KAAK;AACzB,CAAC;AACDP,IAAI,CAACQ,QAAQ,CAACN,qBAAqB,EAAED,SAAS,CAAC;AAE/CC,qBAAqB,CAACO,SAAS,CAACC,UAAU,GAAG,UAAUC,KAAK,EAAEC,GAAG,EAAEC,EAAE,EAAE;EACnE,IAAIR,IAAI,GAAG,IAAI;;EAEf;EACA;EACA,IAAI,CAACA,IAAI,CAACE,QAAQ,EAAE;IAChBI,KAAK,GAAGA,KAAK,CAACG,QAAQ,EAAE;IACxBT,IAAI,CAACU,IAAI,CAACJ,KAAK,CAACK,OAAO,CAAC,oBAAoB,EAAE,UAASC,KAAK,EAAEC,EAAE,EAAE;MAC9Db,IAAI,CAACE,QAAQ,GAAG,IAAI;MACpB,OAAOW,EAAE,GAAGb,IAAI,CAACC,IAAI;IACzB,CAAC,CAAC,CAAC;EACP,CAAC,MACI;IACDD,IAAI,CAACU,IAAI,CAACJ,KAAK,CAAC;EACpB;EAEAE,EAAE,EAAE;AACR,CAAC;AAEDM,MAAM,CAACC,OAAO,GAAGlB,qBAAqB"},"metadata":{},"sourceType":"script"}