{"ast":null,"code":"const PLUGIN_NAME = \"Sync Options\";\n\n/**\n * @type {{plugin: Function, plugin:name: string, hooks: object}}\n */\nmodule.exports = {\n  \"plugin\": function (ui, bs) {\n    ui.listen(\"sync-options\", {\n      \"set\": function (data) {\n        ui.logger.debug(\"Setting option: {magenta:%s}:{cyan:%s}\", data.path.join(\".\"), data.value);\n        bs.setOptionIn(data.path, data.value);\n      },\n      \"setMany\": function (data) {\n        ui.logger.debug(\"Setting Many options...\");\n        if (data.value !== true) {\n          data.value = false;\n        }\n        bs.setMany(function (item) {\n          [[\"codeSync\"], [\"ghostMode\", \"clicks\"], [\"ghostMode\", \"scroll\"], [\"ghostMode\", \"forms\", \"inputs\"], [\"ghostMode\", \"forms\", \"toggles\"], [\"ghostMode\", \"forms\", \"submit\"]].forEach(function (option) {\n            item.setIn(option, data.value);\n          });\n        });\n        return bs;\n      }\n    });\n  },\n  \"hooks\": {\n    \"markup\": fileContent(\"sync-options.html\"),\n    \"client:js\": fileContent(\"sync-options.client.js\"),\n    \"templates\": [],\n    \"page\": {\n      path: \"/sync-options\",\n      title: PLUGIN_NAME,\n      template: \"sync-options.html\",\n      controller: PLUGIN_NAME.replace(\" \", \"\") + \"Controller\",\n      order: 2,\n      icon: \"sync\"\n    }\n  },\n  \"plugin:name\": PLUGIN_NAME\n};\nfunction getPath(filepath) {\n  return require(\"path\").join(__dirname, filepath);\n}\nfunction fileContent(filepath) {\n  return require(\"fs\").readFileSync(getPath(filepath), \"utf-8\");\n}","map":{"version":3,"names":["PLUGIN_NAME","module","exports","ui","bs","listen","data","logger","debug","path","join","value","setOptionIn","setMany","item","forEach","option","setIn","fileContent","title","template","controller","replace","order","icon","getPath","filepath","require","__dirname","readFileSync"],"sources":["/home/user/Рабочий стол/pizza/project/node_modules/browser-sync-ui/lib/plugins/sync-options/sync-options.plugin.js"],"sourcesContent":["const PLUGIN_NAME = \"Sync Options\";\n\n/**\n * @type {{plugin: Function, plugin:name: string, hooks: object}}\n */\nmodule.exports = {\n\n    \"plugin\": function (ui, bs) {\n\n        ui.listen(\"sync-options\", {\n\n            \"set\": function (data) {\n\n                ui.logger.debug(\"Setting option: {magenta:%s}:{cyan:%s}\", data.path.join(\".\"), data.value);\n                bs.setOptionIn(data.path, data.value);\n\n            },\n\n            \"setMany\": function (data) {\n\n                ui.logger.debug(\"Setting Many options...\");\n\n                if (data.value !== true) {\n                    data.value = false;\n                }\n\n                bs.setMany(function (item) {\n                    [\n                        [\"codeSync\"],\n                        [\"ghostMode\", \"clicks\"],\n                        [\"ghostMode\", \"scroll\"],\n                        [\"ghostMode\", \"forms\", \"inputs\"],\n                        [\"ghostMode\", \"forms\", \"toggles\"],\n                        [\"ghostMode\", \"forms\", \"submit\"]\n                    ].forEach(function (option) {\n                            item.setIn(option, data.value);\n                        });\n                });\n\n                return bs;\n            }\n        });\n    },\n    \"hooks\": {\n        \"markup\": fileContent(\"sync-options.html\"),\n        \"client:js\": fileContent(\"sync-options.client.js\"),\n        \"templates\": [],\n        \"page\": {\n            path: \"/sync-options\",\n            title: PLUGIN_NAME,\n            template: \"sync-options.html\",\n            controller: PLUGIN_NAME.replace(\" \", \"\") + \"Controller\",\n            order: 2,\n            icon: \"sync\"\n        }\n    },\n    \"plugin:name\": PLUGIN_NAME\n};\n\nfunction getPath (filepath) {\n    return require(\"path\").join(__dirname, filepath);\n}\n\nfunction fileContent (filepath) {\n    return require(\"fs\").readFileSync(getPath(filepath), \"utf-8\");\n}\n"],"mappings":"AAAA,MAAMA,WAAW,GAAG,cAAc;;AAElC;AACA;AACA;AACAC,MAAM,CAACC,OAAO,GAAG;EAEb,QAAQ,EAAE,UAAUC,EAAE,EAAEC,EAAE,EAAE;IAExBD,EAAE,CAACE,MAAM,CAAC,cAAc,EAAE;MAEtB,KAAK,EAAE,UAAUC,IAAI,EAAE;QAEnBH,EAAE,CAACI,MAAM,CAACC,KAAK,CAAC,wCAAwC,EAAEF,IAAI,CAACG,IAAI,CAACC,IAAI,CAAC,GAAG,CAAC,EAAEJ,IAAI,CAACK,KAAK,CAAC;QAC1FP,EAAE,CAACQ,WAAW,CAACN,IAAI,CAACG,IAAI,EAAEH,IAAI,CAACK,KAAK,CAAC;MAEzC,CAAC;MAED,SAAS,EAAE,UAAUL,IAAI,EAAE;QAEvBH,EAAE,CAACI,MAAM,CAACC,KAAK,CAAC,yBAAyB,CAAC;QAE1C,IAAIF,IAAI,CAACK,KAAK,KAAK,IAAI,EAAE;UACrBL,IAAI,CAACK,KAAK,GAAG,KAAK;QACtB;QAEAP,EAAE,CAACS,OAAO,CAAC,UAAUC,IAAI,EAAE;UACvB,CACI,CAAC,UAAU,CAAC,EACZ,CAAC,WAAW,EAAE,QAAQ,CAAC,EACvB,CAAC,WAAW,EAAE,QAAQ,CAAC,EACvB,CAAC,WAAW,EAAE,OAAO,EAAE,QAAQ,CAAC,EAChC,CAAC,WAAW,EAAE,OAAO,EAAE,SAAS,CAAC,EACjC,CAAC,WAAW,EAAE,OAAO,EAAE,QAAQ,CAAC,CACnC,CAACC,OAAO,CAAC,UAAUC,MAAM,EAAE;YACpBF,IAAI,CAACG,KAAK,CAACD,MAAM,EAAEV,IAAI,CAACK,KAAK,CAAC;UAClC,CAAC,CAAC;QACV,CAAC,CAAC;QAEF,OAAOP,EAAE;MACb;IACJ,CAAC,CAAC;EACN,CAAC;EACD,OAAO,EAAE;IACL,QAAQ,EAAEc,WAAW,CAAC,mBAAmB,CAAC;IAC1C,WAAW,EAAEA,WAAW,CAAC,wBAAwB,CAAC;IAClD,WAAW,EAAE,EAAE;IACf,MAAM,EAAE;MACJT,IAAI,EAAE,eAAe;MACrBU,KAAK,EAAEnB,WAAW;MAClBoB,QAAQ,EAAE,mBAAmB;MAC7BC,UAAU,EAAErB,WAAW,CAACsB,OAAO,CAAC,GAAG,EAAE,EAAE,CAAC,GAAG,YAAY;MACvDC,KAAK,EAAE,CAAC;MACRC,IAAI,EAAE;IACV;EACJ,CAAC;EACD,aAAa,EAAExB;AACnB,CAAC;AAED,SAASyB,OAAO,CAAEC,QAAQ,EAAE;EACxB,OAAOC,OAAO,CAAC,MAAM,CAAC,CAACjB,IAAI,CAACkB,SAAS,EAAEF,QAAQ,CAAC;AACpD;AAEA,SAASR,WAAW,CAAEQ,QAAQ,EAAE;EAC5B,OAAOC,OAAO,CAAC,IAAI,CAAC,CAACE,YAAY,CAACJ,OAAO,CAACC,QAAQ,CAAC,EAAE,OAAO,CAAC;AACjE"},"metadata":{},"sourceType":"script"}