{"ast":null,"code":"'use strict';\n\nconst safeBuffer = require('safe-buffer');\nconst Limiter = require('async-limiter');\nconst zlib = require('zlib');\nconst bufferUtil = require('./BufferUtil');\nconst Buffer = safeBuffer.Buffer;\nconst TRAILER = Buffer.from([0x00, 0x00, 0xff, 0xff]);\nconst EMPTY_BLOCK = Buffer.from([0x00]);\nconst kWriteInProgress = Symbol('write-in-progress');\nconst kPendingClose = Symbol('pending-close');\nconst kTotalLength = Symbol('total-length');\nconst kCallback = Symbol('callback');\nconst kBuffers = Symbol('buffers');\nconst kError = Symbol('error');\nconst kOwner = Symbol('owner');\n\n//\n// We limit zlib concurrency, which prevents severe memory fragmentation\n// as documented in https://github.com/nodejs/node/issues/8871#issuecomment-250915913\n// and https://github.com/websockets/ws/issues/1202\n//\n// Intentionally global; it's the global thread pool that's an issue.\n//\nlet zlibLimiter;\n\n/**\n * permessage-deflate implementation.\n */\nclass PerMessageDeflate {\n  /**\n   * Creates a PerMessageDeflate instance.\n   *\n   * @param {Object} options Configuration options\n   * @param {Boolean} options.serverNoContextTakeover Request/accept disabling\n   *     of server context takeover\n   * @param {Boolean} options.clientNoContextTakeover Advertise/acknowledge\n   *     disabling of client context takeover\n   * @param {(Boolean|Number)} options.serverMaxWindowBits Request/confirm the\n   *     use of a custom server window size\n   * @param {(Boolean|Number)} options.clientMaxWindowBits Advertise support\n   *     for, or request, a custom client window size\n   * @param {Number} options.level The value of zlib's `level` param\n   * @param {Number} options.memLevel The value of zlib's `memLevel` param\n   * @param {Number} options.threshold Size (in bytes) below which messages\n   *     should not be compressed\n   * @param {Number} options.concurrencyLimit The number of concurrent calls to\n   *     zlib\n   * @param {Boolean} isServer Create the instance in either server or client\n   *     mode\n   * @param {Number} maxPayload The maximum allowed message length\n   */\n  constructor(options, isServer, maxPayload) {\n    this._maxPayload = maxPayload | 0;\n    this._options = options || {};\n    this._threshold = this._options.threshold !== undefined ? this._options.threshold : 1024;\n    this._isServer = !!isServer;\n    this._deflate = null;\n    this._inflate = null;\n    this.params = null;\n    if (!zlibLimiter) {\n      const concurrency = this._options.concurrencyLimit !== undefined ? this._options.concurrencyLimit : 10;\n      zlibLimiter = new Limiter({\n        concurrency\n      });\n    }\n  }\n\n  /**\n   * @type {String}\n   */\n  static get extensionName() {\n    return 'permessage-deflate';\n  }\n\n  /**\n   * Create extension parameters offer.\n   *\n   * @return {Object} Extension parameters\n   * @public\n   */\n  offer() {\n    const params = {};\n    if (this._options.serverNoContextTakeover) {\n      params.server_no_context_takeover = true;\n    }\n    if (this._options.clientNoContextTakeover) {\n      params.client_no_context_takeover = true;\n    }\n    if (this._options.serverMaxWindowBits) {\n      params.server_max_window_bits = this._options.serverMaxWindowBits;\n    }\n    if (this._options.clientMaxWindowBits) {\n      params.client_max_window_bits = this._options.clientMaxWindowBits;\n    } else if (this._options.clientMaxWindowBits == null) {\n      params.client_max_window_bits = true;\n    }\n    return params;\n  }\n\n  /**\n   * Accept extension offer.\n   *\n   * @param {Array} paramsList Extension parameters\n   * @return {Object} Accepted configuration\n   * @public\n   */\n  accept(paramsList) {\n    paramsList = this.normalizeParams(paramsList);\n    var params;\n    if (this._isServer) {\n      params = this.acceptAsServer(paramsList);\n    } else {\n      params = this.acceptAsClient(paramsList);\n    }\n    this.params = params;\n    return params;\n  }\n\n  /**\n   * Releases all resources used by the extension.\n   *\n   * @public\n   */\n  cleanup() {\n    if (this._inflate) {\n      if (this._inflate[kWriteInProgress]) {\n        this._inflate[kPendingClose] = true;\n      } else {\n        this._inflate.close();\n        this._inflate = null;\n      }\n    }\n    if (this._deflate) {\n      if (this._deflate[kWriteInProgress]) {\n        this._deflate[kPendingClose] = true;\n      } else {\n        this._deflate.close();\n        this._deflate = null;\n      }\n    }\n  }\n\n  /**\n   * Accept extension offer from client.\n   *\n   * @param {Array} paramsList Extension parameters\n   * @return {Object} Accepted configuration\n   * @private\n   */\n  acceptAsServer(paramsList) {\n    const accepted = {};\n    const result = paramsList.some(params => {\n      if (this._options.serverNoContextTakeover === false && params.server_no_context_takeover || this._options.serverMaxWindowBits === false && params.server_max_window_bits || typeof this._options.serverMaxWindowBits === 'number' && typeof params.server_max_window_bits === 'number' && this._options.serverMaxWindowBits > params.server_max_window_bits || typeof this._options.clientMaxWindowBits === 'number' && !params.client_max_window_bits) {\n        return;\n      }\n      if (this._options.serverNoContextTakeover || params.server_no_context_takeover) {\n        accepted.server_no_context_takeover = true;\n      }\n      if (this._options.clientNoContextTakeover || this._options.clientNoContextTakeover !== false && params.client_no_context_takeover) {\n        accepted.client_no_context_takeover = true;\n      }\n      if (typeof this._options.serverMaxWindowBits === 'number') {\n        accepted.server_max_window_bits = this._options.serverMaxWindowBits;\n      } else if (typeof params.server_max_window_bits === 'number') {\n        accepted.server_max_window_bits = params.server_max_window_bits;\n      }\n      if (typeof this._options.clientMaxWindowBits === 'number') {\n        accepted.client_max_window_bits = this._options.clientMaxWindowBits;\n      } else if (this._options.clientMaxWindowBits !== false && typeof params.client_max_window_bits === 'number') {\n        accepted.client_max_window_bits = params.client_max_window_bits;\n      }\n      return true;\n    });\n    if (!result) throw new Error(\"Doesn't support the offered configuration\");\n    return accepted;\n  }\n\n  /**\n   * Accept extension response from server.\n   *\n   * @param {Array} paramsList Extension parameters\n   * @return {Object} Accepted configuration\n   * @private\n   */\n  acceptAsClient(paramsList) {\n    const params = paramsList[0];\n    if (this._options.clientNoContextTakeover === false && params.client_no_context_takeover) {\n      throw new Error('Invalid value for \"client_no_context_takeover\"');\n    }\n    if (typeof this._options.clientMaxWindowBits === 'number' && (!params.client_max_window_bits || params.client_max_window_bits > this._options.clientMaxWindowBits) || this._options.clientMaxWindowBits === false && params.client_max_window_bits) {\n      throw new Error('Invalid value for \"client_max_window_bits\"');\n    }\n    return params;\n  }\n\n  /**\n   * Normalize extensions parameters.\n   *\n   * @param {Array} paramsList Extension parameters\n   * @return {Array} Normalized extensions parameters\n   * @private\n   */\n  normalizeParams(paramsList) {\n    return paramsList.map(params => {\n      Object.keys(params).forEach(key => {\n        var value = params[key];\n        if (value.length > 1) {\n          throw new Error(`Multiple extension parameters for ${key}`);\n        }\n        value = value[0];\n        switch (key) {\n          case 'server_no_context_takeover':\n          case 'client_no_context_takeover':\n            if (value !== true) {\n              throw new Error(`invalid extension parameter value for ${key} (${value})`);\n            }\n            params[key] = true;\n            break;\n          case 'server_max_window_bits':\n          case 'client_max_window_bits':\n            if (typeof value === 'string') {\n              value = parseInt(value, 10);\n              if (Number.isNaN(value) || value < zlib.Z_MIN_WINDOWBITS || value > zlib.Z_MAX_WINDOWBITS) {\n                throw new Error(`invalid extension parameter value for ${key} (${value})`);\n              }\n            }\n            if (!this._isServer && value === true) {\n              throw new Error(`Missing extension parameter value for ${key}`);\n            }\n            params[key] = value;\n            break;\n          default:\n            throw new Error(`Not defined extension parameter (${key})`);\n        }\n      });\n      return params;\n    });\n  }\n\n  /**\n   * Decompress data. Concurrency limited by async-limiter.\n   *\n   * @param {Buffer} data Compressed data\n   * @param {Boolean} fin Specifies whether or not this is the last fragment\n   * @param {Function} callback Callback\n   * @public\n   */\n  decompress(data, fin, callback) {\n    zlibLimiter.push(done => {\n      this._decompress(data, fin, (err, result) => {\n        done();\n        callback(err, result);\n      });\n    });\n  }\n\n  /**\n   * Compress data. Concurrency limited by async-limiter.\n   *\n   * @param {Buffer} data Data to compress\n   * @param {Boolean} fin Specifies whether or not this is the last fragment\n   * @param {Function} callback Callback\n   * @public\n   */\n  compress(data, fin, callback) {\n    zlibLimiter.push(done => {\n      this._compress(data, fin, (err, result) => {\n        done();\n        callback(err, result);\n      });\n    });\n  }\n\n  /**\n   * Decompress data.\n   *\n   * @param {Buffer} data Compressed data\n   * @param {Boolean} fin Specifies whether or not this is the last fragment\n   * @param {Function} callback Callback\n   * @private\n   */\n  _decompress(data, fin, callback) {\n    const endpoint = this._isServer ? 'client' : 'server';\n    if (!this._inflate) {\n      const key = `${endpoint}_max_window_bits`;\n      const windowBits = typeof this.params[key] !== 'number' ? zlib.Z_DEFAULT_WINDOWBITS : this.params[key];\n      this._inflate = zlib.createInflateRaw({\n        windowBits\n      });\n      this._inflate[kTotalLength] = 0;\n      this._inflate[kBuffers] = [];\n      this._inflate[kOwner] = this;\n      this._inflate.on('error', inflateOnError);\n      this._inflate.on('data', inflateOnData);\n    }\n    this._inflate[kCallback] = callback;\n    this._inflate[kWriteInProgress] = true;\n    this._inflate.write(data);\n    if (fin) this._inflate.write(TRAILER);\n    this._inflate.flush(() => {\n      const err = this._inflate[kError];\n      if (err) {\n        this._inflate.close();\n        this._inflate = null;\n        callback(err);\n        return;\n      }\n      const data = bufferUtil.concat(this._inflate[kBuffers], this._inflate[kTotalLength]);\n      if (fin && this.params[`${endpoint}_no_context_takeover`] || this._inflate[kPendingClose]) {\n        this._inflate.close();\n        this._inflate = null;\n      } else {\n        this._inflate[kWriteInProgress] = false;\n        this._inflate[kTotalLength] = 0;\n        this._inflate[kBuffers] = [];\n      }\n      callback(null, data);\n    });\n  }\n\n  /**\n   * Compress data.\n   *\n   * @param {Buffer} data Data to compress\n   * @param {Boolean} fin Specifies whether or not this is the last fragment\n   * @param {Function} callback Callback\n   * @private\n   */\n  _compress(data, fin, callback) {\n    if (!data || data.length === 0) {\n      process.nextTick(callback, null, EMPTY_BLOCK);\n      return;\n    }\n    const endpoint = this._isServer ? 'server' : 'client';\n    if (!this._deflate) {\n      const key = `${endpoint}_max_window_bits`;\n      const windowBits = typeof this.params[key] !== 'number' ? zlib.Z_DEFAULT_WINDOWBITS : this.params[key];\n      this._deflate = zlib.createDeflateRaw({\n        memLevel: this._options.memLevel,\n        level: this._options.level,\n        flush: zlib.Z_SYNC_FLUSH,\n        windowBits\n      });\n      this._deflate[kTotalLength] = 0;\n      this._deflate[kBuffers] = [];\n\n      //\n      // `zlib.DeflateRaw` emits an `'error'` event only when an attempt to use\n      // it is made after it has already been closed. This cannot happen here,\n      // so we only add a listener for the `'data'` event.\n      //\n      this._deflate.on('data', deflateOnData);\n    }\n    this._deflate[kWriteInProgress] = true;\n    this._deflate.write(data);\n    this._deflate.flush(zlib.Z_SYNC_FLUSH, () => {\n      var data = bufferUtil.concat(this._deflate[kBuffers], this._deflate[kTotalLength]);\n      if (fin) data = data.slice(0, data.length - 4);\n      if (fin && this.params[`${endpoint}_no_context_takeover`] || this._deflate[kPendingClose]) {\n        this._deflate.close();\n        this._deflate = null;\n      } else {\n        this._deflate[kWriteInProgress] = false;\n        this._deflate[kTotalLength] = 0;\n        this._deflate[kBuffers] = [];\n      }\n      callback(null, data);\n    });\n  }\n}\nmodule.exports = PerMessageDeflate;\n\n/**\n * The listener of the `zlib.DeflateRaw` stream `'data'` event.\n *\n * @param {Buffer} chunk A chunk of data\n * @private\n */\nfunction deflateOnData(chunk) {\n  this[kBuffers].push(chunk);\n  this[kTotalLength] += chunk.length;\n}\n\n/**\n * The listener of the `zlib.InflateRaw` stream `'data'` event.\n *\n * @param {Buffer} chunk A chunk of data\n * @private\n */\nfunction inflateOnData(chunk) {\n  this[kTotalLength] += chunk.length;\n  if (this[kOwner]._maxPayload < 1 || this[kTotalLength] <= this[kOwner]._maxPayload) {\n    this[kBuffers].push(chunk);\n    return;\n  }\n  this[kError] = new Error('max payload size exceeded');\n  this[kError].closeCode = 1009;\n  this.removeListener('data', inflateOnData);\n  this.reset();\n}\n\n/**\n * The listener of the `zlib.InflateRaw` stream `'error'` event.\n *\n * @param {Error} err The emitted error\n * @private\n */\nfunction inflateOnError(err) {\n  //\n  // There is no need to call `Zlib#close()` as the handle is automatically\n  // closed when an error is emitted.\n  //\n  this[kOwner]._inflate = null;\n  this[kCallback](err);\n}","map":{"version":3,"names":["safeBuffer","require","Limiter","zlib","bufferUtil","Buffer","TRAILER","from","EMPTY_BLOCK","kWriteInProgress","Symbol","kPendingClose","kTotalLength","kCallback","kBuffers","kError","kOwner","zlibLimiter","PerMessageDeflate","constructor","options","isServer","maxPayload","_maxPayload","_options","_threshold","threshold","undefined","_isServer","_deflate","_inflate","params","concurrency","concurrencyLimit","extensionName","offer","serverNoContextTakeover","server_no_context_takeover","clientNoContextTakeover","client_no_context_takeover","serverMaxWindowBits","server_max_window_bits","clientMaxWindowBits","client_max_window_bits","accept","paramsList","normalizeParams","acceptAsServer","acceptAsClient","cleanup","close","accepted","result","some","Error","map","Object","keys","forEach","key","value","length","parseInt","Number","isNaN","Z_MIN_WINDOWBITS","Z_MAX_WINDOWBITS","decompress","data","fin","callback","push","done","_decompress","err","compress","_compress","endpoint","windowBits","Z_DEFAULT_WINDOWBITS","createInflateRaw","on","inflateOnError","inflateOnData","write","flush","concat","process","nextTick","createDeflateRaw","memLevel","level","Z_SYNC_FLUSH","deflateOnData","slice","module","exports","chunk","closeCode","removeListener","reset"],"sources":["/home/user/Рабочий стол/pizza/project/node_modules/ws/lib/PerMessageDeflate.js"],"sourcesContent":["'use strict';\n\nconst safeBuffer = require('safe-buffer');\nconst Limiter = require('async-limiter');\nconst zlib = require('zlib');\n\nconst bufferUtil = require('./BufferUtil');\n\nconst Buffer = safeBuffer.Buffer;\n\nconst TRAILER = Buffer.from([0x00, 0x00, 0xff, 0xff]);\nconst EMPTY_BLOCK = Buffer.from([0x00]);\n\nconst kWriteInProgress = Symbol('write-in-progress');\nconst kPendingClose = Symbol('pending-close');\nconst kTotalLength = Symbol('total-length');\nconst kCallback = Symbol('callback');\nconst kBuffers = Symbol('buffers');\nconst kError = Symbol('error');\nconst kOwner = Symbol('owner');\n\n//\n// We limit zlib concurrency, which prevents severe memory fragmentation\n// as documented in https://github.com/nodejs/node/issues/8871#issuecomment-250915913\n// and https://github.com/websockets/ws/issues/1202\n//\n// Intentionally global; it's the global thread pool that's an issue.\n//\nlet zlibLimiter;\n\n/**\n * permessage-deflate implementation.\n */\nclass PerMessageDeflate {\n  /**\n   * Creates a PerMessageDeflate instance.\n   *\n   * @param {Object} options Configuration options\n   * @param {Boolean} options.serverNoContextTakeover Request/accept disabling\n   *     of server context takeover\n   * @param {Boolean} options.clientNoContextTakeover Advertise/acknowledge\n   *     disabling of client context takeover\n   * @param {(Boolean|Number)} options.serverMaxWindowBits Request/confirm the\n   *     use of a custom server window size\n   * @param {(Boolean|Number)} options.clientMaxWindowBits Advertise support\n   *     for, or request, a custom client window size\n   * @param {Number} options.level The value of zlib's `level` param\n   * @param {Number} options.memLevel The value of zlib's `memLevel` param\n   * @param {Number} options.threshold Size (in bytes) below which messages\n   *     should not be compressed\n   * @param {Number} options.concurrencyLimit The number of concurrent calls to\n   *     zlib\n   * @param {Boolean} isServer Create the instance in either server or client\n   *     mode\n   * @param {Number} maxPayload The maximum allowed message length\n   */\n  constructor (options, isServer, maxPayload) {\n    this._maxPayload = maxPayload | 0;\n    this._options = options || {};\n    this._threshold = this._options.threshold !== undefined\n      ? this._options.threshold\n      : 1024;\n    this._isServer = !!isServer;\n    this._deflate = null;\n    this._inflate = null;\n\n    this.params = null;\n\n    if (!zlibLimiter) {\n      const concurrency = this._options.concurrencyLimit !== undefined\n        ? this._options.concurrencyLimit\n        : 10;\n      zlibLimiter = new Limiter({ concurrency });\n    }\n  }\n\n  /**\n   * @type {String}\n   */\n  static get extensionName () {\n    return 'permessage-deflate';\n  }\n\n  /**\n   * Create extension parameters offer.\n   *\n   * @return {Object} Extension parameters\n   * @public\n   */\n  offer () {\n    const params = {};\n\n    if (this._options.serverNoContextTakeover) {\n      params.server_no_context_takeover = true;\n    }\n    if (this._options.clientNoContextTakeover) {\n      params.client_no_context_takeover = true;\n    }\n    if (this._options.serverMaxWindowBits) {\n      params.server_max_window_bits = this._options.serverMaxWindowBits;\n    }\n    if (this._options.clientMaxWindowBits) {\n      params.client_max_window_bits = this._options.clientMaxWindowBits;\n    } else if (this._options.clientMaxWindowBits == null) {\n      params.client_max_window_bits = true;\n    }\n\n    return params;\n  }\n\n  /**\n   * Accept extension offer.\n   *\n   * @param {Array} paramsList Extension parameters\n   * @return {Object} Accepted configuration\n   * @public\n   */\n  accept (paramsList) {\n    paramsList = this.normalizeParams(paramsList);\n\n    var params;\n    if (this._isServer) {\n      params = this.acceptAsServer(paramsList);\n    } else {\n      params = this.acceptAsClient(paramsList);\n    }\n\n    this.params = params;\n    return params;\n  }\n\n  /**\n   * Releases all resources used by the extension.\n   *\n   * @public\n   */\n  cleanup () {\n    if (this._inflate) {\n      if (this._inflate[kWriteInProgress]) {\n        this._inflate[kPendingClose] = true;\n      } else {\n        this._inflate.close();\n        this._inflate = null;\n      }\n    }\n    if (this._deflate) {\n      if (this._deflate[kWriteInProgress]) {\n        this._deflate[kPendingClose] = true;\n      } else {\n        this._deflate.close();\n        this._deflate = null;\n      }\n    }\n  }\n\n  /**\n   * Accept extension offer from client.\n   *\n   * @param {Array} paramsList Extension parameters\n   * @return {Object} Accepted configuration\n   * @private\n   */\n  acceptAsServer (paramsList) {\n    const accepted = {};\n    const result = paramsList.some((params) => {\n      if (\n        (this._options.serverNoContextTakeover === false &&\n          params.server_no_context_takeover) ||\n        (this._options.serverMaxWindowBits === false &&\n          params.server_max_window_bits) ||\n        (typeof this._options.serverMaxWindowBits === 'number' &&\n          typeof params.server_max_window_bits === 'number' &&\n          this._options.serverMaxWindowBits > params.server_max_window_bits) ||\n        (typeof this._options.clientMaxWindowBits === 'number' &&\n          !params.client_max_window_bits)\n      ) {\n        return;\n      }\n\n      if (\n        this._options.serverNoContextTakeover ||\n        params.server_no_context_takeover\n      ) {\n        accepted.server_no_context_takeover = true;\n      }\n      if (\n        this._options.clientNoContextTakeover ||\n        (this._options.clientNoContextTakeover !== false &&\n          params.client_no_context_takeover)\n      ) {\n        accepted.client_no_context_takeover = true;\n      }\n      if (typeof this._options.serverMaxWindowBits === 'number') {\n        accepted.server_max_window_bits = this._options.serverMaxWindowBits;\n      } else if (typeof params.server_max_window_bits === 'number') {\n        accepted.server_max_window_bits = params.server_max_window_bits;\n      }\n      if (typeof this._options.clientMaxWindowBits === 'number') {\n        accepted.client_max_window_bits = this._options.clientMaxWindowBits;\n      } else if (\n        this._options.clientMaxWindowBits !== false &&\n        typeof params.client_max_window_bits === 'number'\n      ) {\n        accepted.client_max_window_bits = params.client_max_window_bits;\n      }\n      return true;\n    });\n\n    if (!result) throw new Error(\"Doesn't support the offered configuration\");\n\n    return accepted;\n  }\n\n  /**\n   * Accept extension response from server.\n   *\n   * @param {Array} paramsList Extension parameters\n   * @return {Object} Accepted configuration\n   * @private\n   */\n  acceptAsClient (paramsList) {\n    const params = paramsList[0];\n\n    if (\n      this._options.clientNoContextTakeover === false &&\n      params.client_no_context_takeover\n    ) {\n      throw new Error('Invalid value for \"client_no_context_takeover\"');\n    }\n\n    if (\n      (typeof this._options.clientMaxWindowBits === 'number' &&\n        (!params.client_max_window_bits ||\n          params.client_max_window_bits > this._options.clientMaxWindowBits)) ||\n      (this._options.clientMaxWindowBits === false &&\n        params.client_max_window_bits)\n    ) {\n      throw new Error('Invalid value for \"client_max_window_bits\"');\n    }\n\n    return params;\n  }\n\n  /**\n   * Normalize extensions parameters.\n   *\n   * @param {Array} paramsList Extension parameters\n   * @return {Array} Normalized extensions parameters\n   * @private\n   */\n  normalizeParams (paramsList) {\n    return paramsList.map((params) => {\n      Object.keys(params).forEach((key) => {\n        var value = params[key];\n        if (value.length > 1) {\n          throw new Error(`Multiple extension parameters for ${key}`);\n        }\n\n        value = value[0];\n\n        switch (key) {\n          case 'server_no_context_takeover':\n          case 'client_no_context_takeover':\n            if (value !== true) {\n              throw new Error(`invalid extension parameter value for ${key} (${value})`);\n            }\n            params[key] = true;\n            break;\n          case 'server_max_window_bits':\n          case 'client_max_window_bits':\n            if (typeof value === 'string') {\n              value = parseInt(value, 10);\n              if (\n                Number.isNaN(value) ||\n                value < zlib.Z_MIN_WINDOWBITS ||\n                value > zlib.Z_MAX_WINDOWBITS\n              ) {\n                throw new Error(`invalid extension parameter value for ${key} (${value})`);\n              }\n            }\n            if (!this._isServer && value === true) {\n              throw new Error(`Missing extension parameter value for ${key}`);\n            }\n            params[key] = value;\n            break;\n          default:\n            throw new Error(`Not defined extension parameter (${key})`);\n        }\n      });\n      return params;\n    });\n  }\n\n  /**\n   * Decompress data. Concurrency limited by async-limiter.\n   *\n   * @param {Buffer} data Compressed data\n   * @param {Boolean} fin Specifies whether or not this is the last fragment\n   * @param {Function} callback Callback\n   * @public\n   */\n  decompress (data, fin, callback) {\n    zlibLimiter.push((done) => {\n      this._decompress(data, fin, (err, result) => {\n        done();\n        callback(err, result);\n      });\n    });\n  }\n\n  /**\n   * Compress data. Concurrency limited by async-limiter.\n   *\n   * @param {Buffer} data Data to compress\n   * @param {Boolean} fin Specifies whether or not this is the last fragment\n   * @param {Function} callback Callback\n   * @public\n   */\n  compress (data, fin, callback) {\n    zlibLimiter.push((done) => {\n      this._compress(data, fin, (err, result) => {\n        done();\n        callback(err, result);\n      });\n    });\n  }\n\n  /**\n   * Decompress data.\n   *\n   * @param {Buffer} data Compressed data\n   * @param {Boolean} fin Specifies whether or not this is the last fragment\n   * @param {Function} callback Callback\n   * @private\n   */\n  _decompress (data, fin, callback) {\n    const endpoint = this._isServer ? 'client' : 'server';\n\n    if (!this._inflate) {\n      const key = `${endpoint}_max_window_bits`;\n      const windowBits = typeof this.params[key] !== 'number'\n        ? zlib.Z_DEFAULT_WINDOWBITS\n        : this.params[key];\n\n      this._inflate = zlib.createInflateRaw({ windowBits });\n      this._inflate[kTotalLength] = 0;\n      this._inflate[kBuffers] = [];\n      this._inflate[kOwner] = this;\n      this._inflate.on('error', inflateOnError);\n      this._inflate.on('data', inflateOnData);\n    }\n\n    this._inflate[kCallback] = callback;\n    this._inflate[kWriteInProgress] = true;\n\n    this._inflate.write(data);\n    if (fin) this._inflate.write(TRAILER);\n\n    this._inflate.flush(() => {\n      const err = this._inflate[kError];\n\n      if (err) {\n        this._inflate.close();\n        this._inflate = null;\n        callback(err);\n        return;\n      }\n\n      const data = bufferUtil.concat(\n        this._inflate[kBuffers],\n        this._inflate[kTotalLength]\n      );\n\n      if (\n        (fin && this.params[`${endpoint}_no_context_takeover`]) ||\n        this._inflate[kPendingClose]\n      ) {\n        this._inflate.close();\n        this._inflate = null;\n      } else {\n        this._inflate[kWriteInProgress] = false;\n        this._inflate[kTotalLength] = 0;\n        this._inflate[kBuffers] = [];\n      }\n\n      callback(null, data);\n    });\n  }\n\n  /**\n   * Compress data.\n   *\n   * @param {Buffer} data Data to compress\n   * @param {Boolean} fin Specifies whether or not this is the last fragment\n   * @param {Function} callback Callback\n   * @private\n   */\n  _compress (data, fin, callback) {\n    if (!data || data.length === 0) {\n      process.nextTick(callback, null, EMPTY_BLOCK);\n      return;\n    }\n\n    const endpoint = this._isServer ? 'server' : 'client';\n\n    if (!this._deflate) {\n      const key = `${endpoint}_max_window_bits`;\n      const windowBits = typeof this.params[key] !== 'number'\n        ? zlib.Z_DEFAULT_WINDOWBITS\n        : this.params[key];\n\n      this._deflate = zlib.createDeflateRaw({\n        memLevel: this._options.memLevel,\n        level: this._options.level,\n        flush: zlib.Z_SYNC_FLUSH,\n        windowBits\n      });\n\n      this._deflate[kTotalLength] = 0;\n      this._deflate[kBuffers] = [];\n\n      //\n      // `zlib.DeflateRaw` emits an `'error'` event only when an attempt to use\n      // it is made after it has already been closed. This cannot happen here,\n      // so we only add a listener for the `'data'` event.\n      //\n      this._deflate.on('data', deflateOnData);\n    }\n\n    this._deflate[kWriteInProgress] = true;\n\n    this._deflate.write(data);\n    this._deflate.flush(zlib.Z_SYNC_FLUSH, () => {\n      var data = bufferUtil.concat(\n        this._deflate[kBuffers],\n        this._deflate[kTotalLength]\n      );\n\n      if (fin) data = data.slice(0, data.length - 4);\n\n      if (\n        (fin && this.params[`${endpoint}_no_context_takeover`]) ||\n        this._deflate[kPendingClose]\n      ) {\n        this._deflate.close();\n        this._deflate = null;\n      } else {\n        this._deflate[kWriteInProgress] = false;\n        this._deflate[kTotalLength] = 0;\n        this._deflate[kBuffers] = [];\n      }\n\n      callback(null, data);\n    });\n  }\n}\n\nmodule.exports = PerMessageDeflate;\n\n/**\n * The listener of the `zlib.DeflateRaw` stream `'data'` event.\n *\n * @param {Buffer} chunk A chunk of data\n * @private\n */\nfunction deflateOnData (chunk) {\n  this[kBuffers].push(chunk);\n  this[kTotalLength] += chunk.length;\n}\n\n/**\n * The listener of the `zlib.InflateRaw` stream `'data'` event.\n *\n * @param {Buffer} chunk A chunk of data\n * @private\n */\nfunction inflateOnData (chunk) {\n  this[kTotalLength] += chunk.length;\n\n  if (\n    this[kOwner]._maxPayload < 1 ||\n    this[kTotalLength] <= this[kOwner]._maxPayload\n  ) {\n    this[kBuffers].push(chunk);\n    return;\n  }\n\n  this[kError] = new Error('max payload size exceeded');\n  this[kError].closeCode = 1009;\n  this.removeListener('data', inflateOnData);\n  this.reset();\n}\n\n/**\n * The listener of the `zlib.InflateRaw` stream `'error'` event.\n *\n * @param {Error} err The emitted error\n * @private\n */\nfunction inflateOnError (err) {\n  //\n  // There is no need to call `Zlib#close()` as the handle is automatically\n  // closed when an error is emitted.\n  //\n  this[kOwner]._inflate = null;\n  this[kCallback](err);\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}