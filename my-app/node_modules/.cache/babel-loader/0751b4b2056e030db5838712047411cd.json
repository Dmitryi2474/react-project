{"ast":null,"code":"// this file handles outputting usage instructions,\n// failures, etc. keeps logging in one place.\nconst stringWidth = require('string-width');\nconst objFilter = require('./obj-filter');\nconst setBlocking = require('set-blocking');\nmodule.exports = function (yargs, y18n) {\n  const __ = y18n.__;\n  const self = {};\n\n  // methods for ouputting/building failure message.\n  var fails = [];\n  self.failFn = function (f) {\n    fails.push(f);\n  };\n  var failMessage = null;\n  var showHelpOnFail = true;\n  self.showHelpOnFail = function (enabled, message) {\n    if (typeof enabled === 'string') {\n      message = enabled;\n      enabled = true;\n    } else if (typeof enabled === 'undefined') {\n      enabled = true;\n    }\n    failMessage = message;\n    showHelpOnFail = enabled;\n    return self;\n  };\n  var failureOutput = false;\n  self.fail = function (msg, err) {\n    const logger = yargs._getLoggerInstance();\n    if (fails.length) {\n      for (var i = fails.length - 1; i >= 0; --i) {\n        fails[i](msg, err, self);\n      }\n    } else {\n      if (yargs.getExitProcess()) setBlocking(true);\n\n      // don't output failure message more than once\n      if (!failureOutput) {\n        failureOutput = true;\n        if (showHelpOnFail) yargs.showHelp('error');\n        if (msg) logger.error(msg);\n        if (failMessage) {\n          if (msg) logger.error('');\n          logger.error(failMessage);\n        }\n      }\n      err = err || new Error(msg);\n      if (yargs.getExitProcess()) {\n        return yargs.exit(1);\n      } else if (yargs._hasParseCallback()) {\n        return yargs.exit(1, err);\n      } else {\n        throw err;\n      }\n    }\n  };\n\n  // methods for ouputting/building help (usage) message.\n  var usage;\n  self.usage = function (msg) {\n    usage = msg;\n  };\n  self.getUsage = function () {\n    return usage;\n  };\n  var examples = [];\n  self.example = function (cmd, description) {\n    examples.push([cmd, description || '']);\n  };\n  var commands = [];\n  self.command = function (cmd, description, aliases) {\n    commands.push([cmd, description || '', aliases]);\n  };\n  self.getCommands = function () {\n    return commands;\n  };\n  var descriptions = {};\n  self.describe = function (key, desc) {\n    if (typeof key === 'object') {\n      Object.keys(key).forEach(function (k) {\n        self.describe(k, key[k]);\n      });\n    } else {\n      descriptions[key] = desc;\n    }\n  };\n  self.getDescriptions = function () {\n    return descriptions;\n  };\n  var epilog;\n  self.epilog = function (msg) {\n    epilog = msg;\n  };\n  var wrapSet = false;\n  var wrap;\n  self.wrap = function (cols) {\n    wrapSet = true;\n    wrap = cols;\n  };\n  function getWrap() {\n    // lazily call windowWidth() because it's very expensive,\n    // and only needs to be called if the user wants to show usage/help\n    if (!wrapSet) {\n      wrap = windowWidth();\n      wrapSet = true;\n    }\n    return wrap;\n  }\n  var deferY18nLookupPrefix = '__yargsString__:';\n  self.deferY18nLookup = function (str) {\n    return deferY18nLookupPrefix + str;\n  };\n  var defaultGroup = 'Options:';\n  self.help = function () {\n    normalizeAliases();\n    var demanded = yargs.getDemanded();\n    var groups = yargs.getGroups();\n    var options = yargs.getOptions();\n    var keys = Object.keys(Object.keys(descriptions).concat(Object.keys(demanded)).concat(Object.keys(options.default)).reduce(function (acc, key) {\n      if (key !== '_') acc[key] = true;\n      return acc;\n    }, {}));\n    var theWrap = getWrap();\n    var ui = require('cliui')({\n      width: theWrap,\n      wrap: !!theWrap\n    });\n\n    // the usage string.\n    if (usage) {\n      var u = usage.replace(/\\$0/g, yargs.$0);\n      ui.div(u + '\\n');\n    }\n\n    // your application's commands, i.e., non-option\n    // arguments populated in '_'.\n    if (commands.length) {\n      ui.div(__('Commands:'));\n      commands.forEach(function (command) {\n        ui.span({\n          text: command[0],\n          padding: [0, 2, 0, 2],\n          width: maxWidth(commands, theWrap) + 4\n        }, {\n          text: command[1]\n        });\n        if (command[2] && command[2].length) {\n          ui.div({\n            text: '[' + __('aliases:') + ' ' + command[2].join(', ') + ']',\n            padding: [0, 0, 0, 2],\n            align: 'right'\n          });\n        } else {\n          ui.div();\n        }\n      });\n      ui.div();\n    }\n\n    // perform some cleanup on the keys array, making it\n    // only include top-level keys not their aliases.\n    var aliasKeys = (Object.keys(options.alias) || []).concat(Object.keys(yargs.parsed.newAliases) || []);\n    keys = keys.filter(function (key) {\n      return !yargs.parsed.newAliases[key] && aliasKeys.every(function (alias) {\n        return (options.alias[alias] || []).indexOf(key) === -1;\n      });\n    });\n\n    // populate 'Options:' group with any keys that have not\n    // explicitly had a group set.\n    if (!groups[defaultGroup]) groups[defaultGroup] = [];\n    addUngroupedKeys(keys, options.alias, groups);\n\n    // display 'Options:' table along with any custom tables:\n    Object.keys(groups).forEach(function (groupName) {\n      if (!groups[groupName].length) return;\n      ui.div(__(groupName));\n\n      // if we've grouped the key 'f', but 'f' aliases 'foobar',\n      // normalizedKeys should contain only 'foobar'.\n      var normalizedKeys = groups[groupName].map(function (key) {\n        if (~aliasKeys.indexOf(key)) return key;\n        for (var i = 0, aliasKey; (aliasKey = aliasKeys[i]) !== undefined; i++) {\n          if (~(options.alias[aliasKey] || []).indexOf(key)) return aliasKey;\n        }\n        return key;\n      });\n\n      // actually generate the switches string --foo, -f, --bar.\n      var switches = normalizedKeys.reduce(function (acc, key) {\n        acc[key] = [key].concat(options.alias[key] || []).map(function (sw) {\n          return (sw.length > 1 ? '--' : '-') + sw;\n        }).join(', ');\n        return acc;\n      }, {});\n      normalizedKeys.forEach(function (key) {\n        var kswitch = switches[key];\n        var desc = descriptions[key] || '';\n        var type = null;\n        if (~desc.lastIndexOf(deferY18nLookupPrefix)) desc = __(desc.substring(deferY18nLookupPrefix.length));\n        if (~options.boolean.indexOf(key)) type = '[' + __('boolean') + ']';\n        if (~options.count.indexOf(key)) type = '[' + __('count') + ']';\n        if (~options.string.indexOf(key)) type = '[' + __('string') + ']';\n        if (~options.normalize.indexOf(key)) type = '[' + __('string') + ']';\n        if (~options.array.indexOf(key)) type = '[' + __('array') + ']';\n        if (~options.number.indexOf(key)) type = '[' + __('number') + ']';\n        var extra = [type, demanded[key] ? '[' + __('required') + ']' : null, options.choices && options.choices[key] ? '[' + __('choices:') + ' ' + self.stringifiedValues(options.choices[key]) + ']' : null, defaultString(options.default[key], options.defaultDescription[key])].filter(Boolean).join(' ');\n        ui.span({\n          text: kswitch,\n          padding: [0, 2, 0, 2],\n          width: maxWidth(switches, theWrap) + 4\n        }, desc);\n        if (extra) ui.div({\n          text: extra,\n          padding: [0, 0, 0, 2],\n          align: 'right'\n        });else ui.div();\n      });\n      ui.div();\n    });\n\n    // describe some common use-cases for your application.\n    if (examples.length) {\n      ui.div(__('Examples:'));\n      examples.forEach(function (example) {\n        example[0] = example[0].replace(/\\$0/g, yargs.$0);\n      });\n      examples.forEach(function (example) {\n        ui.div({\n          text: example[0],\n          padding: [0, 2, 0, 2],\n          width: maxWidth(examples, theWrap) + 4\n        }, example[1]);\n      });\n      ui.div();\n    }\n\n    // the usage string.\n    if (epilog) {\n      var e = epilog.replace(/\\$0/g, yargs.$0);\n      ui.div(e + '\\n');\n    }\n    return ui.toString();\n  };\n\n  // return the maximum width of a string\n  // in the left-hand column of a table.\n  function maxWidth(table, theWrap) {\n    var width = 0;\n\n    // table might be of the form [leftColumn],\n    // or {key: leftColumn}\n    if (!Array.isArray(table)) {\n      table = Object.keys(table).map(function (key) {\n        return [table[key]];\n      });\n    }\n    table.forEach(function (v) {\n      width = Math.max(stringWidth(v[0]), width);\n    });\n\n    // if we've enabled 'wrap' we should limit\n    // the max-width of the left-column.\n    if (theWrap) width = Math.min(width, parseInt(theWrap * 0.5, 10));\n    return width;\n  }\n\n  // make sure any options set for aliases,\n  // are copied to the keys being aliased.\n  function normalizeAliases() {\n    var demanded = yargs.getDemanded();\n    var options = yargs.getOptions();\n    (Object.keys(options.alias) || []).forEach(function (key) {\n      options.alias[key].forEach(function (alias) {\n        // copy descriptions.\n        if (descriptions[alias]) self.describe(key, descriptions[alias]);\n        // copy demanded.\n        if (demanded[alias]) yargs.demand(key, demanded[alias].msg);\n        // type messages.\n        if (~options.boolean.indexOf(alias)) yargs.boolean(key);\n        if (~options.count.indexOf(alias)) yargs.count(key);\n        if (~options.string.indexOf(alias)) yargs.string(key);\n        if (~options.normalize.indexOf(alias)) yargs.normalize(key);\n        if (~options.array.indexOf(alias)) yargs.array(key);\n        if (~options.number.indexOf(alias)) yargs.number(key);\n      });\n    });\n  }\n\n  // given a set of keys, place any keys that are\n  // ungrouped under the 'Options:' grouping.\n  function addUngroupedKeys(keys, aliases, groups) {\n    var groupedKeys = [];\n    var toCheck = null;\n    Object.keys(groups).forEach(function (group) {\n      groupedKeys = groupedKeys.concat(groups[group]);\n    });\n    keys.forEach(function (key) {\n      toCheck = [key].concat(aliases[key]);\n      if (!toCheck.some(function (k) {\n        return groupedKeys.indexOf(k) !== -1;\n      })) {\n        groups[defaultGroup].push(key);\n      }\n    });\n    return groupedKeys;\n  }\n  self.showHelp = function (level) {\n    const logger = yargs._getLoggerInstance();\n    if (!level) level = 'error';\n    var emit = typeof level === 'function' ? level : logger[level];\n    emit(self.help());\n  };\n  self.functionDescription = function (fn) {\n    var description = fn.name ? require('decamelize')(fn.name, '-') : __('generated-value');\n    return ['(', description, ')'].join('');\n  };\n  self.stringifiedValues = function (values, separator) {\n    var string = '';\n    var sep = separator || ', ';\n    var array = [].concat(values);\n    if (!values || !array.length) return string;\n    array.forEach(function (value) {\n      if (string.length) string += sep;\n      string += JSON.stringify(value);\n    });\n    return string;\n  };\n\n  // format the default-value-string displayed in\n  // the right-hand column.\n  function defaultString(value, defaultDescription) {\n    var string = '[' + __('default:') + ' ';\n    if (value === undefined && !defaultDescription) return null;\n    if (defaultDescription) {\n      string += defaultDescription;\n    } else {\n      switch (typeof value) {\n        case 'string':\n          string += JSON.stringify(value);\n          break;\n        case 'object':\n          string += JSON.stringify(value);\n          break;\n        default:\n          string += value;\n      }\n    }\n    return string + ']';\n  }\n\n  // guess the width of the console window, max-width 80.\n  function windowWidth() {\n    const wsize = require('window-size');\n    return wsize.width ? Math.min(80, wsize.width) : null;\n  }\n\n  // logic for displaying application version.\n  var version = null;\n  self.version = function (ver) {\n    version = ver;\n  };\n  self.showVersion = function () {\n    const logger = yargs._getLoggerInstance();\n    if (typeof version === 'function') logger.log(version());else logger.log(version);\n  };\n  self.reset = function (globalLookup) {\n    // do not reset wrap here\n    // do not reset fails here\n    failMessage = null;\n    failureOutput = false;\n    usage = undefined;\n    epilog = undefined;\n    examples = [];\n    commands = [];\n    descriptions = objFilter(descriptions, function (k, v) {\n      return globalLookup[k];\n    });\n    return self;\n  };\n  var frozen;\n  self.freeze = function () {\n    frozen = {};\n    frozen.failMessage = failMessage;\n    frozen.failureOutput = failureOutput;\n    frozen.usage = usage;\n    frozen.epilog = epilog;\n    frozen.examples = examples;\n    frozen.commands = commands;\n    frozen.descriptions = descriptions;\n  };\n  self.unfreeze = function () {\n    failMessage = frozen.failMessage;\n    failureOutput = frozen.failureOutput;\n    usage = frozen.usage;\n    epilog = frozen.epilog;\n    examples = frozen.examples;\n    commands = frozen.commands;\n    descriptions = frozen.descriptions;\n    frozen = undefined;\n  };\n  return self;\n};","map":{"version":3,"names":["stringWidth","require","objFilter","setBlocking","module","exports","yargs","y18n","__","self","fails","failFn","f","push","failMessage","showHelpOnFail","enabled","message","failureOutput","fail","msg","err","logger","_getLoggerInstance","length","i","getExitProcess","showHelp","error","Error","exit","_hasParseCallback","usage","getUsage","examples","example","cmd","description","commands","command","aliases","getCommands","descriptions","describe","key","desc","Object","keys","forEach","k","getDescriptions","epilog","wrapSet","wrap","cols","getWrap","windowWidth","deferY18nLookupPrefix","deferY18nLookup","str","defaultGroup","help","normalizeAliases","demanded","getDemanded","groups","getGroups","options","getOptions","concat","default","reduce","acc","theWrap","ui","width","u","replace","$0","div","span","text","padding","maxWidth","join","align","aliasKeys","alias","parsed","newAliases","filter","every","indexOf","addUngroupedKeys","groupName","normalizedKeys","map","aliasKey","undefined","switches","sw","kswitch","type","lastIndexOf","substring","boolean","count","string","normalize","array","number","extra","choices","stringifiedValues","defaultString","defaultDescription","Boolean","e","toString","table","Array","isArray","v","Math","max","min","parseInt","demand","groupedKeys","toCheck","group","some","level","emit","functionDescription","fn","name","values","separator","sep","value","JSON","stringify","wsize","version","ver","showVersion","log","reset","globalLookup","frozen","freeze","unfreeze"],"sources":["/home/user/Рабочий стол/pizza/project/node_modules/yargs/lib/usage.js"],"sourcesContent":["// this file handles outputting usage instructions,\n// failures, etc. keeps logging in one place.\nconst stringWidth = require('string-width')\nconst objFilter = require('./obj-filter')\nconst setBlocking = require('set-blocking')\n\nmodule.exports = function (yargs, y18n) {\n  const __ = y18n.__\n  const self = {}\n\n  // methods for ouputting/building failure message.\n  var fails = []\n  self.failFn = function (f) {\n    fails.push(f)\n  }\n\n  var failMessage = null\n  var showHelpOnFail = true\n  self.showHelpOnFail = function (enabled, message) {\n    if (typeof enabled === 'string') {\n      message = enabled\n      enabled = true\n    } else if (typeof enabled === 'undefined') {\n      enabled = true\n    }\n    failMessage = message\n    showHelpOnFail = enabled\n    return self\n  }\n\n  var failureOutput = false\n  self.fail = function (msg, err) {\n    const logger = yargs._getLoggerInstance()\n\n    if (fails.length) {\n      for (var i = fails.length - 1; i >= 0; --i) {\n        fails[i](msg, err, self)\n      }\n    } else {\n      if (yargs.getExitProcess()) setBlocking(true)\n\n      // don't output failure message more than once\n      if (!failureOutput) {\n        failureOutput = true\n        if (showHelpOnFail) yargs.showHelp('error')\n        if (msg) logger.error(msg)\n        if (failMessage) {\n          if (msg) logger.error('')\n          logger.error(failMessage)\n        }\n      }\n\n      err = err || new Error(msg)\n      if (yargs.getExitProcess()) {\n        return yargs.exit(1)\n      } else if (yargs._hasParseCallback()) {\n        return yargs.exit(1, err)\n      } else {\n        throw err\n      }\n    }\n  }\n\n  // methods for ouputting/building help (usage) message.\n  var usage\n  self.usage = function (msg) {\n    usage = msg\n  }\n  self.getUsage = function () {\n    return usage\n  }\n\n  var examples = []\n  self.example = function (cmd, description) {\n    examples.push([cmd, description || ''])\n  }\n\n  var commands = []\n  self.command = function (cmd, description, aliases) {\n    commands.push([cmd, description || '', aliases])\n  }\n  self.getCommands = function () {\n    return commands\n  }\n\n  var descriptions = {}\n  self.describe = function (key, desc) {\n    if (typeof key === 'object') {\n      Object.keys(key).forEach(function (k) {\n        self.describe(k, key[k])\n      })\n    } else {\n      descriptions[key] = desc\n    }\n  }\n  self.getDescriptions = function () {\n    return descriptions\n  }\n\n  var epilog\n  self.epilog = function (msg) {\n    epilog = msg\n  }\n\n  var wrapSet = false\n  var wrap\n  self.wrap = function (cols) {\n    wrapSet = true\n    wrap = cols\n  }\n\n  function getWrap () {\n    // lazily call windowWidth() because it's very expensive,\n    // and only needs to be called if the user wants to show usage/help\n    if (!wrapSet) {\n      wrap = windowWidth()\n      wrapSet = true\n    }\n    return wrap\n  }\n\n  var deferY18nLookupPrefix = '__yargsString__:'\n  self.deferY18nLookup = function (str) {\n    return deferY18nLookupPrefix + str\n  }\n\n  var defaultGroup = 'Options:'\n  self.help = function () {\n    normalizeAliases()\n\n    var demanded = yargs.getDemanded()\n    var groups = yargs.getGroups()\n    var options = yargs.getOptions()\n    var keys = Object.keys(\n      Object.keys(descriptions)\n      .concat(Object.keys(demanded))\n      .concat(Object.keys(options.default))\n      .reduce(function (acc, key) {\n        if (key !== '_') acc[key] = true\n        return acc\n      }, {})\n    )\n    var theWrap = getWrap()\n    var ui = require('cliui')({\n      width: theWrap,\n      wrap: !!theWrap\n    })\n\n    // the usage string.\n    if (usage) {\n      var u = usage.replace(/\\$0/g, yargs.$0)\n      ui.div(u + '\\n')\n    }\n\n    // your application's commands, i.e., non-option\n    // arguments populated in '_'.\n    if (commands.length) {\n      ui.div(__('Commands:'))\n\n      commands.forEach(function (command) {\n        ui.span(\n          {text: command[0], padding: [0, 2, 0, 2], width: maxWidth(commands, theWrap) + 4},\n          {text: command[1]}\n        )\n        if (command[2] && command[2].length) {\n          ui.div({text: '[' + __('aliases:') + ' ' + command[2].join(', ') + ']', padding: [0, 0, 0, 2], align: 'right'})\n        } else {\n          ui.div()\n        }\n      })\n\n      ui.div()\n    }\n\n    // perform some cleanup on the keys array, making it\n    // only include top-level keys not their aliases.\n    var aliasKeys = (Object.keys(options.alias) || [])\n      .concat(Object.keys(yargs.parsed.newAliases) || [])\n\n    keys = keys.filter(function (key) {\n      return !yargs.parsed.newAliases[key] && aliasKeys.every(function (alias) {\n        return (options.alias[alias] || []).indexOf(key) === -1\n      })\n    })\n\n    // populate 'Options:' group with any keys that have not\n    // explicitly had a group set.\n    if (!groups[defaultGroup]) groups[defaultGroup] = []\n    addUngroupedKeys(keys, options.alias, groups)\n\n    // display 'Options:' table along with any custom tables:\n    Object.keys(groups).forEach(function (groupName) {\n      if (!groups[groupName].length) return\n\n      ui.div(__(groupName))\n\n      // if we've grouped the key 'f', but 'f' aliases 'foobar',\n      // normalizedKeys should contain only 'foobar'.\n      var normalizedKeys = groups[groupName].map(function (key) {\n        if (~aliasKeys.indexOf(key)) return key\n        for (var i = 0, aliasKey; (aliasKey = aliasKeys[i]) !== undefined; i++) {\n          if (~(options.alias[aliasKey] || []).indexOf(key)) return aliasKey\n        }\n        return key\n      })\n\n      // actually generate the switches string --foo, -f, --bar.\n      var switches = normalizedKeys.reduce(function (acc, key) {\n        acc[key] = [ key ].concat(options.alias[key] || [])\n          .map(function (sw) {\n            return (sw.length > 1 ? '--' : '-') + sw\n          })\n          .join(', ')\n\n        return acc\n      }, {})\n\n      normalizedKeys.forEach(function (key) {\n        var kswitch = switches[key]\n        var desc = descriptions[key] || ''\n        var type = null\n\n        if (~desc.lastIndexOf(deferY18nLookupPrefix)) desc = __(desc.substring(deferY18nLookupPrefix.length))\n\n        if (~options.boolean.indexOf(key)) type = '[' + __('boolean') + ']'\n        if (~options.count.indexOf(key)) type = '[' + __('count') + ']'\n        if (~options.string.indexOf(key)) type = '[' + __('string') + ']'\n        if (~options.normalize.indexOf(key)) type = '[' + __('string') + ']'\n        if (~options.array.indexOf(key)) type = '[' + __('array') + ']'\n        if (~options.number.indexOf(key)) type = '[' + __('number') + ']'\n\n        var extra = [\n          type,\n          demanded[key] ? '[' + __('required') + ']' : null,\n          options.choices && options.choices[key] ? '[' + __('choices:') + ' ' +\n            self.stringifiedValues(options.choices[key]) + ']' : null,\n          defaultString(options.default[key], options.defaultDescription[key])\n        ].filter(Boolean).join(' ')\n\n        ui.span(\n          {text: kswitch, padding: [0, 2, 0, 2], width: maxWidth(switches, theWrap) + 4},\n          desc\n        )\n\n        if (extra) ui.div({text: extra, padding: [0, 0, 0, 2], align: 'right'})\n        else ui.div()\n      })\n\n      ui.div()\n    })\n\n    // describe some common use-cases for your application.\n    if (examples.length) {\n      ui.div(__('Examples:'))\n\n      examples.forEach(function (example) {\n        example[0] = example[0].replace(/\\$0/g, yargs.$0)\n      })\n\n      examples.forEach(function (example) {\n        ui.div(\n          {text: example[0], padding: [0, 2, 0, 2], width: maxWidth(examples, theWrap) + 4},\n          example[1]\n        )\n      })\n\n      ui.div()\n    }\n\n    // the usage string.\n    if (epilog) {\n      var e = epilog.replace(/\\$0/g, yargs.$0)\n      ui.div(e + '\\n')\n    }\n\n    return ui.toString()\n  }\n\n  // return the maximum width of a string\n  // in the left-hand column of a table.\n  function maxWidth (table, theWrap) {\n    var width = 0\n\n    // table might be of the form [leftColumn],\n    // or {key: leftColumn}\n    if (!Array.isArray(table)) {\n      table = Object.keys(table).map(function (key) {\n        return [table[key]]\n      })\n    }\n\n    table.forEach(function (v) {\n      width = Math.max(stringWidth(v[0]), width)\n    })\n\n    // if we've enabled 'wrap' we should limit\n    // the max-width of the left-column.\n    if (theWrap) width = Math.min(width, parseInt(theWrap * 0.5, 10))\n\n    return width\n  }\n\n  // make sure any options set for aliases,\n  // are copied to the keys being aliased.\n  function normalizeAliases () {\n    var demanded = yargs.getDemanded()\n    var options = yargs.getOptions()\n\n    ;(Object.keys(options.alias) || []).forEach(function (key) {\n      options.alias[key].forEach(function (alias) {\n        // copy descriptions.\n        if (descriptions[alias]) self.describe(key, descriptions[alias])\n        // copy demanded.\n        if (demanded[alias]) yargs.demand(key, demanded[alias].msg)\n        // type messages.\n        if (~options.boolean.indexOf(alias)) yargs.boolean(key)\n        if (~options.count.indexOf(alias)) yargs.count(key)\n        if (~options.string.indexOf(alias)) yargs.string(key)\n        if (~options.normalize.indexOf(alias)) yargs.normalize(key)\n        if (~options.array.indexOf(alias)) yargs.array(key)\n        if (~options.number.indexOf(alias)) yargs.number(key)\n      })\n    })\n  }\n\n  // given a set of keys, place any keys that are\n  // ungrouped under the 'Options:' grouping.\n  function addUngroupedKeys (keys, aliases, groups) {\n    var groupedKeys = []\n    var toCheck = null\n    Object.keys(groups).forEach(function (group) {\n      groupedKeys = groupedKeys.concat(groups[group])\n    })\n\n    keys.forEach(function (key) {\n      toCheck = [key].concat(aliases[key])\n      if (!toCheck.some(function (k) {\n        return groupedKeys.indexOf(k) !== -1\n      })) {\n        groups[defaultGroup].push(key)\n      }\n    })\n    return groupedKeys\n  }\n\n  self.showHelp = function (level) {\n    const logger = yargs._getLoggerInstance()\n    if (!level) level = 'error'\n    var emit = typeof level === 'function' ? level : logger[level]\n    emit(self.help())\n  }\n\n  self.functionDescription = function (fn) {\n    var description = fn.name ? require('decamelize')(fn.name, '-') : __('generated-value')\n    return ['(', description, ')'].join('')\n  }\n\n  self.stringifiedValues = function (values, separator) {\n    var string = ''\n    var sep = separator || ', '\n    var array = [].concat(values)\n\n    if (!values || !array.length) return string\n\n    array.forEach(function (value) {\n      if (string.length) string += sep\n      string += JSON.stringify(value)\n    })\n\n    return string\n  }\n\n  // format the default-value-string displayed in\n  // the right-hand column.\n  function defaultString (value, defaultDescription) {\n    var string = '[' + __('default:') + ' '\n\n    if (value === undefined && !defaultDescription) return null\n\n    if (defaultDescription) {\n      string += defaultDescription\n    } else {\n      switch (typeof value) {\n        case 'string':\n          string += JSON.stringify(value)\n          break\n        case 'object':\n          string += JSON.stringify(value)\n          break\n        default:\n          string += value\n      }\n    }\n\n    return string + ']'\n  }\n\n  // guess the width of the console window, max-width 80.\n  function windowWidth () {\n    const wsize = require('window-size')\n    return wsize.width ? Math.min(80, wsize.width) : null\n  }\n\n  // logic for displaying application version.\n  var version = null\n  self.version = function (ver) {\n    version = ver\n  }\n\n  self.showVersion = function () {\n    const logger = yargs._getLoggerInstance()\n    if (typeof version === 'function') logger.log(version())\n    else logger.log(version)\n  }\n\n  self.reset = function (globalLookup) {\n    // do not reset wrap here\n    // do not reset fails here\n    failMessage = null\n    failureOutput = false\n    usage = undefined\n    epilog = undefined\n    examples = []\n    commands = []\n    descriptions = objFilter(descriptions, function (k, v) {\n      return globalLookup[k]\n    })\n    return self\n  }\n\n  var frozen\n  self.freeze = function () {\n    frozen = {}\n    frozen.failMessage = failMessage\n    frozen.failureOutput = failureOutput\n    frozen.usage = usage\n    frozen.epilog = epilog\n    frozen.examples = examples\n    frozen.commands = commands\n    frozen.descriptions = descriptions\n  }\n  self.unfreeze = function () {\n    failMessage = frozen.failMessage\n    failureOutput = frozen.failureOutput\n    usage = frozen.usage\n    epilog = frozen.epilog\n    examples = frozen.examples\n    commands = frozen.commands\n    descriptions = frozen.descriptions\n    frozen = undefined\n  }\n\n  return self\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}