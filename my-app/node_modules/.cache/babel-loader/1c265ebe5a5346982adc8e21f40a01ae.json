{"ast":null,"code":"var url = require(\"url\");\nmodule.exports.rewriteLinks = function (userServer) {\n  var host = userServer.hostname;\n  var string = host;\n  var port = userServer.port;\n  if (host && port) {\n    if (parseInt(port, 10) !== 80) {\n      string = host + \":\" + port;\n    }\n  }\n  var reg = new RegExp(\n  // a simple, but exact match\n  \"https?:\\\\\\\\/\\\\\\\\/\" + string + \"|\" +\n  // following ['\"] + exact\n  \"('|\\\")\\\\/\\\\/\" + string + \"|\" +\n  // exact match with optional trailing slash\n  \"https?://\" + string + \"(?!:)(/)?\" + \"|\" +\n  // following ['\"] + exact + possible multiple (imr srcset etc)\n  \"('|\\\")(https?://|/|\\\\.)?\" + string + \"(?!:)(/)?(.*?)(?=[ ,'\\\"\\\\s])\", \"g\");\n  return {\n    match: reg,\n    //match: new RegExp(\"https?:\\\\\\\\/\\\\\\\\/\" + string + \"|https?://\" + string + \"(\\/)?|('|\\\")(https?://|/|\\\\.)?\" + string + \"(\\/)?(.*?)(?=[ ,'\\\"\\\\s])\", \"g\"),\n    //match: new RegExp(\"https?:\\\\\\\\?/\\\\\\\\?/\" + string + \"(\\/)?|('|\\\")(https?://|\\\\\\\\?/|\\\\.)?\" + string + \"(\\/)?(.*?)(?=[ ,'\\\"\\\\s])\", \"g\"),\n    //match: new RegExp('https?://' + string + '(\\/)?|(\\'|\")(https?://|/|\\\\.)?' + string + '(\\/)?(.*?)(?=[ ,\\'\"\\\\s])', 'g'),\n    //match: new RegExp(\"https?:\\\\\\\\/\\\\\\\\/\" + string, \"g\"),\n    fn: function (req, res, match) {\n      var proxyUrl = req.headers[\"host\"];\n      /**\n       * Reject subdomains\n       */\n      if (match[0] === \".\") {\n        return match;\n      }\n      var captured = match[0] === \"'\" || match[0] === '\"' ? match[0] : \"\";\n      /**\n       * allow http https\n       * @type {string}\n       */\n      var pre = \"//\";\n      if (match[0] === \"'\" || match[0] === '\"') {\n        match = match.slice(1);\n      }\n      /**\n       * parse the url\n       * @type {number|*}\n       */\n      var out = url.parse(match);\n      /**\n       * If host not set, just do a simple replace\n       */\n      if (!out.host) {\n        string = string.replace(/^(\\/)/, \"\");\n        return captured + match.replace(string, proxyUrl);\n      }\n      /**\n       * Only add trailing slash if one was\n       * present in the original match\n       */\n      if (out.path === \"/\") {\n        if (match.slice(-1) === \"/\") {\n          out.path = \"/\";\n        } else {\n          out.path = \"\";\n        }\n      }\n      /**\n       * Finally append all of parsed url\n       */\n      return [captured, pre, proxyUrl, out.path || \"\", out.hash || \"\"].join(\"\");\n    }\n  };\n};\n/**\n * Remove 'domain' from any cookies\n * @param {Object} res\n */\nmodule.exports.checkCookies = function checkCookies(res) {\n  if (typeof res.headers[\"set-cookie\"] !== \"undefined\") {\n    res.headers[\"set-cookie\"] = res.headers[\"set-cookie\"].map(function (item) {\n      return rewriteCookies(item);\n    });\n  }\n};\n/**\n * Remove the domain from any cookies.\n * @param rawCookie\n * @returns {string}\n */\nfunction rewriteCookies(rawCookie) {\n  var objCookie = function () {\n    // simple parse function (does not remove quotes)\n    var obj = {};\n    var pairs = rawCookie.split(/; */);\n    pairs.forEach(function (pair) {\n      var eqIndex = pair.indexOf(\"=\");\n      // skip things that don't look like key=value\n      if (eqIndex < 0) {\n        return;\n      }\n      var key = pair.substr(0, eqIndex).trim();\n      obj[key] = pair.substr(eqIndex + 1, pair.length).trim();\n    });\n    return obj;\n  }();\n  var pairs = Object.keys(objCookie).filter(function (item) {\n    return item.toLowerCase() !== \"domain\";\n  }).map(function (key) {\n    return key + \"=\" + objCookie[key];\n  });\n  if (rawCookie.match(/httponly/i)) {\n    pairs.push(\"HttpOnly\");\n  }\n  return pairs.join(\"; \");\n}\nmodule.exports.rewriteCookies = rewriteCookies;","map":{"version":3,"mappings":"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","names":["url","require","module","exports","rewriteLinks","userServer","host","hostname","string","port","parseInt","reg","RegExp","match","fn","req","res","proxyUrl","headers","captured","pre","slice","out","parse","replace","path","hash","join","checkCookies","map","item","rewriteCookies","rawCookie","objCookie","obj","pairs","split","forEach","pair","eqIndex","indexOf","key","substr","trim","length","Object","keys","filter","toLowerCase","push"],"sources":["../../lib/server/proxy-utils.js"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}