{"ast":null,"code":"'use strict';\n\nconst fs = require('graceful-fs');\nconst BUF_LENGTH = 64 * 1024;\nconst _buff = require('../util/buffer')(BUF_LENGTH);\nfunction copyFileSync(srcFile, destFile, options) {\n  const overwrite = options.overwrite;\n  const errorOnExist = options.errorOnExist;\n  const preserveTimestamps = options.preserveTimestamps;\n  if (fs.existsSync(destFile)) {\n    if (overwrite) {\n      fs.unlinkSync(destFile);\n    } else if (errorOnExist) {\n      throw new Error(`${destFile} already exists`);\n    } else return;\n  }\n  const fdr = fs.openSync(srcFile, 'r');\n  const stat = fs.fstatSync(fdr);\n  const fdw = fs.openSync(destFile, 'w', stat.mode);\n  let bytesRead = 1;\n  let pos = 0;\n  while (bytesRead > 0) {\n    bytesRead = fs.readSync(fdr, _buff, 0, BUF_LENGTH, pos);\n    fs.writeSync(fdw, _buff, 0, bytesRead);\n    pos += bytesRead;\n  }\n  if (preserveTimestamps) {\n    fs.futimesSync(fdw, stat.atime, stat.mtime);\n  }\n  fs.closeSync(fdr);\n  fs.closeSync(fdw);\n}\nmodule.exports = copyFileSync;","map":{"version":3,"names":["fs","require","BUF_LENGTH","_buff","copyFileSync","srcFile","destFile","options","overwrite","errorOnExist","preserveTimestamps","existsSync","unlinkSync","Error","fdr","openSync","stat","fstatSync","fdw","mode","bytesRead","pos","readSync","writeSync","futimesSync","atime","mtime","closeSync","module","exports"],"sources":["/home/user/Рабочий стол/pizza/project/node_modules/fs-extra/lib/copy-sync/copy-file-sync.js"],"sourcesContent":["'use strict'\n\nconst fs = require('graceful-fs')\n\nconst BUF_LENGTH = 64 * 1024\nconst _buff = require('../util/buffer')(BUF_LENGTH)\n\nfunction copyFileSync (srcFile, destFile, options) {\n  const overwrite = options.overwrite\n  const errorOnExist = options.errorOnExist\n  const preserveTimestamps = options.preserveTimestamps\n\n  if (fs.existsSync(destFile)) {\n    if (overwrite) {\n      fs.unlinkSync(destFile)\n    } else if (errorOnExist) {\n      throw new Error(`${destFile} already exists`)\n    } else return\n  }\n\n  const fdr = fs.openSync(srcFile, 'r')\n  const stat = fs.fstatSync(fdr)\n  const fdw = fs.openSync(destFile, 'w', stat.mode)\n  let bytesRead = 1\n  let pos = 0\n\n  while (bytesRead > 0) {\n    bytesRead = fs.readSync(fdr, _buff, 0, BUF_LENGTH, pos)\n    fs.writeSync(fdw, _buff, 0, bytesRead)\n    pos += bytesRead\n  }\n\n  if (preserveTimestamps) {\n    fs.futimesSync(fdw, stat.atime, stat.mtime)\n  }\n\n  fs.closeSync(fdr)\n  fs.closeSync(fdw)\n}\n\nmodule.exports = copyFileSync\n"],"mappings":"AAAA,YAAY;;AAEZ,MAAMA,EAAE,GAAGC,OAAO,CAAC,aAAa,CAAC;AAEjC,MAAMC,UAAU,GAAG,EAAE,GAAG,IAAI;AAC5B,MAAMC,KAAK,GAAGF,OAAO,CAAC,gBAAgB,CAAC,CAACC,UAAU,CAAC;AAEnD,SAASE,YAAY,CAAEC,OAAO,EAAEC,QAAQ,EAAEC,OAAO,EAAE;EACjD,MAAMC,SAAS,GAAGD,OAAO,CAACC,SAAS;EACnC,MAAMC,YAAY,GAAGF,OAAO,CAACE,YAAY;EACzC,MAAMC,kBAAkB,GAAGH,OAAO,CAACG,kBAAkB;EAErD,IAAIV,EAAE,CAACW,UAAU,CAACL,QAAQ,CAAC,EAAE;IAC3B,IAAIE,SAAS,EAAE;MACbR,EAAE,CAACY,UAAU,CAACN,QAAQ,CAAC;IACzB,CAAC,MAAM,IAAIG,YAAY,EAAE;MACvB,MAAM,IAAII,KAAK,CAAE,GAAEP,QAAS,iBAAgB,CAAC;IAC/C,CAAC,MAAM;EACT;EAEA,MAAMQ,GAAG,GAAGd,EAAE,CAACe,QAAQ,CAACV,OAAO,EAAE,GAAG,CAAC;EACrC,MAAMW,IAAI,GAAGhB,EAAE,CAACiB,SAAS,CAACH,GAAG,CAAC;EAC9B,MAAMI,GAAG,GAAGlB,EAAE,CAACe,QAAQ,CAACT,QAAQ,EAAE,GAAG,EAAEU,IAAI,CAACG,IAAI,CAAC;EACjD,IAAIC,SAAS,GAAG,CAAC;EACjB,IAAIC,GAAG,GAAG,CAAC;EAEX,OAAOD,SAAS,GAAG,CAAC,EAAE;IACpBA,SAAS,GAAGpB,EAAE,CAACsB,QAAQ,CAACR,GAAG,EAAEX,KAAK,EAAE,CAAC,EAAED,UAAU,EAAEmB,GAAG,CAAC;IACvDrB,EAAE,CAACuB,SAAS,CAACL,GAAG,EAAEf,KAAK,EAAE,CAAC,EAAEiB,SAAS,CAAC;IACtCC,GAAG,IAAID,SAAS;EAClB;EAEA,IAAIV,kBAAkB,EAAE;IACtBV,EAAE,CAACwB,WAAW,CAACN,GAAG,EAAEF,IAAI,CAACS,KAAK,EAAET,IAAI,CAACU,KAAK,CAAC;EAC7C;EAEA1B,EAAE,CAAC2B,SAAS,CAACb,GAAG,CAAC;EACjBd,EAAE,CAAC2B,SAAS,CAACT,GAAG,CAAC;AACnB;AAEAU,MAAM,CAACC,OAAO,GAAGzB,YAAY"},"metadata":{},"sourceType":"script"}