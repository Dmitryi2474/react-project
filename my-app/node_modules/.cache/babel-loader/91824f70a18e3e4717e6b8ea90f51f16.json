{"ast":null,"code":"/**\n * Module requirements.\n */\n\nvar Transport = require('../transport');\nvar parser = require('engine.io-parser');\nvar zlib = require('zlib');\nvar accepts = require('accepts');\nvar util = require('util');\nvar debug = require('debug')('engine:polling');\nvar compressionMethods = {\n  gzip: zlib.createGzip,\n  deflate: zlib.createDeflate\n};\n\n/**\n * Exports the constructor.\n */\n\nmodule.exports = Polling;\n\n/**\n * HTTP polling constructor.\n *\n * @api public.\n */\n\nfunction Polling(req) {\n  Transport.call(this, req);\n  this.closeTimeout = 30 * 1000;\n  this.maxHttpBufferSize = null;\n  this.httpCompression = null;\n}\n\n/**\n * Inherits from Transport.\n *\n * @api public.\n */\n\nutil.inherits(Polling, Transport);\n\n/**\n * Transport name\n *\n * @api public\n */\n\nPolling.prototype.name = 'polling';\n\n/**\n * Overrides onRequest.\n *\n * @param {http.IncomingMessage}\n * @api private\n */\n\nPolling.prototype.onRequest = function (req) {\n  var res = req.res;\n  if ('GET' === req.method) {\n    this.onPollRequest(req, res);\n  } else if ('POST' === req.method) {\n    this.onDataRequest(req, res);\n  } else {\n    res.writeHead(500);\n    res.end();\n  }\n};\n\n/**\n * The client sends a request awaiting for us to send data.\n *\n * @api private\n */\n\nPolling.prototype.onPollRequest = function (req, res) {\n  if (this.req) {\n    debug('request overlap');\n    // assert: this.res, '.req and .res should be (un)set together'\n    this.onError('overlap from client');\n    res.writeHead(500);\n    res.end();\n    return;\n  }\n  debug('setting request');\n  this.req = req;\n  this.res = res;\n  var self = this;\n  function onClose() {\n    self.onError('poll connection closed prematurely');\n  }\n  function cleanup() {\n    req.removeListener('close', onClose);\n    self.req = self.res = null;\n  }\n  req.cleanup = cleanup;\n  req.on('close', onClose);\n  this.writable = true;\n  this.emit('drain');\n\n  // if we're still writable but had a pending close, trigger an empty send\n  if (this.writable && this.shouldClose) {\n    debug('triggering empty send to append close packet');\n    this.send([{\n      type: 'noop'\n    }]);\n  }\n};\n\n/**\n * The client sends a request with data.\n *\n * @api private\n */\n\nPolling.prototype.onDataRequest = function (req, res) {\n  if (this.dataReq) {\n    // assert: this.dataRes, '.dataReq and .dataRes should be (un)set together'\n    this.onError('data request overlap from client');\n    res.writeHead(500);\n    res.end();\n    return;\n  }\n  var isBinary = 'application/octet-stream' === req.headers['content-type'];\n  this.dataReq = req;\n  this.dataRes = res;\n  var chunks = isBinary ? Buffer.concat([]) : '';\n  var self = this;\n  function cleanup() {\n    req.removeListener('data', onData);\n    req.removeListener('end', onEnd);\n    req.removeListener('close', onClose);\n    self.dataReq = self.dataRes = chunks = null;\n  }\n  function onClose() {\n    cleanup();\n    self.onError('data request connection closed prematurely');\n  }\n  function onData(data) {\n    var contentLength;\n    if (isBinary) {\n      chunks = Buffer.concat([chunks, data]);\n      contentLength = chunks.length;\n    } else {\n      chunks += data;\n      contentLength = Buffer.byteLength(chunks);\n    }\n    if (contentLength > self.maxHttpBufferSize) {\n      chunks = isBinary ? Buffer.concat([]) : '';\n      req.connection.destroy();\n    }\n  }\n  function onEnd() {\n    self.onData(chunks);\n    var headers = {\n      // text/html is required instead of text/plain to avoid an\n      // unwanted download dialog on certain user-agents (GH-43)\n      'Content-Type': 'text/html',\n      'Content-Length': 2\n    };\n    res.writeHead(200, self.headers(req, headers));\n    res.end('ok');\n    cleanup();\n  }\n  req.on('close', onClose);\n  if (!isBinary) req.setEncoding('utf8');\n  req.on('data', onData);\n  req.on('end', onEnd);\n};\n\n/**\n * Processes the incoming data payload.\n *\n * @param {String} encoded payload\n * @api private\n */\n\nPolling.prototype.onData = function (data) {\n  debug('received \"%s\"', data);\n  var self = this;\n  var callback = function (packet) {\n    if ('close' === packet.type) {\n      debug('got xhr close packet');\n      self.onClose();\n      return false;\n    }\n    self.onPacket(packet);\n  };\n  parser.decodePayload(data, callback);\n};\n\n/**\n * Overrides onClose.\n *\n * @api private\n */\n\nPolling.prototype.onClose = function () {\n  if (this.writable) {\n    // close pending poll request\n    this.send([{\n      type: 'noop'\n    }]);\n  }\n  Transport.prototype.onClose.call(this);\n};\n\n/**\n * Writes a packet payload.\n *\n * @param {Object} packet\n * @api private\n */\n\nPolling.prototype.send = function (packets) {\n  this.writable = false;\n  if (this.shouldClose) {\n    debug('appending close packet to payload');\n    packets.push({\n      type: 'close'\n    });\n    this.shouldClose();\n    this.shouldClose = null;\n  }\n  var self = this;\n  parser.encodePayload(packets, this.supportsBinary, function (data) {\n    var compress = packets.some(function (packet) {\n      return packet.options && packet.options.compress;\n    });\n    self.write(data, {\n      compress: compress\n    });\n  });\n};\n\n/**\n * Writes data as response to poll request.\n *\n * @param {String} data\n * @param {Object} options\n * @api private\n */\n\nPolling.prototype.write = function (data, options) {\n  debug('writing \"%s\"', data);\n  var self = this;\n  this.doWrite(data, options, function () {\n    self.req.cleanup();\n  });\n};\n\n/**\n * Performs the write.\n *\n * @api private\n */\n\nPolling.prototype.doWrite = function (data, options, callback) {\n  var self = this;\n\n  // explicit UTF-8 is required for pages not served under utf\n  var isString = typeof data === 'string';\n  var contentType = isString ? 'text/plain; charset=UTF-8' : 'application/octet-stream';\n  var headers = {\n    'Content-Type': contentType\n  };\n  if (!this.httpCompression || !options.compress) {\n    respond(data);\n    return;\n  }\n  var len = isString ? Buffer.byteLength(data) : data.length;\n  if (len < this.httpCompression.threshold) {\n    respond(data);\n    return;\n  }\n  var encoding = accepts(this.req).encodings(['gzip', 'deflate']);\n  if (!encoding) {\n    respond(data);\n    return;\n  }\n  this.compress(data, encoding, function (err, data) {\n    if (err) {\n      self.res.writeHead(500);\n      self.res.end();\n      callback(err);\n      return;\n    }\n    headers['Content-Encoding'] = encoding;\n    respond(data);\n  });\n  function respond(data) {\n    headers['Content-Length'] = 'string' === typeof data ? Buffer.byteLength(data) : data.length;\n    self.res.writeHead(200, self.headers(self.req, headers));\n    self.res.end(data);\n    callback();\n  }\n};\n\n/**\n * Compresses data.\n *\n * @api private\n */\n\nPolling.prototype.compress = function (data, encoding, callback) {\n  debug('compressing');\n  var buffers = [];\n  var nread = 0;\n  compressionMethods[encoding](this.httpCompression).on('error', callback).on('data', function (chunk) {\n    buffers.push(chunk);\n    nread += chunk.length;\n  }).on('end', function () {\n    callback(null, Buffer.concat(buffers, nread));\n  }).end(data);\n};\n\n/**\n * Closes the transport.\n *\n * @api private\n */\n\nPolling.prototype.doClose = function (fn) {\n  debug('closing');\n  var self = this;\n  var closeTimeoutTimer;\n  if (this.dataReq) {\n    debug('aborting ongoing data request');\n    this.dataReq.destroy();\n  }\n  if (this.writable) {\n    debug('transport writable - closing right away');\n    this.send([{\n      type: 'close'\n    }]);\n    onClose();\n  } else if (this.discarded) {\n    debug('transport discarded - closing right away');\n    onClose();\n  } else {\n    debug('transport not writable - buffering orderly close');\n    this.shouldClose = onClose;\n    closeTimeoutTimer = setTimeout(onClose, this.closeTimeout);\n  }\n  function onClose() {\n    clearTimeout(closeTimeoutTimer);\n    fn();\n    self.onClose();\n  }\n};\n\n/**\n * Returns headers for a response.\n *\n * @param {http.IncomingMessage} request\n * @param {Object} extra headers\n * @api private\n */\n\nPolling.prototype.headers = function (req, headers) {\n  headers = headers || {};\n\n  // prevent XSS warnings on IE\n  // https://github.com/LearnBoost/socket.io/pull/1333\n  var ua = req.headers['user-agent'];\n  if (ua && (~ua.indexOf(';MSIE') || ~ua.indexOf('Trident/'))) {\n    headers['X-XSS-Protection'] = '0';\n  }\n  this.emit('headers', headers);\n  return headers;\n};","map":{"version":3,"names":["Transport","require","parser","zlib","accepts","util","debug","compressionMethods","gzip","createGzip","deflate","createDeflate","module","exports","Polling","req","call","closeTimeout","maxHttpBufferSize","httpCompression","inherits","prototype","name","onRequest","res","method","onPollRequest","onDataRequest","writeHead","end","onError","self","onClose","cleanup","removeListener","on","writable","emit","shouldClose","send","type","dataReq","isBinary","headers","dataRes","chunks","Buffer","concat","onData","onEnd","data","contentLength","length","byteLength","connection","destroy","setEncoding","callback","packet","onPacket","decodePayload","packets","push","encodePayload","supportsBinary","compress","some","options","write","doWrite","isString","contentType","respond","len","threshold","encoding","encodings","err","buffers","nread","chunk","doClose","fn","closeTimeoutTimer","discarded","setTimeout","clearTimeout","ua","indexOf"],"sources":["/home/user/Рабочий стол/pizza/project/node_modules/engine.io/lib/transports/polling.js"],"sourcesContent":["\n/**\n * Module requirements.\n */\n\nvar Transport = require('../transport');\nvar parser = require('engine.io-parser');\nvar zlib = require('zlib');\nvar accepts = require('accepts');\nvar util = require('util');\nvar debug = require('debug')('engine:polling');\n\nvar compressionMethods = {\n  gzip: zlib.createGzip,\n  deflate: zlib.createDeflate\n};\n\n/**\n * Exports the constructor.\n */\n\nmodule.exports = Polling;\n\n/**\n * HTTP polling constructor.\n *\n * @api public.\n */\n\nfunction Polling (req) {\n  Transport.call(this, req);\n\n  this.closeTimeout = 30 * 1000;\n  this.maxHttpBufferSize = null;\n  this.httpCompression = null;\n}\n\n/**\n * Inherits from Transport.\n *\n * @api public.\n */\n\nutil.inherits(Polling, Transport);\n\n/**\n * Transport name\n *\n * @api public\n */\n\nPolling.prototype.name = 'polling';\n\n/**\n * Overrides onRequest.\n *\n * @param {http.IncomingMessage}\n * @api private\n */\n\nPolling.prototype.onRequest = function (req) {\n  var res = req.res;\n\n  if ('GET' === req.method) {\n    this.onPollRequest(req, res);\n  } else if ('POST' === req.method) {\n    this.onDataRequest(req, res);\n  } else {\n    res.writeHead(500);\n    res.end();\n  }\n};\n\n/**\n * The client sends a request awaiting for us to send data.\n *\n * @api private\n */\n\nPolling.prototype.onPollRequest = function (req, res) {\n  if (this.req) {\n    debug('request overlap');\n    // assert: this.res, '.req and .res should be (un)set together'\n    this.onError('overlap from client');\n    res.writeHead(500);\n    res.end();\n    return;\n  }\n\n  debug('setting request');\n\n  this.req = req;\n  this.res = res;\n\n  var self = this;\n\n  function onClose () {\n    self.onError('poll connection closed prematurely');\n  }\n\n  function cleanup () {\n    req.removeListener('close', onClose);\n    self.req = self.res = null;\n  }\n\n  req.cleanup = cleanup;\n  req.on('close', onClose);\n\n  this.writable = true;\n  this.emit('drain');\n\n  // if we're still writable but had a pending close, trigger an empty send\n  if (this.writable && this.shouldClose) {\n    debug('triggering empty send to append close packet');\n    this.send([{ type: 'noop' }]);\n  }\n};\n\n/**\n * The client sends a request with data.\n *\n * @api private\n */\n\nPolling.prototype.onDataRequest = function (req, res) {\n  if (this.dataReq) {\n    // assert: this.dataRes, '.dataReq and .dataRes should be (un)set together'\n    this.onError('data request overlap from client');\n    res.writeHead(500);\n    res.end();\n    return;\n  }\n\n  var isBinary = 'application/octet-stream' === req.headers['content-type'];\n\n  this.dataReq = req;\n  this.dataRes = res;\n\n  var chunks = isBinary ? Buffer.concat([]) : '';\n  var self = this;\n\n  function cleanup () {\n    req.removeListener('data', onData);\n    req.removeListener('end', onEnd);\n    req.removeListener('close', onClose);\n    self.dataReq = self.dataRes = chunks = null;\n  }\n\n  function onClose () {\n    cleanup();\n    self.onError('data request connection closed prematurely');\n  }\n\n  function onData (data) {\n    var contentLength;\n    if (isBinary) {\n      chunks = Buffer.concat([chunks, data]);\n      contentLength = chunks.length;\n    } else {\n      chunks += data;\n      contentLength = Buffer.byteLength(chunks);\n    }\n\n    if (contentLength > self.maxHttpBufferSize) {\n      chunks = isBinary ? Buffer.concat([]) : '';\n      req.connection.destroy();\n    }\n  }\n\n  function onEnd () {\n    self.onData(chunks);\n\n    var headers = {\n      // text/html is required instead of text/plain to avoid an\n      // unwanted download dialog on certain user-agents (GH-43)\n      'Content-Type': 'text/html',\n      'Content-Length': 2\n    };\n\n    res.writeHead(200, self.headers(req, headers));\n    res.end('ok');\n    cleanup();\n  }\n\n  req.on('close', onClose);\n  if (!isBinary) req.setEncoding('utf8');\n  req.on('data', onData);\n  req.on('end', onEnd);\n};\n\n/**\n * Processes the incoming data payload.\n *\n * @param {String} encoded payload\n * @api private\n */\n\nPolling.prototype.onData = function (data) {\n  debug('received \"%s\"', data);\n  var self = this;\n  var callback = function (packet) {\n    if ('close' === packet.type) {\n      debug('got xhr close packet');\n      self.onClose();\n      return false;\n    }\n\n    self.onPacket(packet);\n  };\n\n  parser.decodePayload(data, callback);\n};\n\n/**\n * Overrides onClose.\n *\n * @api private\n */\n\nPolling.prototype.onClose = function () {\n  if (this.writable) {\n    // close pending poll request\n    this.send([{ type: 'noop' }]);\n  }\n  Transport.prototype.onClose.call(this);\n};\n\n/**\n * Writes a packet payload.\n *\n * @param {Object} packet\n * @api private\n */\n\nPolling.prototype.send = function (packets) {\n  this.writable = false;\n\n  if (this.shouldClose) {\n    debug('appending close packet to payload');\n    packets.push({ type: 'close' });\n    this.shouldClose();\n    this.shouldClose = null;\n  }\n\n  var self = this;\n  parser.encodePayload(packets, this.supportsBinary, function (data) {\n    var compress = packets.some(function (packet) {\n      return packet.options && packet.options.compress;\n    });\n    self.write(data, { compress: compress });\n  });\n};\n\n/**\n * Writes data as response to poll request.\n *\n * @param {String} data\n * @param {Object} options\n * @api private\n */\n\nPolling.prototype.write = function (data, options) {\n  debug('writing \"%s\"', data);\n  var self = this;\n  this.doWrite(data, options, function () {\n    self.req.cleanup();\n  });\n};\n\n/**\n * Performs the write.\n *\n * @api private\n */\n\nPolling.prototype.doWrite = function (data, options, callback) {\n  var self = this;\n\n  // explicit UTF-8 is required for pages not served under utf\n  var isString = typeof data === 'string';\n  var contentType = isString\n    ? 'text/plain; charset=UTF-8'\n    : 'application/octet-stream';\n\n  var headers = {\n    'Content-Type': contentType\n  };\n\n  if (!this.httpCompression || !options.compress) {\n    respond(data);\n    return;\n  }\n\n  var len = isString ? Buffer.byteLength(data) : data.length;\n  if (len < this.httpCompression.threshold) {\n    respond(data);\n    return;\n  }\n\n  var encoding = accepts(this.req).encodings(['gzip', 'deflate']);\n  if (!encoding) {\n    respond(data);\n    return;\n  }\n\n  this.compress(data, encoding, function (err, data) {\n    if (err) {\n      self.res.writeHead(500);\n      self.res.end();\n      callback(err);\n      return;\n    }\n\n    headers['Content-Encoding'] = encoding;\n    respond(data);\n  });\n\n  function respond (data) {\n    headers['Content-Length'] = 'string' === typeof data ? Buffer.byteLength(data) : data.length;\n    self.res.writeHead(200, self.headers(self.req, headers));\n    self.res.end(data);\n    callback();\n  }\n};\n\n/**\n * Compresses data.\n *\n * @api private\n */\n\nPolling.prototype.compress = function (data, encoding, callback) {\n  debug('compressing');\n\n  var buffers = [];\n  var nread = 0;\n\n  compressionMethods[encoding](this.httpCompression)\n    .on('error', callback)\n    .on('data', function (chunk) {\n      buffers.push(chunk);\n      nread += chunk.length;\n    })\n    .on('end', function () {\n      callback(null, Buffer.concat(buffers, nread));\n    })\n    .end(data);\n};\n\n/**\n * Closes the transport.\n *\n * @api private\n */\n\nPolling.prototype.doClose = function (fn) {\n  debug('closing');\n\n  var self = this;\n  var closeTimeoutTimer;\n\n  if (this.dataReq) {\n    debug('aborting ongoing data request');\n    this.dataReq.destroy();\n  }\n\n  if (this.writable) {\n    debug('transport writable - closing right away');\n    this.send([{ type: 'close' }]);\n    onClose();\n  } else if (this.discarded) {\n    debug('transport discarded - closing right away');\n    onClose();\n  } else {\n    debug('transport not writable - buffering orderly close');\n    this.shouldClose = onClose;\n    closeTimeoutTimer = setTimeout(onClose, this.closeTimeout);\n  }\n\n  function onClose () {\n    clearTimeout(closeTimeoutTimer);\n    fn();\n    self.onClose();\n  }\n};\n\n/**\n * Returns headers for a response.\n *\n * @param {http.IncomingMessage} request\n * @param {Object} extra headers\n * @api private\n */\n\nPolling.prototype.headers = function (req, headers) {\n  headers = headers || {};\n\n  // prevent XSS warnings on IE\n  // https://github.com/LearnBoost/socket.io/pull/1333\n  var ua = req.headers['user-agent'];\n  if (ua && (~ua.indexOf(';MSIE') || ~ua.indexOf('Trident/'))) {\n    headers['X-XSS-Protection'] = '0';\n  }\n\n  this.emit('headers', headers);\n  return headers;\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}