{"ast":null,"code":"var inherits = require('util').inherits;\nvar Transform = require('stream').Transform;\nvar TokenBucket = require('limiter').TokenBucket;\n\n/*\n * Throttle is a throttled stream implementing the stream.Transform interface.\n * Options:\n *    rate (mandatory): the throttling rate in bytes per second.\n *    chunksize (optional): the maximum chunk size into which larger writes are decomposed.\n * Any other options are passed to stream.Transform.\n */\nfunction Throttle(opts, group) {\n  if (group === undefined) group = new ThrottleGroup(opts);\n  this.bucket = group.bucket;\n  this.chunksize = group.chunksize;\n  Transform.call(this, opts);\n}\ninherits(Throttle, Transform);\nThrottle.prototype._transform = function (chunk, encoding, done) {\n  process(this, chunk, 0, done);\n};\nfunction process(self, chunk, pos, done) {\n  var slice = chunk.slice(pos, pos + self.chunksize);\n  if (!slice.length) {\n    // chunk fully consumed\n    done();\n    return;\n  }\n  self.bucket.removeTokens(slice.length, function (err) {\n    if (err) {\n      done(err);\n      return;\n    }\n    self.push(slice);\n    process(self, chunk, pos + self.chunksize, done);\n  });\n}\n\n/*\n * ThrottleGroup throttles an aggregate of streams.\n * Options are the same as for Throttle.\n */\nfunction ThrottleGroup(opts) {\n  if (!(this instanceof ThrottleGroup)) return new ThrottleGroup(opts);\n  opts = opts || {};\n  if (opts.rate === undefined) throw new Error('throttle rate is a required argument');\n  if (typeof opts.rate !== 'number' || opts.rate <= 0) throw new Error('throttle rate must be a positive number');\n  if (opts.chunksize !== undefined && (typeof opts.chunksize !== 'number' || opts.chunksize <= 0)) {\n    throw new Error('throttle chunk size must be a positive number');\n  }\n  this.rate = opts.rate;\n  this.chunksize = opts.chunksize || this.rate / 10;\n  this.bucket = new TokenBucket(this.rate, this.rate, 'second', null);\n}\n\n/*\n * Create a new stream in the throttled group and returns it.\n * Any supplied options are passed to the Throttle constructor.\n */\nThrottleGroup.prototype.throttle = function (opts) {\n  return new Throttle(opts, this);\n};\nmodule.exports = {\n  Throttle: Throttle,\n  ThrottleGroup: ThrottleGroup\n};","map":{"version":3,"names":["inherits","require","Transform","TokenBucket","Throttle","opts","group","undefined","ThrottleGroup","bucket","chunksize","call","prototype","_transform","chunk","encoding","done","process","self","pos","slice","length","removeTokens","err","push","rate","Error","throttle","module","exports"],"sources":["/home/user/Рабочий стол/pizza/project/node_modules/stream-throttle/src/throttle.js"],"sourcesContent":["var inherits = require('util').inherits;\nvar Transform = require('stream').Transform;\nvar TokenBucket = require('limiter').TokenBucket;\n\n/*\n * Throttle is a throttled stream implementing the stream.Transform interface.\n * Options:\n *    rate (mandatory): the throttling rate in bytes per second.\n *    chunksize (optional): the maximum chunk size into which larger writes are decomposed.\n * Any other options are passed to stream.Transform.\n */\nfunction Throttle(opts, group) {\n    if (group === undefined)\n        group = new ThrottleGroup(opts);\n    this.bucket = group.bucket;\n    this.chunksize = group.chunksize;\n    Transform.call(this, opts);\n}\ninherits(Throttle, Transform);\n\nThrottle.prototype._transform = function(chunk, encoding, done) {\n    process(this, chunk, 0, done);\n};\n\nfunction process(self, chunk, pos, done) {\n    var slice = chunk.slice(pos, pos + self.chunksize);\n    if (!slice.length) {\n        // chunk fully consumed\n        done();\n        return;\n    }\n    self.bucket.removeTokens(slice.length, function(err) {\n        if (err) {\n            done(err);\n            return;\n        }\n        self.push(slice);\n        process(self, chunk, pos + self.chunksize, done);\n    });\n}\n\n/*\n * ThrottleGroup throttles an aggregate of streams.\n * Options are the same as for Throttle.\n */\nfunction ThrottleGroup(opts) {\n    if (!(this instanceof ThrottleGroup))\n        return new ThrottleGroup(opts);\n\n    opts = opts || {};\n    if (opts.rate === undefined)\n        throw new Error('throttle rate is a required argument');\n    if (typeof opts.rate !== 'number' || opts.rate <= 0)\n        throw new Error('throttle rate must be a positive number');\n    if (opts.chunksize !== undefined && (typeof opts.chunksize !== 'number' || opts.chunksize <= 0)) {\n        throw new Error('throttle chunk size must be a positive number');\n    }\n\n    this.rate = opts.rate;\n    this.chunksize = opts.chunksize || this.rate/10;\n    this.bucket = new TokenBucket(this.rate, this.rate, 'second', null);\n}\n\n/*\n * Create a new stream in the throttled group and returns it.\n * Any supplied options are passed to the Throttle constructor.\n */\nThrottleGroup.prototype.throttle = function(opts) {\n    return new Throttle(opts, this);\n};\n\nmodule.exports = {\n    Throttle: Throttle,\n    ThrottleGroup: ThrottleGroup\n};"],"mappings":"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"},"metadata":{},"sourceType":"script"}