{"ast":null,"code":"\"use strict\";\n\nvar utils = require(\"../utils\");\nvar publicUtils = require(\"./public-utils\");\nvar _ = require(\"../lodash.custom\");\nvar defaultConfig = require(\"../default-config\");\nvar stream = require(\"./stream\");\n/**\n * @param emitter\n * @returns {Function}\n */\nmodule.exports = function (emitter) {\n  /**\n   * Inform browsers about file changes.\n   *\n   * eg: reload(\"core.css\")\n   */\n  function browserSyncReload(opts) {\n    /**\n     * BACKWARDS COMPATIBILITY:\n     * Passing an object as the only arg to the `reload`\n     * method with at *least* the key-value pair of {stream: true},\n     * was only ever used for streams support - so it's safe to check\n     * for that signature here and defer to the\n     * dedicated `.stream()` method instead.\n     */\n    if (_.isObject(opts)) {\n      if (!Array.isArray(opts) && Object.keys(opts).length) {\n        if (opts.stream === true) {\n          return stream(emitter)(opts);\n        }\n      }\n    }\n    /**\n     * Handle single string paths such as\n     * reload(\"core.css\")\n     */\n    if (typeof opts === \"string\" && opts !== \"undefined\") {\n      return publicUtils.emitChangeEvent(emitter, opts, true);\n    }\n    /**\n     * Handle an array of file paths such as\n     * reload([\"core.css, \"ie.css\"])\n     */\n    if (Array.isArray(opts)) {\n      return opts.forEach(function (filepath) {\n        publicUtils.emitChangeEvent(emitter, filepath, true);\n      });\n    }\n    /**\n     * At this point the argument given was neither an object,\n     * array or string so we simply perform a reload. This is to\n     * allow the following syntax to work as expected\n     *\n     * reload();\n     */\n    return publicUtils.emitBrowserReload(emitter);\n  }\n  return browserSyncReload;\n};","map":{"version":3,"mappings":"AAAA,YAAY;;AAEZ,IAAIA,KAAK,GAAGC,OAAO,CAAC,UAAU,CAAC;AAC/B,IAAIC,WAAW,GAAGD,OAAO,CAAC,gBAAgB,CAAC;AAC3C,IAAIE,CAAC,GAAGF,OAAO,CAAC,kBAAkB,CAAC;AACnC,IAAIG,aAAa,GAAGH,OAAO,CAAC,mBAAmB,CAAC;AAChD,IAAII,MAAM,GAAGJ,OAAO,CAAC,UAAU,CAAC;AAEhC;;;;AAIAK,MAAM,CAACC,OAAO,GAAG,UAASC,OAAO;EAC7B;;;;;EAKA,SAASC,iBAAiB,CAACC,IAAI;IAC3B;;;;;;;;IAQA,IAAIP,CAAC,CAACQ,QAAQ,CAACD,IAAI,CAAC,EAAE;MAClB,IAAI,CAACE,KAAK,CAACC,OAAO,CAACH,IAAI,CAAC,IAAII,MAAM,CAACC,IAAI,CAACL,IAAI,CAAC,CAACM,MAAM,EAAE;QAClD,IAAIN,IAAI,CAACL,MAAM,KAAK,IAAI,EAAE;UACtB,OAAOA,MAAM,CAACG,OAAO,CAAC,CAACE,IAAI,CAAC;;;;IAKxC;;;;IAIA,IAAI,OAAOA,IAAI,KAAK,QAAQ,IAAIA,IAAI,KAAK,WAAW,EAAE;MAClD,OAAOR,WAAW,CAACe,eAAe,CAACT,OAAO,EAAEE,IAAI,EAAE,IAAI,CAAC;;IAG3D;;;;IAIA,IAAIE,KAAK,CAACC,OAAO,CAACH,IAAI,CAAC,EAAE;MACrB,OAAOA,IAAI,CAACQ,OAAO,CAAC,UAASC,QAAQ;QACjCjB,WAAW,CAACe,eAAe,CAACT,OAAO,EAAEW,QAAQ,EAAE,IAAI,CAAC;MACxD,CAAC,CAAC;;IAGN;;;;;;;IAOA,OAAOjB,WAAW,CAACkB,iBAAiB,CAACZ,OAAO,CAAC;EACjD;EAEA,OAAOC,iBAAiB;AAC5B,CAAC","names":["utils","require","publicUtils","_","defaultConfig","stream","module","exports","emitter","browserSyncReload","opts","isObject","Array","isArray","Object","keys","length","emitChangeEvent","forEach","filepath","emitBrowserReload"],"sources":["../../lib/public/reload.js"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}