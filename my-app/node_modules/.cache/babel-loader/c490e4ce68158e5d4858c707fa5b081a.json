{"ast":null,"code":"/**\n * Module dependencies.\n */\n\nvar parser = require('socket.io-parser');\nvar debug = require('debug')('socket.io:client');\nvar url = require('url');\n\n/**\n * Module exports.\n */\n\nmodule.exports = Client;\n\n/**\n * Client constructor.\n *\n * @param {Server} server instance\n * @param {Socket} conn\n * @api private\n */\n\nfunction Client(server, conn) {\n  this.server = server;\n  this.conn = conn;\n  this.encoder = server.encoder;\n  this.decoder = new server.parser.Decoder();\n  this.id = conn.id;\n  this.request = conn.request;\n  this.setup();\n  this.sockets = {};\n  this.nsps = {};\n  this.connectBuffer = [];\n}\n\n/**\n * Sets up event listeners.\n *\n * @api private\n */\n\nClient.prototype.setup = function () {\n  this.onclose = this.onclose.bind(this);\n  this.ondata = this.ondata.bind(this);\n  this.onerror = this.onerror.bind(this);\n  this.ondecoded = this.ondecoded.bind(this);\n  this.decoder.on('decoded', this.ondecoded);\n  this.conn.on('data', this.ondata);\n  this.conn.on('error', this.onerror);\n  this.conn.on('close', this.onclose);\n};\n\n/**\n * Connects a client to a namespace.\n *\n * @param {String} name namespace\n * @param {Object} query the query parameters\n * @api private\n */\n\nClient.prototype.connect = function (name, query) {\n  if (this.server.nsps[name]) {\n    debug('connecting to namespace %s', name);\n    return this.doConnect(name, query);\n  }\n  this.server.checkNamespace(name, query, dynamicNsp => {\n    if (dynamicNsp) {\n      debug('dynamic namespace %s was created', dynamicNsp.name);\n      this.doConnect(name, query);\n    } else {\n      debug('creation of namespace %s was denied', name);\n      this.packet({\n        type: parser.ERROR,\n        nsp: name,\n        data: 'Invalid namespace'\n      });\n    }\n  });\n};\n\n/**\n * Connects a client to a namespace.\n *\n * @param {String} name namespace\n * @param {String} query the query parameters\n * @api private\n */\n\nClient.prototype.doConnect = function (name, query) {\n  var nsp = this.server.of(name);\n  if ('/' != name && !this.nsps['/']) {\n    this.connectBuffer.push(name);\n    return;\n  }\n  var self = this;\n  var socket = nsp.add(this, query, function () {\n    self.sockets[socket.id] = socket;\n    self.nsps[nsp.name] = socket;\n    if ('/' == nsp.name && self.connectBuffer.length > 0) {\n      self.connectBuffer.forEach(self.connect, self);\n      self.connectBuffer = [];\n    }\n  });\n};\n\n/**\n * Disconnects from all namespaces and closes transport.\n *\n * @api private\n */\n\nClient.prototype.disconnect = function () {\n  for (var id in this.sockets) {\n    if (this.sockets.hasOwnProperty(id)) {\n      this.sockets[id].disconnect();\n    }\n  }\n  this.sockets = {};\n  this.close();\n};\n\n/**\n * Removes a socket. Called by each `Socket`.\n *\n * @api private\n */\n\nClient.prototype.remove = function (socket) {\n  if (this.sockets.hasOwnProperty(socket.id)) {\n    var nsp = this.sockets[socket.id].nsp.name;\n    delete this.sockets[socket.id];\n    delete this.nsps[nsp];\n  } else {\n    debug('ignoring remove for %s', socket.id);\n  }\n};\n\n/**\n * Closes the underlying connection.\n *\n * @api private\n */\n\nClient.prototype.close = function () {\n  if ('open' == this.conn.readyState) {\n    debug('forcing transport close');\n    this.conn.close();\n    this.onclose('forced server close');\n  }\n};\n\n/**\n * Writes a packet to the transport.\n *\n * @param {Object} packet object\n * @param {Object} opts\n * @api private\n */\n\nClient.prototype.packet = function (packet, opts) {\n  opts = opts || {};\n  var self = this;\n\n  // this writes to the actual connection\n  function writeToEngine(encodedPackets) {\n    if (opts.volatile && !self.conn.transport.writable) return;\n    for (var i = 0; i < encodedPackets.length; i++) {\n      self.conn.write(encodedPackets[i], {\n        compress: opts.compress\n      });\n    }\n  }\n  if ('open' == this.conn.readyState) {\n    debug('writing packet %j', packet);\n    if (!opts.preEncoded) {\n      // not broadcasting, need to encode\n      this.encoder.encode(packet, writeToEngine); // encode, then write results to engine\n    } else {\n      // a broadcast pre-encodes a packet\n      writeToEngine(packet);\n    }\n  } else {\n    debug('ignoring packet write %j', packet);\n  }\n};\n\n/**\n * Called with incoming transport data.\n *\n * @api private\n */\n\nClient.prototype.ondata = function (data) {\n  // try/catch is needed for protocol violations (GH-1880)\n  try {\n    this.decoder.add(data);\n  } catch (e) {\n    this.onerror(e);\n  }\n};\n\n/**\n * Called when parser fully decodes a packet.\n *\n * @api private\n */\n\nClient.prototype.ondecoded = function (packet) {\n  if (parser.CONNECT == packet.type) {\n    this.connect(url.parse(packet.nsp).pathname, url.parse(packet.nsp, true).query);\n  } else {\n    var socket = this.nsps[packet.nsp];\n    if (socket) {\n      process.nextTick(function () {\n        socket.onpacket(packet);\n      });\n    } else {\n      debug('no socket for namespace %s', packet.nsp);\n    }\n  }\n};\n\n/**\n * Handles an error.\n *\n * @param {Object} err object\n * @api private\n */\n\nClient.prototype.onerror = function (err) {\n  for (var id in this.sockets) {\n    if (this.sockets.hasOwnProperty(id)) {\n      this.sockets[id].onerror(err);\n    }\n  }\n  this.conn.close();\n};\n\n/**\n * Called upon transport close.\n *\n * @param {String} reason\n * @api private\n */\n\nClient.prototype.onclose = function (reason) {\n  debug('client close with reason %s', reason);\n\n  // ignore a potential subsequent `close` event\n  this.destroy();\n\n  // `nsps` and `sockets` are cleaned up seamlessly\n  for (var id in this.sockets) {\n    if (this.sockets.hasOwnProperty(id)) {\n      this.sockets[id].onclose(reason);\n    }\n  }\n  this.sockets = {};\n  this.decoder.destroy(); // clean up decoder\n};\n\n/**\n * Cleans up event listeners.\n *\n * @api private\n */\n\nClient.prototype.destroy = function () {\n  this.conn.removeListener('data', this.ondata);\n  this.conn.removeListener('error', this.onerror);\n  this.conn.removeListener('close', this.onclose);\n  this.decoder.removeListener('decoded', this.ondecoded);\n};","map":{"version":3,"names":["parser","require","debug","url","module","exports","Client","server","conn","encoder","decoder","Decoder","id","request","setup","sockets","nsps","connectBuffer","prototype","onclose","bind","ondata","onerror","ondecoded","on","connect","name","query","doConnect","checkNamespace","dynamicNsp","packet","type","ERROR","nsp","data","of","push","self","socket","add","length","forEach","disconnect","hasOwnProperty","close","remove","readyState","opts","writeToEngine","encodedPackets","volatile","transport","writable","i","write","compress","preEncoded","encode","e","CONNECT","parse","pathname","process","nextTick","onpacket","err","reason","destroy","removeListener"],"sources":["/home/user/Рабочий стол/pizza/project/node_modules/socket.io/lib/client.js"],"sourcesContent":["\n/**\n * Module dependencies.\n */\n\nvar parser = require('socket.io-parser');\nvar debug = require('debug')('socket.io:client');\nvar url = require('url');\n\n/**\n * Module exports.\n */\n\nmodule.exports = Client;\n\n/**\n * Client constructor.\n *\n * @param {Server} server instance\n * @param {Socket} conn\n * @api private\n */\n\nfunction Client(server, conn){\n  this.server = server;\n  this.conn = conn;\n  this.encoder = server.encoder;\n  this.decoder = new server.parser.Decoder();\n  this.id = conn.id;\n  this.request = conn.request;\n  this.setup();\n  this.sockets = {};\n  this.nsps = {};\n  this.connectBuffer = [];\n}\n\n/**\n * Sets up event listeners.\n *\n * @api private\n */\n\nClient.prototype.setup = function(){\n  this.onclose = this.onclose.bind(this);\n  this.ondata = this.ondata.bind(this);\n  this.onerror = this.onerror.bind(this);\n  this.ondecoded = this.ondecoded.bind(this);\n\n  this.decoder.on('decoded', this.ondecoded);\n  this.conn.on('data', this.ondata);\n  this.conn.on('error', this.onerror);\n  this.conn.on('close', this.onclose);\n};\n\n/**\n * Connects a client to a namespace.\n *\n * @param {String} name namespace\n * @param {Object} query the query parameters\n * @api private\n */\n\nClient.prototype.connect = function(name, query){\n  if (this.server.nsps[name]) {\n    debug('connecting to namespace %s', name);\n    return this.doConnect(name, query);\n  }\n\n  this.server.checkNamespace(name, query, (dynamicNsp) => {\n    if (dynamicNsp) {\n      debug('dynamic namespace %s was created', dynamicNsp.name);\n      this.doConnect(name, query);\n    } else {\n      debug('creation of namespace %s was denied', name);\n      this.packet({ type: parser.ERROR, nsp: name, data: 'Invalid namespace' });\n    }\n  });\n};\n\n/**\n * Connects a client to a namespace.\n *\n * @param {String} name namespace\n * @param {String} query the query parameters\n * @api private\n */\n\nClient.prototype.doConnect = function(name, query){\n  var nsp = this.server.of(name);\n\n  if ('/' != name && !this.nsps['/']) {\n    this.connectBuffer.push(name);\n    return;\n  }\n\n  var self = this;\n  var socket = nsp.add(this, query, function(){\n    self.sockets[socket.id] = socket;\n    self.nsps[nsp.name] = socket;\n\n    if ('/' == nsp.name && self.connectBuffer.length > 0) {\n      self.connectBuffer.forEach(self.connect, self);\n      self.connectBuffer = [];\n    }\n  });\n};\n\n/**\n * Disconnects from all namespaces and closes transport.\n *\n * @api private\n */\n\nClient.prototype.disconnect = function(){\n  for (var id in this.sockets) {\n    if (this.sockets.hasOwnProperty(id)) {\n      this.sockets[id].disconnect();\n    }\n  }\n  this.sockets = {};\n  this.close();\n};\n\n/**\n * Removes a socket. Called by each `Socket`.\n *\n * @api private\n */\n\nClient.prototype.remove = function(socket){\n  if (this.sockets.hasOwnProperty(socket.id)) {\n    var nsp = this.sockets[socket.id].nsp.name;\n    delete this.sockets[socket.id];\n    delete this.nsps[nsp];\n  } else {\n    debug('ignoring remove for %s', socket.id);\n  }\n};\n\n/**\n * Closes the underlying connection.\n *\n * @api private\n */\n\nClient.prototype.close = function(){\n  if ('open' == this.conn.readyState) {\n    debug('forcing transport close');\n    this.conn.close();\n    this.onclose('forced server close');\n  }\n};\n\n/**\n * Writes a packet to the transport.\n *\n * @param {Object} packet object\n * @param {Object} opts\n * @api private\n */\n\nClient.prototype.packet = function(packet, opts){\n  opts = opts || {};\n  var self = this;\n\n  // this writes to the actual connection\n  function writeToEngine(encodedPackets) {\n    if (opts.volatile && !self.conn.transport.writable) return;\n    for (var i = 0; i < encodedPackets.length; i++) {\n      self.conn.write(encodedPackets[i], { compress: opts.compress });\n    }\n  }\n\n  if ('open' == this.conn.readyState) {\n    debug('writing packet %j', packet);\n    if (!opts.preEncoded) { // not broadcasting, need to encode\n      this.encoder.encode(packet, writeToEngine); // encode, then write results to engine\n    } else { // a broadcast pre-encodes a packet\n      writeToEngine(packet);\n    }\n  } else {\n    debug('ignoring packet write %j', packet);\n  }\n};\n\n/**\n * Called with incoming transport data.\n *\n * @api private\n */\n\nClient.prototype.ondata = function(data){\n  // try/catch is needed for protocol violations (GH-1880)\n  try {\n    this.decoder.add(data);\n  } catch(e) {\n    this.onerror(e);\n  }\n};\n\n/**\n * Called when parser fully decodes a packet.\n *\n * @api private\n */\n\nClient.prototype.ondecoded = function(packet) {\n  if (parser.CONNECT == packet.type) {\n    this.connect(url.parse(packet.nsp).pathname, url.parse(packet.nsp, true).query);\n  } else {\n    var socket = this.nsps[packet.nsp];\n    if (socket) {\n      process.nextTick(function() {\n        socket.onpacket(packet);\n      });\n    } else {\n      debug('no socket for namespace %s', packet.nsp);\n    }\n  }\n};\n\n/**\n * Handles an error.\n *\n * @param {Object} err object\n * @api private\n */\n\nClient.prototype.onerror = function(err){\n  for (var id in this.sockets) {\n    if (this.sockets.hasOwnProperty(id)) {\n      this.sockets[id].onerror(err);\n    }\n  }\n  this.conn.close();\n};\n\n/**\n * Called upon transport close.\n *\n * @param {String} reason\n * @api private\n */\n\nClient.prototype.onclose = function(reason){\n  debug('client close with reason %s', reason);\n\n  // ignore a potential subsequent `close` event\n  this.destroy();\n\n  // `nsps` and `sockets` are cleaned up seamlessly\n  for (var id in this.sockets) {\n    if (this.sockets.hasOwnProperty(id)) {\n      this.sockets[id].onclose(reason);\n    }\n  }\n  this.sockets = {};\n\n  this.decoder.destroy(); // clean up decoder\n};\n\n/**\n * Cleans up event listeners.\n *\n * @api private\n */\n\nClient.prototype.destroy = function(){\n  this.conn.removeListener('data', this.ondata);\n  this.conn.removeListener('error', this.onerror);\n  this.conn.removeListener('close', this.onclose);\n  this.decoder.removeListener('decoded', this.ondecoded);\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}