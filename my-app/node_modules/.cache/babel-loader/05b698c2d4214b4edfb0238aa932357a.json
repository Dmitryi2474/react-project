{"ast":null,"code":"var http = require('http'),\n  https = require('https'),\n  web_o = require('./web-outgoing'),\n  common = require('../common');\nweb_o = Object.keys(web_o).map(function (pass) {\n  return web_o[pass];\n});\n\n/*!\n * Array of passes.\n *\n * A `pass` is just a function that is executed on `req, res, options`\n * so that you can easily add new checks while still keeping the base\n * flexible.\n */\n\nmodule.exports = {\n  /**\n   * Sets `content-length` to '0' if request is of DELETE type.\n   *\n   * @param {ClientRequest} Req Request object\n   * @param {IncomingMessage} Res Response object\n   * @param {Object} Options Config object passed to the proxy\n   *\n   * @api private\n   */\n\n  deleteLength: function deleteLength(req, res, options) {\n    if ((req.method === 'DELETE' || req.method === 'OPTIONS') && !req.headers['content-length']) {\n      req.headers['content-length'] = '0';\n      delete req.headers['transfer-encoding'];\n    }\n  },\n  /**\n   * Sets timeout in request socket if it was specified in options.\n   *\n   * @param {ClientRequest} Req Request object\n   * @param {IncomingMessage} Res Response object\n   * @param {Object} Options Config object passed to the proxy\n   *\n   * @api private\n   */\n\n  timeout: function timeout(req, res, options) {\n    if (options.timeout) {\n      req.socket.setTimeout(options.timeout);\n    }\n  },\n  /**\n   * Sets `x-forwarded-*` headers if specified in config.\n   *\n   * @param {ClientRequest} Req Request object\n   * @param {IncomingMessage} Res Response object\n   * @param {Object} Options Config object passed to the proxy\n   *\n   * @api private\n   */\n\n  XHeaders: function XHeaders(req, res, options) {\n    if (!options.xfwd) return;\n    var encrypted = req.isSpdy || common.hasEncryptedConnection(req);\n    var values = {\n      for: req.connection.remoteAddress || req.socket.remoteAddress,\n      port: common.getPort(req),\n      proto: encrypted ? 'https' : 'http'\n    };\n    ['for', 'port', 'proto'].forEach(function (header) {\n      req.headers['x-forwarded-' + header] = (req.headers['x-forwarded-' + header] || '') + (req.headers['x-forwarded-' + header] ? ',' : '') + values[header];\n    });\n    req.headers['x-forwarded-host'] = req.headers['host'] || '';\n  },\n  /**\n   * Does the actual proxying. If `forward` is enabled fires up\n   * a ForwardStream, same happens for ProxyStream. The request\n   * just dies otherwise.\n   *\n   * @param {ClientRequest} Req Request object\n   * @param {IncomingMessage} Res Response object\n   * @param {Object} Options Config object passed to the proxy\n   *\n   * @api private\n   */\n\n  stream: function stream(req, res, options, _, server, clb) {\n    // And we begin!\n    server.emit('start', req, res, options.target);\n    if (options.forward) {\n      // If forward enable, so just pipe the request\n      var forwardReq = (options.forward.protocol === 'https:' ? https : http).request(common.setupOutgoing(options.ssl || {}, options, req, 'forward'));\n      (options.buffer || req).pipe(forwardReq);\n      if (!options.target) {\n        return res.end();\n      }\n    }\n\n    // Request initalization\n    var proxyReq = (options.target.protocol === 'https:' ? https : http).request(common.setupOutgoing(options.ssl || {}, options, req));\n\n    // Enable developers to modify the proxyReq before headers are sent\n    proxyReq.on('socket', function (socket) {\n      if (server) {\n        server.emit('proxyReq', proxyReq, req, res, options);\n      }\n    });\n\n    // allow outgoing socket to timeout so that we could\n    // show an error page at the initial request\n    if (options.proxyTimeout) {\n      proxyReq.setTimeout(options.proxyTimeout, function () {\n        proxyReq.abort();\n      });\n    }\n\n    // Ensure we abort proxy if request is aborted\n    req.on('aborted', function () {\n      proxyReq.abort();\n    });\n\n    // Handle errors on incoming request as well as it makes sense to\n    req.on('error', proxyError);\n\n    // Error Handler\n    proxyReq.on('error', proxyError);\n    function proxyError(err) {\n      if (req.socket.destroyed && err.code === 'ECONNRESET') {\n        server.emit('econnreset', err, req, res, options.target);\n        return proxyReq.abort();\n      }\n      if (clb) {\n        clb(err, req, res, options.target);\n      } else {\n        server.emit('error', err, req, res, options.target);\n      }\n    }\n    (options.buffer || req).pipe(proxyReq);\n    proxyReq.on('response', function (proxyRes) {\n      if (server) {\n        server.emit('proxyRes', proxyRes, req, res);\n      }\n      for (var i = 0; i < web_o.length; i++) {\n        if (web_o[i](req, res, proxyRes, options)) {\n          break;\n        }\n      }\n\n      // Allow us to listen when the proxy has completed\n      proxyRes.on('end', function () {\n        server.emit('end', req, res, proxyRes);\n      });\n      proxyRes.pipe(res);\n    });\n\n    //proxyReq.end();\n  }\n};","map":{"version":3,"names":["http","require","https","web_o","common","Object","keys","map","pass","module","exports","deleteLength","req","res","options","method","headers","timeout","socket","setTimeout","XHeaders","xfwd","encrypted","isSpdy","hasEncryptedConnection","values","for","connection","remoteAddress","port","getPort","proto","forEach","header","stream","_","server","clb","emit","target","forward","forwardReq","protocol","request","setupOutgoing","ssl","buffer","pipe","end","proxyReq","on","proxyTimeout","abort","proxyError","err","destroyed","code","proxyRes","i","length"],"sources":["/home/user/Рабочий стол/pizza/project/node_modules/http-proxy/lib/http-proxy/passes/web-incoming.js"],"sourcesContent":["var http   = require('http'),\n    https  = require('https'),\n    web_o  = require('./web-outgoing'),\n    common = require('../common');\n\nweb_o = Object.keys(web_o).map(function(pass) {\n  return web_o[pass];\n});\n\n/*!\n * Array of passes.\n *\n * A `pass` is just a function that is executed on `req, res, options`\n * so that you can easily add new checks while still keeping the base\n * flexible.\n */\n\n\nmodule.exports = {\n\n  /**\n   * Sets `content-length` to '0' if request is of DELETE type.\n   *\n   * @param {ClientRequest} Req Request object\n   * @param {IncomingMessage} Res Response object\n   * @param {Object} Options Config object passed to the proxy\n   *\n   * @api private\n   */\n\n  deleteLength: function deleteLength(req, res, options) {\n    if((req.method === 'DELETE' || req.method === 'OPTIONS')\n       && !req.headers['content-length']) {\n      req.headers['content-length'] = '0';\n      delete req.headers['transfer-encoding'];\n    }\n  },\n\n  /**\n   * Sets timeout in request socket if it was specified in options.\n   *\n   * @param {ClientRequest} Req Request object\n   * @param {IncomingMessage} Res Response object\n   * @param {Object} Options Config object passed to the proxy\n   *\n   * @api private\n   */\n\n  timeout: function timeout(req, res, options) {\n    if(options.timeout) {\n      req.socket.setTimeout(options.timeout);\n    }\n  },\n\n  /**\n   * Sets `x-forwarded-*` headers if specified in config.\n   *\n   * @param {ClientRequest} Req Request object\n   * @param {IncomingMessage} Res Response object\n   * @param {Object} Options Config object passed to the proxy\n   *\n   * @api private\n   */\n\n  XHeaders: function XHeaders(req, res, options) {\n    if(!options.xfwd) return;\n\n    var encrypted = req.isSpdy || common.hasEncryptedConnection(req);\n    var values = {\n      for  : req.connection.remoteAddress || req.socket.remoteAddress,\n      port : common.getPort(req),\n      proto: encrypted ? 'https' : 'http'\n    };\n\n    ['for', 'port', 'proto'].forEach(function(header) {\n      req.headers['x-forwarded-' + header] =\n        (req.headers['x-forwarded-' + header] || '') +\n        (req.headers['x-forwarded-' + header] ? ',' : '') +\n        values[header];\n    });\n\n    req.headers['x-forwarded-host'] = req.headers['host'] || '';\n  },\n\n  /**\n   * Does the actual proxying. If `forward` is enabled fires up\n   * a ForwardStream, same happens for ProxyStream. The request\n   * just dies otherwise.\n   *\n   * @param {ClientRequest} Req Request object\n   * @param {IncomingMessage} Res Response object\n   * @param {Object} Options Config object passed to the proxy\n   *\n   * @api private\n   */\n\n  stream: function stream(req, res, options, _, server, clb) {\n\n    // And we begin!\n    server.emit('start', req, res, options.target)\n    if(options.forward) {\n      // If forward enable, so just pipe the request\n      var forwardReq = (options.forward.protocol === 'https:' ? https : http).request(\n        common.setupOutgoing(options.ssl || {}, options, req, 'forward')\n      );\n      (options.buffer || req).pipe(forwardReq);\n      if(!options.target) { return res.end(); }\n    }\n\n    // Request initalization\n    var proxyReq = (options.target.protocol === 'https:' ? https : http).request(\n      common.setupOutgoing(options.ssl || {}, options, req)\n    );\n\n    // Enable developers to modify the proxyReq before headers are sent\n    proxyReq.on('socket', function(socket) {\n      if(server) { server.emit('proxyReq', proxyReq, req, res, options); }\n    });\n\n    // allow outgoing socket to timeout so that we could\n    // show an error page at the initial request\n    if(options.proxyTimeout) {\n      proxyReq.setTimeout(options.proxyTimeout, function() {\n         proxyReq.abort();\n      });\n    }\n\n    // Ensure we abort proxy if request is aborted\n    req.on('aborted', function () {\n      proxyReq.abort();\n    });\n\n    // Handle errors on incoming request as well as it makes sense to\n    req.on('error', proxyError);\n\n    // Error Handler\n    proxyReq.on('error', proxyError);\n\n    function proxyError (err){\n      if (req.socket.destroyed && err.code === 'ECONNRESET') {\n        server.emit('econnreset', err, req, res, options.target);\n        return proxyReq.abort();\n      }\n\n      if (clb) {\n        clb(err, req, res, options.target);\n      } else {\n        server.emit('error', err, req, res, options.target);\n      }\n    }\n\n    (options.buffer || req).pipe(proxyReq);\n\n    proxyReq.on('response', function(proxyRes) {\n      if(server) { server.emit('proxyRes', proxyRes, req, res); }\n      for(var i=0; i < web_o.length; i++) {\n        if(web_o[i](req, res, proxyRes, options)) { break; }\n      }\n\n      // Allow us to listen when the proxy has completed\n      proxyRes.on('end', function () {\n        server.emit('end', req, res, proxyRes);\n      });\n\n      proxyRes.pipe(res);\n    });\n\n    //proxyReq.end();\n  }\n\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}