{"ast":null,"code":"'use strict';\n\nfunction preserveCamelCase(str) {\n  var isLastCharLower = false;\n  for (var i = 0; i < str.length; i++) {\n    var c = str.charAt(i);\n    if (isLastCharLower && /[a-zA-Z]/.test(c) && c.toUpperCase() === c) {\n      str = str.substr(0, i) + '-' + str.substr(i);\n      isLastCharLower = false;\n      i++;\n    } else {\n      isLastCharLower = c.toLowerCase() === c;\n    }\n  }\n  return str;\n}\nmodule.exports = function () {\n  var str = [].map.call(arguments, function (str) {\n    return str.trim();\n  }).filter(function (str) {\n    return str.length;\n  }).join('-');\n  if (!str.length) {\n    return '';\n  }\n  if (str.length === 1) {\n    return str.toLowerCase();\n  }\n  if (!/[_.\\- ]+/.test(str)) {\n    if (str === str.toUpperCase()) {\n      return str.toLowerCase();\n    }\n    if (str[0] !== str[0].toLowerCase()) {\n      return str[0].toLowerCase() + str.slice(1);\n    }\n    return str;\n  }\n  str = preserveCamelCase(str);\n  return str.replace(/^[_.\\- ]+/, '').toLowerCase().replace(/[_.\\- ]+(\\w|$)/g, function (m, p1) {\n    return p1.toUpperCase();\n  });\n};","map":{"version":3,"names":["preserveCamelCase","str","isLastCharLower","i","length","c","charAt","test","toUpperCase","substr","toLowerCase","module","exports","map","call","arguments","trim","filter","join","slice","replace","m","p1"],"sources":["/home/user/Рабочий стол/pizza/project/node_modules/camelcase/index.js"],"sourcesContent":["'use strict';\n\nfunction preserveCamelCase(str) {\n\tvar isLastCharLower = false;\n\n\tfor (var i = 0; i < str.length; i++) {\n\t\tvar c = str.charAt(i);\n\n\t\tif (isLastCharLower && (/[a-zA-Z]/).test(c) && c.toUpperCase() === c) {\n\t\t\tstr = str.substr(0, i) + '-' + str.substr(i);\n\t\t\tisLastCharLower = false;\n\t\t\ti++;\n\t\t} else {\n\t\t\tisLastCharLower = (c.toLowerCase() === c);\n\t\t}\n\t}\n\n\treturn str;\n}\n\nmodule.exports = function () {\n\tvar str = [].map.call(arguments, function (str) {\n\t\treturn str.trim();\n\t}).filter(function (str) {\n\t\treturn str.length;\n\t}).join('-');\n\n\tif (!str.length) {\n\t\treturn '';\n\t}\n\n\tif (str.length === 1) {\n\t\treturn str.toLowerCase();\n\t}\n\n\tif (!(/[_.\\- ]+/).test(str)) {\n\t\tif (str === str.toUpperCase()) {\n\t\t\treturn str.toLowerCase();\n\t\t}\n\n\t\tif (str[0] !== str[0].toLowerCase()) {\n\t\t\treturn str[0].toLowerCase() + str.slice(1);\n\t\t}\n\n\t\treturn str;\n\t}\n\n\tstr = preserveCamelCase(str);\n\n\treturn str\n\t.replace(/^[_.\\- ]+/, '')\n\t.toLowerCase()\n\t.replace(/[_.\\- ]+(\\w|$)/g, function (m, p1) {\n\t\treturn p1.toUpperCase();\n\t});\n};\n"],"mappings":"AAAA,YAAY;;AAEZ,SAASA,iBAAiB,CAACC,GAAG,EAAE;EAC/B,IAAIC,eAAe,GAAG,KAAK;EAE3B,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,GAAG,CAACG,MAAM,EAAED,CAAC,EAAE,EAAE;IACpC,IAAIE,CAAC,GAAGJ,GAAG,CAACK,MAAM,CAACH,CAAC,CAAC;IAErB,IAAID,eAAe,IAAK,UAAU,CAAEK,IAAI,CAACF,CAAC,CAAC,IAAIA,CAAC,CAACG,WAAW,EAAE,KAAKH,CAAC,EAAE;MACrEJ,GAAG,GAAGA,GAAG,CAACQ,MAAM,CAAC,CAAC,EAAEN,CAAC,CAAC,GAAG,GAAG,GAAGF,GAAG,CAACQ,MAAM,CAACN,CAAC,CAAC;MAC5CD,eAAe,GAAG,KAAK;MACvBC,CAAC,EAAE;IACJ,CAAC,MAAM;MACND,eAAe,GAAIG,CAAC,CAACK,WAAW,EAAE,KAAKL,CAAE;IAC1C;EACD;EAEA,OAAOJ,GAAG;AACX;AAEAU,MAAM,CAACC,OAAO,GAAG,YAAY;EAC5B,IAAIX,GAAG,GAAG,EAAE,CAACY,GAAG,CAACC,IAAI,CAACC,SAAS,EAAE,UAAUd,GAAG,EAAE;IAC/C,OAAOA,GAAG,CAACe,IAAI,EAAE;EAClB,CAAC,CAAC,CAACC,MAAM,CAAC,UAAUhB,GAAG,EAAE;IACxB,OAAOA,GAAG,CAACG,MAAM;EAClB,CAAC,CAAC,CAACc,IAAI,CAAC,GAAG,CAAC;EAEZ,IAAI,CAACjB,GAAG,CAACG,MAAM,EAAE;IAChB,OAAO,EAAE;EACV;EAEA,IAAIH,GAAG,CAACG,MAAM,KAAK,CAAC,EAAE;IACrB,OAAOH,GAAG,CAACS,WAAW,EAAE;EACzB;EAEA,IAAI,CAAE,UAAU,CAAEH,IAAI,CAACN,GAAG,CAAC,EAAE;IAC5B,IAAIA,GAAG,KAAKA,GAAG,CAACO,WAAW,EAAE,EAAE;MAC9B,OAAOP,GAAG,CAACS,WAAW,EAAE;IACzB;IAEA,IAAIT,GAAG,CAAC,CAAC,CAAC,KAAKA,GAAG,CAAC,CAAC,CAAC,CAACS,WAAW,EAAE,EAAE;MACpC,OAAOT,GAAG,CAAC,CAAC,CAAC,CAACS,WAAW,EAAE,GAAGT,GAAG,CAACkB,KAAK,CAAC,CAAC,CAAC;IAC3C;IAEA,OAAOlB,GAAG;EACX;EAEAA,GAAG,GAAGD,iBAAiB,CAACC,GAAG,CAAC;EAE5B,OAAOA,GAAG,CACTmB,OAAO,CAAC,WAAW,EAAE,EAAE,CAAC,CACxBV,WAAW,EAAE,CACbU,OAAO,CAAC,iBAAiB,EAAE,UAAUC,CAAC,EAAEC,EAAE,EAAE;IAC5C,OAAOA,EAAE,CAACd,WAAW,EAAE;EACxB,CAAC,CAAC;AACH,CAAC"},"metadata":{},"sourceType":"script"}