{"ast":null,"code":"/*\nCopyright spdx-correct.js contributors\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\nvar parse = require('spdx-expression-parse');\nvar spdxLicenseIds = require('spdx-license-ids');\nfunction valid(string) {\n  try {\n    parse(string);\n    return true;\n  } catch (error) {\n    return false;\n  }\n}\n\n// Common transpositions of license identifier acronyms\nvar transpositions = [['APGL', 'AGPL'], ['Gpl', 'GPL'], ['GLP', 'GPL'], ['APL', 'Apache'], ['ISD', 'ISC'], ['GLP', 'GPL'], ['IST', 'ISC'], ['Claude', 'Clause'], [' or later', '+'], [' International', ''], ['GNU', 'GPL'], ['GUN', 'GPL'], ['+', ''], ['GNU GPL', 'GPL'], ['GNU/GPL', 'GPL'], ['GNU GLP', 'GPL'], ['GNU General Public License', 'GPL'], ['Gnu public license', 'GPL'], ['GNU Public License', 'GPL'], ['GNU GENERAL PUBLIC LICENSE', 'GPL'], ['MTI', 'MIT'], ['Mozilla Public License', 'MPL'], ['WTH', 'WTF'], ['-License', '']];\nvar TRANSPOSED = 0;\nvar CORRECT = 1;\n\n// Simple corrections to nearly valid identifiers.\nvar transforms = [\n// e.g. 'mit'\nfunction (argument) {\n  return argument.toUpperCase();\n},\n// e.g. 'MIT '\nfunction (argument) {\n  return argument.trim();\n},\n// e.g. 'M.I.T.'\nfunction (argument) {\n  return argument.replace(/\\./g, '');\n},\n// e.g. 'Apache- 2.0'\nfunction (argument) {\n  return argument.replace(/\\s+/g, '');\n},\n// e.g. 'CC BY 4.0''\nfunction (argument) {\n  return argument.replace(/\\s+/g, '-');\n},\n// e.g. 'LGPLv2.1'\nfunction (argument) {\n  return argument.replace('v', '-');\n},\n// e.g. 'Apache 2.0'\nfunction (argument) {\n  return argument.replace(/,?\\s*(\\d)/, '-$1');\n},\n// e.g. 'GPL 2'\nfunction (argument) {\n  return argument.replace(/,?\\s*(\\d)/, '-$1.0');\n},\n// e.g. 'Apache Version 2.0'\nfunction (argument) {\n  return argument.replace(/,?\\s*(V\\.|v\\.|V|v|Version|version)\\s*(\\d)/, '-$2');\n},\n// e.g. 'Apache Version 2'\nfunction (argument) {\n  return argument.replace(/,?\\s*(V\\.|v\\.|V|v|Version|version)\\s*(\\d)/, '-$2.0');\n},\n// e.g. 'ZLIB'\nfunction (argument) {\n  return argument[0].toUpperCase() + argument.slice(1);\n},\n// e.g. 'MPL/2.0'\nfunction (argument) {\n  return argument.replace('/', '-');\n},\n// e.g. 'Apache 2'\nfunction (argument) {\n  return argument.replace(/\\s*V\\s*(\\d)/, '-$1').replace(/(\\d)$/, '$1.0');\n},\n// e.g. 'GPL-2.0', 'GPL-3.0'\nfunction (argument) {\n  if (argument.indexOf('3.0') !== -1) {\n    return argument + '-or-later';\n  } else {\n    return argument + '-only';\n  }\n},\n// e.g. 'GPL-2.0-'\nfunction (argument) {\n  return argument + 'only';\n},\n// e.g. 'GPL2'\nfunction (argument) {\n  return argument.replace(/(\\d)$/, '-$1.0');\n},\n// e.g. 'BSD 3'\nfunction (argument) {\n  return argument.replace(/(-| )?(\\d)$/, '-$2-Clause');\n},\n// e.g. 'BSD clause 3'\nfunction (argument) {\n  return argument.replace(/(-| )clause(-| )(\\d)/, '-$3-Clause');\n},\n// e.g. 'BY-NC-4.0'\nfunction (argument) {\n  return 'CC-' + argument;\n},\n// e.g. 'BY-NC'\nfunction (argument) {\n  return 'CC-' + argument + '-4.0';\n},\n// e.g. 'Attribution-NonCommercial'\nfunction (argument) {\n  return argument.replace('Attribution', 'BY').replace('NonCommercial', 'NC').replace('NoDerivatives', 'ND').replace(/ (\\d)/, '-$1').replace(/ ?International/, '');\n},\n// e.g. 'Attribution-NonCommercial'\nfunction (argument) {\n  return 'CC-' + argument.replace('Attribution', 'BY').replace('NonCommercial', 'NC').replace('NoDerivatives', 'ND').replace(/ (\\d)/, '-$1').replace(/ ?International/, '') + '-4.0';\n}];\nvar licensesWithVersions = spdxLicenseIds.map(function (id) {\n  var match = /^(.*)-\\d+\\.\\d+$/.exec(id);\n  return match ? [match[0], match[1]] : [id, null];\n}).reduce(function (objectMap, item) {\n  var key = item[1];\n  objectMap[key] = objectMap[key] || [];\n  objectMap[key].push(item[0]);\n  return objectMap;\n}, {});\nvar licensesWithOneVersion = Object.keys(licensesWithVersions).map(function makeEntries(key) {\n  return [key, licensesWithVersions[key]];\n}).filter(function identifySoleVersions(item) {\n  return (\n    // Licenses has just one valid version suffix.\n    item[1].length === 1 && item[0] !== null &&\n    // APL will be considered Apache, rather than APL-1.0\n    item[0] !== 'APL'\n  );\n}).map(function createLastResorts(item) {\n  return [item[0], item[1][0]];\n});\nlicensesWithVersions = undefined;\n\n// If all else fails, guess that strings containing certain substrings\n// meant to identify certain licenses.\nvar lastResorts = [['UNLI', 'Unlicense'], ['WTF', 'WTFPL'], ['2 CLAUSE', 'BSD-2-Clause'], ['2-CLAUSE', 'BSD-2-Clause'], ['3 CLAUSE', 'BSD-3-Clause'], ['3-CLAUSE', 'BSD-3-Clause'], ['AFFERO', 'AGPL-3.0-or-later'], ['AGPL', 'AGPL-3.0-or-later'], ['APACHE', 'Apache-2.0'], ['ARTISTIC', 'Artistic-2.0'], ['Affero', 'AGPL-3.0-or-later'], ['BEER', 'Beerware'], ['BOOST', 'BSL-1.0'], ['BSD', 'BSD-2-Clause'], ['CDDL', 'CDDL-1.1'], ['ECLIPSE', 'EPL-1.0'], ['FUCK', 'WTFPL'], ['GNU', 'GPL-3.0-or-later'], ['LGPL', 'LGPL-3.0-or-later'], ['GPLV1', 'GPL-1.0-only'], ['GPL-1', 'GPL-1.0-only'], ['GPLV2', 'GPL-2.0-only'], ['GPL-2', 'GPL-2.0-only'], ['GPL', 'GPL-3.0-or-later'], ['MIT +NO-FALSE-ATTRIBS', 'MITNFA'], ['MIT', 'MIT'], ['MPL', 'MPL-2.0'], ['X11', 'X11'], ['ZLIB', 'Zlib']].concat(licensesWithOneVersion);\nvar SUBSTRING = 0;\nvar IDENTIFIER = 1;\nvar validTransformation = function (identifier) {\n  for (var i = 0; i < transforms.length; i++) {\n    var transformed = transforms[i](identifier).trim();\n    if (transformed !== identifier && valid(transformed)) {\n      return transformed;\n    }\n  }\n  return null;\n};\nvar validLastResort = function (identifier) {\n  var upperCased = identifier.toUpperCase();\n  for (var i = 0; i < lastResorts.length; i++) {\n    var lastResort = lastResorts[i];\n    if (upperCased.indexOf(lastResort[SUBSTRING]) > -1) {\n      return lastResort[IDENTIFIER];\n    }\n  }\n  return null;\n};\nvar anyCorrection = function (identifier, check) {\n  for (var i = 0; i < transpositions.length; i++) {\n    var transposition = transpositions[i];\n    var transposed = transposition[TRANSPOSED];\n    if (identifier.indexOf(transposed) > -1) {\n      var corrected = identifier.replace(transposed, transposition[CORRECT]);\n      var checked = check(corrected);\n      if (checked !== null) {\n        return checked;\n      }\n    }\n  }\n  return null;\n};\nmodule.exports = function (identifier, options) {\n  options = options || {};\n  var upgrade = options.upgrade === undefined ? true : !!options.upgrade;\n  function postprocess(value) {\n    return upgrade ? upgradeGPLs(value) : value;\n  }\n  var validArugment = typeof identifier === 'string' && identifier.trim().length !== 0;\n  if (!validArugment) {\n    throw Error('Invalid argument. Expected non-empty string.');\n  }\n  identifier = identifier.trim();\n  if (valid(identifier)) {\n    return postprocess(identifier);\n  }\n  var noPlus = identifier.replace(/\\+$/, '').trim();\n  if (valid(noPlus)) {\n    return postprocess(noPlus);\n  }\n  var transformed = validTransformation(identifier);\n  if (transformed !== null) {\n    return postprocess(transformed);\n  }\n  transformed = anyCorrection(identifier, function (argument) {\n    if (valid(argument)) {\n      return argument;\n    }\n    return validTransformation(argument);\n  });\n  if (transformed !== null) {\n    return postprocess(transformed);\n  }\n  transformed = validLastResort(identifier);\n  if (transformed !== null) {\n    return postprocess(transformed);\n  }\n  transformed = anyCorrection(identifier, validLastResort);\n  if (transformed !== null) {\n    return postprocess(transformed);\n  }\n  return null;\n};\nfunction upgradeGPLs(value) {\n  if (['GPL-1.0', 'LGPL-1.0', 'AGPL-1.0', 'GPL-2.0', 'LGPL-2.0', 'AGPL-2.0', 'LGPL-2.1'].indexOf(value) !== -1) {\n    return value + '-only';\n  } else if (['GPL-1.0+', 'GPL-2.0+', 'GPL-3.0+', 'LGPL-2.0+', 'LGPL-2.1+', 'LGPL-3.0+', 'AGPL-1.0+', 'AGPL-3.0+'].indexOf(value) !== -1) {\n    return value.replace(/\\+$/, '-or-later');\n  } else if (['GPL-3.0', 'LGPL-3.0', 'AGPL-3.0'].indexOf(value) !== -1) {\n    return value + '-or-later';\n  } else {\n    return value;\n  }\n}","map":{"version":3,"names":["parse","require","spdxLicenseIds","valid","string","error","transpositions","TRANSPOSED","CORRECT","transforms","argument","toUpperCase","trim","replace","slice","indexOf","licensesWithVersions","map","id","match","exec","reduce","objectMap","item","key","push","licensesWithOneVersion","Object","keys","makeEntries","filter","identifySoleVersions","length","createLastResorts","undefined","lastResorts","concat","SUBSTRING","IDENTIFIER","validTransformation","identifier","i","transformed","validLastResort","upperCased","lastResort","anyCorrection","check","transposition","transposed","corrected","checked","module","exports","options","upgrade","postprocess","value","upgradeGPLs","validArugment","Error","noPlus"],"sources":["/home/user/Рабочий стол/pizza/project/node_modules/spdx-correct/index.js"],"sourcesContent":["/*\nCopyright spdx-correct.js contributors\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\nvar parse = require('spdx-expression-parse')\nvar spdxLicenseIds = require('spdx-license-ids')\n\nfunction valid (string) {\n  try {\n    parse(string)\n    return true\n  } catch (error) {\n    return false\n  }\n}\n\n// Common transpositions of license identifier acronyms\nvar transpositions = [\n  ['APGL', 'AGPL'],\n  ['Gpl', 'GPL'],\n  ['GLP', 'GPL'],\n  ['APL', 'Apache'],\n  ['ISD', 'ISC'],\n  ['GLP', 'GPL'],\n  ['IST', 'ISC'],\n  ['Claude', 'Clause'],\n  [' or later', '+'],\n  [' International', ''],\n  ['GNU', 'GPL'],\n  ['GUN', 'GPL'],\n  ['+', ''],\n  ['GNU GPL', 'GPL'],\n  ['GNU/GPL', 'GPL'],\n  ['GNU GLP', 'GPL'],\n  ['GNU General Public License', 'GPL'],\n  ['Gnu public license', 'GPL'],\n  ['GNU Public License', 'GPL'],\n  ['GNU GENERAL PUBLIC LICENSE', 'GPL'],\n  ['MTI', 'MIT'],\n  ['Mozilla Public License', 'MPL'],\n  ['WTH', 'WTF'],\n  ['-License', '']\n]\n\nvar TRANSPOSED = 0\nvar CORRECT = 1\n\n// Simple corrections to nearly valid identifiers.\nvar transforms = [\n  // e.g. 'mit'\n  function (argument) {\n    return argument.toUpperCase()\n  },\n  // e.g. 'MIT '\n  function (argument) {\n    return argument.trim()\n  },\n  // e.g. 'M.I.T.'\n  function (argument) {\n    return argument.replace(/\\./g, '')\n  },\n  // e.g. 'Apache- 2.0'\n  function (argument) {\n    return argument.replace(/\\s+/g, '')\n  },\n  // e.g. 'CC BY 4.0''\n  function (argument) {\n    return argument.replace(/\\s+/g, '-')\n  },\n  // e.g. 'LGPLv2.1'\n  function (argument) {\n    return argument.replace('v', '-')\n  },\n  // e.g. 'Apache 2.0'\n  function (argument) {\n    return argument.replace(/,?\\s*(\\d)/, '-$1')\n  },\n  // e.g. 'GPL 2'\n  function (argument) {\n    return argument.replace(/,?\\s*(\\d)/, '-$1.0')\n  },\n  // e.g. 'Apache Version 2.0'\n  function (argument) {\n    return argument\n      .replace(/,?\\s*(V\\.|v\\.|V|v|Version|version)\\s*(\\d)/, '-$2')\n  },\n  // e.g. 'Apache Version 2'\n  function (argument) {\n    return argument\n      .replace(/,?\\s*(V\\.|v\\.|V|v|Version|version)\\s*(\\d)/, '-$2.0')\n  },\n  // e.g. 'ZLIB'\n  function (argument) {\n    return argument[0].toUpperCase() + argument.slice(1)\n  },\n  // e.g. 'MPL/2.0'\n  function (argument) {\n    return argument.replace('/', '-')\n  },\n  // e.g. 'Apache 2'\n  function (argument) {\n    return argument\n      .replace(/\\s*V\\s*(\\d)/, '-$1')\n      .replace(/(\\d)$/, '$1.0')\n  },\n  // e.g. 'GPL-2.0', 'GPL-3.0'\n  function (argument) {\n    if (argument.indexOf('3.0') !== -1) {\n      return argument + '-or-later'\n    } else {\n      return argument + '-only'\n    }\n  },\n  // e.g. 'GPL-2.0-'\n  function (argument) {\n    return argument + 'only'\n  },\n  // e.g. 'GPL2'\n  function (argument) {\n    return argument.replace(/(\\d)$/, '-$1.0')\n  },\n  // e.g. 'BSD 3'\n  function (argument) {\n    return argument.replace(/(-| )?(\\d)$/, '-$2-Clause')\n  },\n  // e.g. 'BSD clause 3'\n  function (argument) {\n    return argument.replace(/(-| )clause(-| )(\\d)/, '-$3-Clause')\n  },\n  // e.g. 'BY-NC-4.0'\n  function (argument) {\n    return 'CC-' + argument\n  },\n  // e.g. 'BY-NC'\n  function (argument) {\n    return 'CC-' + argument + '-4.0'\n  },\n  // e.g. 'Attribution-NonCommercial'\n  function (argument) {\n    return argument\n      .replace('Attribution', 'BY')\n      .replace('NonCommercial', 'NC')\n      .replace('NoDerivatives', 'ND')\n      .replace(/ (\\d)/, '-$1')\n      .replace(/ ?International/, '')\n  },\n  // e.g. 'Attribution-NonCommercial'\n  function (argument) {\n    return 'CC-' +\n      argument\n        .replace('Attribution', 'BY')\n        .replace('NonCommercial', 'NC')\n        .replace('NoDerivatives', 'ND')\n        .replace(/ (\\d)/, '-$1')\n        .replace(/ ?International/, '') +\n      '-4.0'\n  }\n]\n\nvar licensesWithVersions = spdxLicenseIds\n  .map(function (id) {\n    var match = /^(.*)-\\d+\\.\\d+$/.exec(id)\n    return match\n      ? [match[0], match[1]]\n      : [id, null]\n  })\n  .reduce(function (objectMap, item) {\n    var key = item[1]\n    objectMap[key] = objectMap[key] || []\n    objectMap[key].push(item[0])\n    return objectMap\n  }, {})\n\nvar licensesWithOneVersion = Object.keys(licensesWithVersions)\n  .map(function makeEntries (key) {\n    return [key, licensesWithVersions[key]]\n  })\n  .filter(function identifySoleVersions (item) {\n    return (\n      // Licenses has just one valid version suffix.\n      item[1].length === 1 &&\n      item[0] !== null &&\n      // APL will be considered Apache, rather than APL-1.0\n      item[0] !== 'APL'\n    )\n  })\n  .map(function createLastResorts (item) {\n    return [item[0], item[1][0]]\n  })\n\nlicensesWithVersions = undefined\n\n// If all else fails, guess that strings containing certain substrings\n// meant to identify certain licenses.\nvar lastResorts = [\n  ['UNLI', 'Unlicense'],\n  ['WTF', 'WTFPL'],\n  ['2 CLAUSE', 'BSD-2-Clause'],\n  ['2-CLAUSE', 'BSD-2-Clause'],\n  ['3 CLAUSE', 'BSD-3-Clause'],\n  ['3-CLAUSE', 'BSD-3-Clause'],\n  ['AFFERO', 'AGPL-3.0-or-later'],\n  ['AGPL', 'AGPL-3.0-or-later'],\n  ['APACHE', 'Apache-2.0'],\n  ['ARTISTIC', 'Artistic-2.0'],\n  ['Affero', 'AGPL-3.0-or-later'],\n  ['BEER', 'Beerware'],\n  ['BOOST', 'BSL-1.0'],\n  ['BSD', 'BSD-2-Clause'],\n  ['CDDL', 'CDDL-1.1'],\n  ['ECLIPSE', 'EPL-1.0'],\n  ['FUCK', 'WTFPL'],\n  ['GNU', 'GPL-3.0-or-later'],\n  ['LGPL', 'LGPL-3.0-or-later'],\n  ['GPLV1', 'GPL-1.0-only'],\n  ['GPL-1', 'GPL-1.0-only'],\n  ['GPLV2', 'GPL-2.0-only'],\n  ['GPL-2', 'GPL-2.0-only'],\n  ['GPL', 'GPL-3.0-or-later'],\n  ['MIT +NO-FALSE-ATTRIBS', 'MITNFA'],\n  ['MIT', 'MIT'],\n  ['MPL', 'MPL-2.0'],\n  ['X11', 'X11'],\n  ['ZLIB', 'Zlib']\n].concat(licensesWithOneVersion)\n\nvar SUBSTRING = 0\nvar IDENTIFIER = 1\n\nvar validTransformation = function (identifier) {\n  for (var i = 0; i < transforms.length; i++) {\n    var transformed = transforms[i](identifier).trim()\n    if (transformed !== identifier && valid(transformed)) {\n      return transformed\n    }\n  }\n  return null\n}\n\nvar validLastResort = function (identifier) {\n  var upperCased = identifier.toUpperCase()\n  for (var i = 0; i < lastResorts.length; i++) {\n    var lastResort = lastResorts[i]\n    if (upperCased.indexOf(lastResort[SUBSTRING]) > -1) {\n      return lastResort[IDENTIFIER]\n    }\n  }\n  return null\n}\n\nvar anyCorrection = function (identifier, check) {\n  for (var i = 0; i < transpositions.length; i++) {\n    var transposition = transpositions[i]\n    var transposed = transposition[TRANSPOSED]\n    if (identifier.indexOf(transposed) > -1) {\n      var corrected = identifier.replace(\n        transposed,\n        transposition[CORRECT]\n      )\n      var checked = check(corrected)\n      if (checked !== null) {\n        return checked\n      }\n    }\n  }\n  return null\n}\n\nmodule.exports = function (identifier, options) {\n  options = options || {}\n  var upgrade = options.upgrade === undefined ? true : !!options.upgrade\n  function postprocess (value) {\n    return upgrade ? upgradeGPLs(value) : value\n  }\n  var validArugment = (\n    typeof identifier === 'string' &&\n    identifier.trim().length !== 0\n  )\n  if (!validArugment) {\n    throw Error('Invalid argument. Expected non-empty string.')\n  }\n  identifier = identifier.trim()\n  if (valid(identifier)) {\n    return postprocess(identifier)\n  }\n  var noPlus = identifier.replace(/\\+$/, '').trim()\n  if (valid(noPlus)) {\n    return postprocess(noPlus)\n  }\n  var transformed = validTransformation(identifier)\n  if (transformed !== null) {\n    return postprocess(transformed)\n  }\n  transformed = anyCorrection(identifier, function (argument) {\n    if (valid(argument)) {\n      return argument\n    }\n    return validTransformation(argument)\n  })\n  if (transformed !== null) {\n    return postprocess(transformed)\n  }\n  transformed = validLastResort(identifier)\n  if (transformed !== null) {\n    return postprocess(transformed)\n  }\n  transformed = anyCorrection(identifier, validLastResort)\n  if (transformed !== null) {\n    return postprocess(transformed)\n  }\n  return null\n}\n\nfunction upgradeGPLs (value) {\n  if ([\n    'GPL-1.0', 'LGPL-1.0', 'AGPL-1.0',\n    'GPL-2.0', 'LGPL-2.0', 'AGPL-2.0',\n    'LGPL-2.1'\n  ].indexOf(value) !== -1) {\n    return value + '-only'\n  } else if ([\n    'GPL-1.0+', 'GPL-2.0+', 'GPL-3.0+',\n    'LGPL-2.0+', 'LGPL-2.1+', 'LGPL-3.0+',\n    'AGPL-1.0+', 'AGPL-3.0+'\n  ].indexOf(value) !== -1) {\n    return value.replace(/\\+$/, '-or-later')\n  } else if (['GPL-3.0', 'LGPL-3.0', 'AGPL-3.0'].indexOf(value) !== -1) {\n    return value + '-or-later'\n  } else {\n    return value\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}