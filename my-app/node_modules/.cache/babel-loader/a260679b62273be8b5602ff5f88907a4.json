{"ast":null,"code":"'use strict';\n\nvar utils = require('./../utils');\nvar settle = require('./../core/settle');\nvar buildURL = require('./../helpers/buildURL');\nvar parseHeaders = require('./../helpers/parseHeaders');\nvar isURLSameOrigin = require('./../helpers/isURLSameOrigin');\nvar createError = require('../core/createError');\nvar btoa = typeof window !== 'undefined' && window.btoa && window.btoa.bind(window) || require('./../helpers/btoa');\nmodule.exports = function xhrAdapter(config) {\n  return new Promise(function dispatchXhrRequest(resolve, reject) {\n    var requestData = config.data;\n    var requestHeaders = config.headers;\n    if (utils.isFormData(requestData)) {\n      delete requestHeaders['Content-Type']; // Let the browser set it\n    }\n\n    var request = new XMLHttpRequest();\n    var loadEvent = 'onreadystatechange';\n    var xDomain = false;\n\n    // For IE 8/9 CORS support\n    // Only supports POST and GET calls and doesn't returns the response headers.\n    // DON'T do this for testing b/c XMLHttpRequest is mocked, not XDomainRequest.\n    if (process.env.NODE_ENV !== 'test' && typeof window !== 'undefined' && window.XDomainRequest && !('withCredentials' in request) && !isURLSameOrigin(config.url)) {\n      request = new window.XDomainRequest();\n      loadEvent = 'onload';\n      xDomain = true;\n      request.onprogress = function handleProgress() {};\n      request.ontimeout = function handleTimeout() {};\n    }\n\n    // HTTP basic authentication\n    if (config.auth) {\n      var username = config.auth.username || '';\n      var password = config.auth.password || '';\n      requestHeaders.Authorization = 'Basic ' + btoa(username + ':' + password);\n    }\n    request.open(config.method.toUpperCase(), buildURL(config.url, config.params, config.paramsSerializer), true);\n\n    // Set the request timeout in MS\n    request.timeout = config.timeout;\n\n    // Listen for ready state\n    request[loadEvent] = function handleLoad() {\n      if (!request || request.readyState !== 4 && !xDomain) {\n        return;\n      }\n\n      // The request errored out and we didn't get a response, this will be\n      // handled by onerror instead\n      // With one exception: request that using file: protocol, most browsers\n      // will return status as 0 even though it's a successful request\n      if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {\n        return;\n      }\n\n      // Prepare the response\n      var responseHeaders = 'getAllResponseHeaders' in request ? parseHeaders(request.getAllResponseHeaders()) : null;\n      var responseData = !config.responseType || config.responseType === 'text' ? request.responseText : request.response;\n      var response = {\n        data: responseData,\n        // IE sends 1223 instead of 204 (https://github.com/axios/axios/issues/201)\n        status: request.status === 1223 ? 204 : request.status,\n        statusText: request.status === 1223 ? 'No Content' : request.statusText,\n        headers: responseHeaders,\n        config: config,\n        request: request\n      };\n      settle(resolve, reject, response);\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle low level network errors\n    request.onerror = function handleError() {\n      // Real errors are hidden from us by the browser\n      // onerror should only fire if it's a network error\n      reject(createError('Network Error', config, null, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle timeout\n    request.ontimeout = function handleTimeout() {\n      reject(createError('timeout of ' + config.timeout + 'ms exceeded', config, 'ECONNABORTED', request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Add xsrf header\n    // This is only done if running in a standard browser environment.\n    // Specifically not if we're in a web worker, or react-native.\n    if (utils.isStandardBrowserEnv()) {\n      var cookies = require('./../helpers/cookies');\n\n      // Add xsrf header\n      var xsrfValue = (config.withCredentials || isURLSameOrigin(config.url)) && config.xsrfCookieName ? cookies.read(config.xsrfCookieName) : undefined;\n      if (xsrfValue) {\n        requestHeaders[config.xsrfHeaderName] = xsrfValue;\n      }\n    }\n\n    // Add headers to the request\n    if ('setRequestHeader' in request) {\n      utils.forEach(requestHeaders, function setRequestHeader(val, key) {\n        if (typeof requestData === 'undefined' && key.toLowerCase() === 'content-type') {\n          // Remove Content-Type if data is undefined\n          delete requestHeaders[key];\n        } else {\n          // Otherwise add header to the request\n          request.setRequestHeader(key, val);\n        }\n      });\n    }\n\n    // Add withCredentials to request if needed\n    if (config.withCredentials) {\n      request.withCredentials = true;\n    }\n\n    // Add responseType to request if needed\n    if (config.responseType) {\n      try {\n        request.responseType = config.responseType;\n      } catch (e) {\n        // Expected DOMException thrown by browsers not compatible XMLHttpRequest Level 2.\n        // But, this can be suppressed for 'json' type as it can be parsed by default 'transformResponse' function.\n        if (config.responseType !== 'json') {\n          throw e;\n        }\n      }\n    }\n\n    // Handle progress if needed\n    if (typeof config.onDownloadProgress === 'function') {\n      request.addEventListener('progress', config.onDownloadProgress);\n    }\n\n    // Not all browsers support upload events\n    if (typeof config.onUploadProgress === 'function' && request.upload) {\n      request.upload.addEventListener('progress', config.onUploadProgress);\n    }\n    if (config.cancelToken) {\n      // Handle cancellation\n      config.cancelToken.promise.then(function onCanceled(cancel) {\n        if (!request) {\n          return;\n        }\n        request.abort();\n        reject(cancel);\n        // Clean up request\n        request = null;\n      });\n    }\n    if (requestData === undefined) {\n      requestData = null;\n    }\n\n    // Send the request\n    request.send(requestData);\n  });\n};","map":{"version":3,"names":["utils","require","settle","buildURL","parseHeaders","isURLSameOrigin","createError","btoa","window","bind","module","exports","xhrAdapter","config","Promise","dispatchXhrRequest","resolve","reject","requestData","data","requestHeaders","headers","isFormData","request","XMLHttpRequest","loadEvent","xDomain","process","env","NODE_ENV","XDomainRequest","url","onprogress","handleProgress","ontimeout","handleTimeout","auth","username","password","Authorization","open","method","toUpperCase","params","paramsSerializer","timeout","handleLoad","readyState","status","responseURL","indexOf","responseHeaders","getAllResponseHeaders","responseData","responseType","responseText","response","statusText","onerror","handleError","isStandardBrowserEnv","cookies","xsrfValue","withCredentials","xsrfCookieName","read","undefined","xsrfHeaderName","forEach","setRequestHeader","val","key","toLowerCase","e","onDownloadProgress","addEventListener","onUploadProgress","upload","cancelToken","promise","then","onCanceled","cancel","abort","send"],"sources":["/home/user/Рабочий стол/pizza/project/node_modules/axios/lib/adapters/xhr.js"],"sourcesContent":["'use strict';\n\nvar utils = require('./../utils');\nvar settle = require('./../core/settle');\nvar buildURL = require('./../helpers/buildURL');\nvar parseHeaders = require('./../helpers/parseHeaders');\nvar isURLSameOrigin = require('./../helpers/isURLSameOrigin');\nvar createError = require('../core/createError');\nvar btoa = (typeof window !== 'undefined' && window.btoa && window.btoa.bind(window)) || require('./../helpers/btoa');\n\nmodule.exports = function xhrAdapter(config) {\n  return new Promise(function dispatchXhrRequest(resolve, reject) {\n    var requestData = config.data;\n    var requestHeaders = config.headers;\n\n    if (utils.isFormData(requestData)) {\n      delete requestHeaders['Content-Type']; // Let the browser set it\n    }\n\n    var request = new XMLHttpRequest();\n    var loadEvent = 'onreadystatechange';\n    var xDomain = false;\n\n    // For IE 8/9 CORS support\n    // Only supports POST and GET calls and doesn't returns the response headers.\n    // DON'T do this for testing b/c XMLHttpRequest is mocked, not XDomainRequest.\n    if (process.env.NODE_ENV !== 'test' &&\n        typeof window !== 'undefined' &&\n        window.XDomainRequest && !('withCredentials' in request) &&\n        !isURLSameOrigin(config.url)) {\n      request = new window.XDomainRequest();\n      loadEvent = 'onload';\n      xDomain = true;\n      request.onprogress = function handleProgress() {};\n      request.ontimeout = function handleTimeout() {};\n    }\n\n    // HTTP basic authentication\n    if (config.auth) {\n      var username = config.auth.username || '';\n      var password = config.auth.password || '';\n      requestHeaders.Authorization = 'Basic ' + btoa(username + ':' + password);\n    }\n\n    request.open(config.method.toUpperCase(), buildURL(config.url, config.params, config.paramsSerializer), true);\n\n    // Set the request timeout in MS\n    request.timeout = config.timeout;\n\n    // Listen for ready state\n    request[loadEvent] = function handleLoad() {\n      if (!request || (request.readyState !== 4 && !xDomain)) {\n        return;\n      }\n\n      // The request errored out and we didn't get a response, this will be\n      // handled by onerror instead\n      // With one exception: request that using file: protocol, most browsers\n      // will return status as 0 even though it's a successful request\n      if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {\n        return;\n      }\n\n      // Prepare the response\n      var responseHeaders = 'getAllResponseHeaders' in request ? parseHeaders(request.getAllResponseHeaders()) : null;\n      var responseData = !config.responseType || config.responseType === 'text' ? request.responseText : request.response;\n      var response = {\n        data: responseData,\n        // IE sends 1223 instead of 204 (https://github.com/axios/axios/issues/201)\n        status: request.status === 1223 ? 204 : request.status,\n        statusText: request.status === 1223 ? 'No Content' : request.statusText,\n        headers: responseHeaders,\n        config: config,\n        request: request\n      };\n\n      settle(resolve, reject, response);\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle low level network errors\n    request.onerror = function handleError() {\n      // Real errors are hidden from us by the browser\n      // onerror should only fire if it's a network error\n      reject(createError('Network Error', config, null, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle timeout\n    request.ontimeout = function handleTimeout() {\n      reject(createError('timeout of ' + config.timeout + 'ms exceeded', config, 'ECONNABORTED',\n        request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Add xsrf header\n    // This is only done if running in a standard browser environment.\n    // Specifically not if we're in a web worker, or react-native.\n    if (utils.isStandardBrowserEnv()) {\n      var cookies = require('./../helpers/cookies');\n\n      // Add xsrf header\n      var xsrfValue = (config.withCredentials || isURLSameOrigin(config.url)) && config.xsrfCookieName ?\n          cookies.read(config.xsrfCookieName) :\n          undefined;\n\n      if (xsrfValue) {\n        requestHeaders[config.xsrfHeaderName] = xsrfValue;\n      }\n    }\n\n    // Add headers to the request\n    if ('setRequestHeader' in request) {\n      utils.forEach(requestHeaders, function setRequestHeader(val, key) {\n        if (typeof requestData === 'undefined' && key.toLowerCase() === 'content-type') {\n          // Remove Content-Type if data is undefined\n          delete requestHeaders[key];\n        } else {\n          // Otherwise add header to the request\n          request.setRequestHeader(key, val);\n        }\n      });\n    }\n\n    // Add withCredentials to request if needed\n    if (config.withCredentials) {\n      request.withCredentials = true;\n    }\n\n    // Add responseType to request if needed\n    if (config.responseType) {\n      try {\n        request.responseType = config.responseType;\n      } catch (e) {\n        // Expected DOMException thrown by browsers not compatible XMLHttpRequest Level 2.\n        // But, this can be suppressed for 'json' type as it can be parsed by default 'transformResponse' function.\n        if (config.responseType !== 'json') {\n          throw e;\n        }\n      }\n    }\n\n    // Handle progress if needed\n    if (typeof config.onDownloadProgress === 'function') {\n      request.addEventListener('progress', config.onDownloadProgress);\n    }\n\n    // Not all browsers support upload events\n    if (typeof config.onUploadProgress === 'function' && request.upload) {\n      request.upload.addEventListener('progress', config.onUploadProgress);\n    }\n\n    if (config.cancelToken) {\n      // Handle cancellation\n      config.cancelToken.promise.then(function onCanceled(cancel) {\n        if (!request) {\n          return;\n        }\n\n        request.abort();\n        reject(cancel);\n        // Clean up request\n        request = null;\n      });\n    }\n\n    if (requestData === undefined) {\n      requestData = null;\n    }\n\n    // Send the request\n    request.send(requestData);\n  });\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}