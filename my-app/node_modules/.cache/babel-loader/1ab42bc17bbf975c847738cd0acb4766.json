{"ast":null,"code":"var fs = require(\"fs\");\nvar path = require(\"path\");\nvar pluginTmpl = templateFile(\"/plugin.tmpl\");\nvar configTmpl = templateFile(\"/config.tmpl\");\nvar configItem = templateFile(\"/config.item.tmpl\");\nvar inlineTemp = templateFile(\"/inline.template.tmpl\");\nvar pluginItemTmpl = fs.readFileSync(path.resolve(__dirname, \"../\", \"templates/plugin.item.tmpl\"), \"utf-8\");\nfunction templateFile(filepath) {\n  return fs.readFileSync(path.join(__dirname, \"/../templates\", filepath || \"\"), \"utf-8\");\n}\n\n/**\n * @type {{page: Function, markup: Function, client:js: Function, templates: Function}}\n */\nmodule.exports = {\n  /**\n   * Create the url config for each section of the ui\n   * @param hooks\n   * @param ui\n   */\n  \"page\": function (hooks, ui) {\n    var config = hooks.map(transformConfig).reduce(createConfigItem, {});\n    return {\n      /**\n       * pagesConfig - This is the angular configuration such as routes\n       */\n      pagesConfig: configTmpl.replace(\"%when%\", hooks.reduce(createAngularRoutes, \"\")).replace(\"%pages%\", JSON.stringify(config, null, 4)),\n      /**\n       * pagesConfig in object form\n       */\n      pagesObj: config,\n      pageMarkup: function () {\n        return preAngular(ui.pluginManager.plugins, config, ui);\n      }\n    };\n  },\n  /**\n   * Controller markup for each plugin\n   * @param hooks\n   * @returns {*}\n   */\n  \"markup\": function (hooks) {\n    return hooks.reduce(pluginTemplate, \"\");\n  },\n  /**\n   * @param hooks\n   * @param {UI} ui\n   * @returns {*|string}\n   */\n  \"client:js\": function (hooks, ui) {\n    /**\n     * Add client JS from Browsersync Plugins\n     */\n    ui.bsPlugins.forEach(function (plugin) {\n      if (plugin.has(\"client:js\")) {\n        plugin.get(\"client:js\").forEach(function (value) {\n          hooks.push(value);\n        });\n      }\n    });\n    var out = hooks.reduce(function (all, item) {\n      if (typeof item === \"string\") {\n        all += \";\" + item;\n      } else if (Array.isArray(item)) {\n        item.forEach(function (item) {\n          all += \";\" + item;\n        });\n      }\n      return all;\n    }, \"\");\n    return out;\n  },\n  /**\n   * @param hooks\n   * @param initial\n   * @param {UI} ui\n   * @returns {String}\n   */\n  \"templates\": function (hooks, initial, ui) {\n    /**\n     * Add templates from each Browsersync registered plugin\n     * @type {string}\n     */\n    var pluginDirectives = ui.bsPlugins.reduce(function (all, plugin) {\n      if (!plugin.has(\"templates\")) {\n        return all;\n      }\n\n      /**\n       * Slugify-ish the plugin name\n       *  eg: Test Browsersync Plugin\n       *    = test-browsersync-plugin\n       * @type {string}\n       */\n      var slug = plugin.get(\"name\").trim().split(\" \").map(function (word) {\n        return word.trim().toLowerCase();\n      }).join(\"-\");\n\n      /**\n       * For every plugin that has templates, wrap\n       * the markup in the <script type=\"text/ng-template\" id=\"{{slug}}\"></script>\n       * markup to result in the single output string.\n       */\n      plugin.get(\"templates\").forEach(function (value, key) {\n        all += angularWrap([slug, path.basename(key)].join(\"/\"), value);\n      });\n      return all;\n    }, \"\");\n\n    /**\n     * Combine the markup from the plugins done above with any\n     * others registered via hooks + initial\n     * to create the final markup\n     */\n    return [pluginDirectives, createInlineTemplates(hooks.concat([initial]))].join(\"\");\n  },\n  /**\n   * Allow plugins to register toggle-able elements\n   * @param hooks\n   * @returns {{}}\n   */\n  \"elements\": function (hooks) {\n    var obj = {};\n    hooks.forEach(function (elements) {\n      elements.forEach(function (item) {\n        if (!obj[item.name]) {\n          obj[item.name] = item;\n        }\n      });\n    });\n    return obj;\n  }\n};\n\n/**\n * @param hooks\n * @returns {String}\n */\nfunction createInlineTemplates(hooks) {\n  return hooks.reduce(function (combined, item) {\n    return combined + item.reduce(function (all, filepath) {\n      return all + angularWrap(path.basename(filepath), fs.readFileSync(filepath));\n    }, \"\");\n  }, \"\");\n}\n\n/**\n * @param item\n * @returns {*}\n */\nfunction transformConfig(item) {\n  return item;\n}\n\n/**\n * @param {String} all\n * @param {Object} item\n * @returns {*}\n */\nfunction createAngularRoutes(all, item) {\n  return all + configItem.replace(/%(.+)%/g, function () {\n    var key = arguments[1];\n    if (item[key]) {\n      return item[key];\n    }\n  });\n}\n\n/**\n * @param joined\n * @param item\n * @returns {*}\n */\nfunction createConfigItem(joined, item) {\n  if (item.path === \"/\") {\n    joined[\"overview\"] = item;\n  } else {\n    joined[item.path.slice(1)] = item;\n  }\n  return joined;\n}\n\n/**\n * @returns {*}\n */\nfunction pluginTemplate(combined, item) {\n  return [combined, pluginTmpl.replace(\"%markup%\", item)].join(\"\\n\");\n}\n\n/**\n * @param plugins\n * @param config\n * @returns {*}\n */\nfunction preAngular(plugins, config, ui) {\n  return Object.keys(plugins).filter(function (key) {\n    return config[key]; // only work on plugins that have pages\n  }).map(function (key) {\n    if (key === \"plugins\") {\n      var pluginMarkup = ui.bsPlugins.reduce(function (all, item, i) {\n        all += pluginItemTmpl.replace(\"%content%\", item.get(\"markup\") || \"\").replace(/%index%/g, i).replace(/%name%/g, item.get(\"name\"));\n        return all;\n      }, \"\");\n      plugins[key].hooks.markup = plugins[key].hooks.markup.replace(\"%pluginlist%\", pluginMarkup);\n    }\n    return angularWrap(config[key].template, bindOnce(plugins[key].hooks.markup, config[key]));\n  }).reduce(function (combined, item) {\n    return combined + item;\n  }, \"\");\n}\n\n/**\n * @param templateName\n * @param markup\n * @returns {*}\n */\nfunction angularWrap(templateName, markup) {\n  return inlineTemp.replace(\"%content%\", markup).replace(\"%id%\", templateName);\n}\n\n/**\n * @param markup\n * @param config\n * @returns {*|string}\n */\nfunction bindOnce(markup, config) {\n  return markup.toString().replace(/\\{\\{ctrl.section\\.(.+?)\\}\\}/g, function ($1, $2) {\n    return config[$2] || \"\";\n  });\n}\nmodule.exports.bindOnce = bindOnce;","map":{"version":3,"names":["fs","require","path","pluginTmpl","templateFile","configTmpl","configItem","inlineTemp","pluginItemTmpl","readFileSync","resolve","__dirname","filepath","join","module","exports","hooks","ui","config","map","transformConfig","reduce","createConfigItem","pagesConfig","replace","createAngularRoutes","JSON","stringify","pagesObj","pageMarkup","preAngular","pluginManager","plugins","pluginTemplate","bsPlugins","forEach","plugin","has","get","value","push","out","all","item","Array","isArray","initial","pluginDirectives","slug","trim","split","word","toLowerCase","key","angularWrap","basename","createInlineTemplates","concat","obj","elements","name","combined","arguments","joined","slice","Object","keys","filter","pluginMarkup","i","markup","template","bindOnce","templateName","toString","$1","$2"],"sources":["/home/user/Рабочий стол/pizza/project/node_modules/browser-sync-ui/lib/hooks.js"],"sourcesContent":["var fs         = require(\"fs\");\nvar path       = require(\"path\");\n\nvar pluginTmpl     = templateFile(\"/plugin.tmpl\");\nvar configTmpl     = templateFile(\"/config.tmpl\");\nvar configItem     = templateFile(\"/config.item.tmpl\");\nvar inlineTemp     = templateFile(\"/inline.template.tmpl\");\nvar pluginItemTmpl = fs.readFileSync(path.resolve(__dirname, \"../\", \"templates/plugin.item.tmpl\"), \"utf-8\");\n\nfunction templateFile (filepath) {\n    return fs.readFileSync(path.join(__dirname, \"/../templates\", filepath || \"\"), \"utf-8\");\n}\n\n/**\n * @type {{page: Function, markup: Function, client:js: Function, templates: Function}}\n */\nmodule.exports = {\n    /**\n     * Create the url config for each section of the ui\n     * @param hooks\n     * @param ui\n     */\n    \"page\": function (hooks, ui) {\n\n        var config = hooks\n            .map(transformConfig)\n            .reduce(createConfigItem, {});\n\n        return {\n            /**\n             * pagesConfig - This is the angular configuration such as routes\n             */\n            pagesConfig: configTmpl\n                .replace(\"%when%\", hooks.reduce(\n                    createAngularRoutes,\n                    \"\"\n                ))\n                .replace(\"%pages%\", JSON.stringify(\n                    config,\n                    null,\n                    4\n                )),\n            /**\n             * pagesConfig in object form\n             */\n            pagesObj: config,\n            pageMarkup: function () {\n                return preAngular(ui.pluginManager.plugins, config, ui);\n            }\n        };\n    },\n    /**\n     * Controller markup for each plugin\n     * @param hooks\n     * @returns {*}\n     */\n    \"markup\": function (hooks) {\n        return hooks.reduce(pluginTemplate, \"\");\n    },\n    /**\n     * @param hooks\n     * @param {UI} ui\n     * @returns {*|string}\n     */\n    \"client:js\": function (hooks, ui) {\n\n        /**\n         * Add client JS from Browsersync Plugins\n         */\n        ui.bsPlugins.forEach(function (plugin) {\n            if (plugin.has(\"client:js\")) {\n                plugin.get(\"client:js\").forEach(function (value) {\n                    hooks.push(value);\n                });\n            }\n        });\n\n        var out = hooks.reduce(function (all, item) {\n            if (typeof item === \"string\") {\n                all += \";\" + item;\n            } else if (Array.isArray(item)) {\n                item.forEach(function (item) {\n                    all += \";\" + item;\n                });\n            }\n            return all;\n        }, \"\");\n\n        return out;\n    },\n    /**\n     * @param hooks\n     * @param initial\n     * @param {UI} ui\n     * @returns {String}\n     */\n    \"templates\": function (hooks, initial, ui) {\n\n        /**\n         * Add templates from each Browsersync registered plugin\n         * @type {string}\n         */\n        var pluginDirectives = ui.bsPlugins.reduce(function (all, plugin) {\n\n            if (!plugin.has(\"templates\")) {\n                return all;\n            }\n\n            /**\n             * Slugify-ish the plugin name\n             *  eg: Test Browsersync Plugin\n             *    = test-browsersync-plugin\n             * @type {string}\n             */\n            var slug = plugin.get(\"name\")\n                .trim()\n                .split(\" \")\n                .map(function (word) {\n                    return word.trim().toLowerCase();\n                })\n                .join(\"-\");\n\n            /**\n             * For every plugin that has templates, wrap\n             * the markup in the <script type=\"text/ng-template\" id=\"{{slug}}\"></script>\n             * markup to result in the single output string.\n             */\n            plugin.get(\"templates\").forEach(function (value, key) {\n                all +=  angularWrap([slug, path.basename(key)].join(\"/\"), value);\n            });\n\n            return all;\n\n        }, \"\");\n\n        /**\n         * Combine the markup from the plugins done above with any\n         * others registered via hooks + initial\n         * to create the final markup\n         */\n        return [pluginDirectives, createInlineTemplates(hooks.concat([initial]))].join(\"\");\n    },\n    /**\n     * Allow plugins to register toggle-able elements\n     * @param hooks\n     * @returns {{}}\n     */\n    \"elements\": function (hooks) {\n        var obj = {};\n        hooks.forEach(function (elements) {\n            elements.forEach(function (item) {\n                if (!obj[item.name]) {\n                    obj[item.name] = item;\n                }\n            });\n        });\n        return obj;\n    }\n};\n\n/**\n * @param hooks\n * @returns {String}\n */\nfunction createInlineTemplates (hooks) {\n    return hooks.reduce(function (combined, item) {\n        return combined + item.reduce(function (all, filepath) {\n            return all + angularWrap(\n                path.basename(filepath),\n                fs.readFileSync(filepath));\n        }, \"\");\n    }, \"\");\n}\n\n/**\n * @param item\n * @returns {*}\n */\nfunction transformConfig (item) {\n    return item;\n}\n\n/**\n * @param {String} all\n * @param {Object} item\n * @returns {*}\n */\nfunction createAngularRoutes(all, item) {\n    return all + configItem.replace(/%(.+)%/g, function () {\n        var key = arguments[1];\n        if (item[key]) {\n            return item[key];\n        }\n    });\n}\n\n/**\n * @param joined\n * @param item\n * @returns {*}\n */\nfunction createConfigItem (joined, item) {\n    if (item.path === \"/\") {\n        joined[\"overview\"] = item;\n    } else {\n        joined[item.path.slice(1)] = item;\n    }\n    return joined;\n}\n\n/**\n * @returns {*}\n */\nfunction pluginTemplate (combined, item) {\n    return [combined, pluginTmpl.replace(\"%markup%\", item)].join(\"\\n\");\n}\n\n/**\n * @param plugins\n * @param config\n * @returns {*}\n */\nfunction preAngular (plugins, config, ui) {\n\n    return Object.keys(plugins)\n        .filter(function (key) {\n            return config[key]; // only work on plugins that have pages\n        })\n        .map(function (key) {\n            if (key === \"plugins\") {\n                var pluginMarkup = ui.bsPlugins.reduce(function (all, item, i) {\n                    all += pluginItemTmpl\n                        .replace(\"%content%\", item.get(\"markup\") || \"\")\n                        .replace(/%index%/g, i)\n                        .replace(/%name%/g, item.get(\"name\"));\n\n                    return all;\n                }, \"\");\n                plugins[key].hooks.markup = plugins[key].hooks.markup.replace(\"%pluginlist%\", pluginMarkup);\n            }\n            return angularWrap(config[key].template, bindOnce(plugins[key].hooks.markup, config[key]));\n        })\n        .reduce(function (combined, item) {\n            return combined + item;\n        }, \"\");\n}\n\n/**\n * @param templateName\n * @param markup\n * @returns {*}\n */\nfunction angularWrap (templateName, markup) {\n    return inlineTemp\n        .replace(\"%content%\", markup)\n        .replace(\"%id%\", templateName);\n}\n\n/**\n * @param markup\n * @param config\n * @returns {*|string}\n */\nfunction bindOnce (markup, config) {\n    return markup.toString().replace(/\\{\\{ctrl.section\\.(.+?)\\}\\}/g, function ($1, $2) {\n        return config[$2] || \"\";\n    });\n}\n\nmodule.exports.bindOnce = bindOnce;\n\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}