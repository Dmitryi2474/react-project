{"ast":null,"code":"var core = require('./core');\nvar fs = require('fs');\nvar path = require('path');\nvar caller = require('./caller.js');\nvar nodeModulesPaths = require('./node-modules-paths.js');\nvar normalizeOptions = require('./normalize-options.js');\nvar defaultIsFile = function isFile(file) {\n  try {\n    var stat = fs.statSync(file);\n  } catch (e) {\n    if (e && (e.code === 'ENOENT' || e.code === 'ENOTDIR')) return false;\n    throw e;\n  }\n  return stat.isFile() || stat.isFIFO();\n};\nmodule.exports = function (x, options) {\n  if (typeof x !== 'string') {\n    throw new TypeError('Path must be a string.');\n  }\n  var opts = normalizeOptions(x, options);\n  var isFile = opts.isFile || defaultIsFile;\n  var readFileSync = opts.readFileSync || fs.readFileSync;\n  var extensions = opts.extensions || ['.js'];\n  var basedir = opts.basedir || path.dirname(caller());\n  var parent = opts.filename || basedir;\n  opts.paths = opts.paths || [];\n\n  // ensure that `basedir` is an absolute path at this point, resolving against the process' current working directory\n  var absoluteStart = path.resolve(basedir);\n  if (opts.preserveSymlinks === false) {\n    try {\n      absoluteStart = fs.realpathSync(absoluteStart);\n    } catch (realPathErr) {\n      if (realPathErr.code !== 'ENOENT') {\n        throw realPathErr;\n      }\n    }\n  }\n  if (/^(?:\\.\\.?(?:\\/|$)|\\/|([A-Za-z]:)?[/\\\\])/.test(x)) {\n    var res = path.resolve(absoluteStart, x);\n    if (x === '..' || x.slice(-1) === '/') res += '/';\n    var m = loadAsFileSync(res) || loadAsDirectorySync(res);\n    if (m) return m;\n  } else {\n    var n = loadNodeModulesSync(x, absoluteStart);\n    if (n) return n;\n  }\n  if (core[x]) return x;\n  var err = new Error(\"Cannot find module '\" + x + \"' from '\" + parent + \"'\");\n  err.code = 'MODULE_NOT_FOUND';\n  throw err;\n  function loadAsFileSync(x) {\n    var pkg = loadpkg(path.dirname(x));\n    if (pkg && pkg.dir && pkg.pkg && opts.pathFilter) {\n      var rfile = path.relative(pkg.dir, x);\n      var r = opts.pathFilter(pkg.pkg, x, rfile);\n      if (r) {\n        x = path.resolve(pkg.dir, r); // eslint-disable-line no-param-reassign\n      }\n    }\n\n    if (isFile(x)) {\n      return x;\n    }\n    for (var i = 0; i < extensions.length; i++) {\n      var file = x + extensions[i];\n      if (isFile(file)) {\n        return file;\n      }\n    }\n  }\n  function loadpkg(dir) {\n    if (dir === '' || dir === '/') return;\n    if (process.platform === 'win32' && /^\\w:[/\\\\]*$/.test(dir)) {\n      return;\n    }\n    if (/[/\\\\]node_modules[/\\\\]*$/.test(dir)) return;\n    var pkgfile = path.join(dir, 'package.json');\n    if (!isFile(pkgfile)) {\n      return loadpkg(path.dirname(dir));\n    }\n    var body = readFileSync(pkgfile);\n    try {\n      var pkg = JSON.parse(body);\n    } catch (jsonErr) {}\n    if (pkg && opts.packageFilter) {\n      pkg = opts.packageFilter(pkg, dir);\n    }\n    return {\n      pkg: pkg,\n      dir: dir\n    };\n  }\n  function loadAsDirectorySync(x) {\n    var pkgfile = path.join(x, '/package.json');\n    if (isFile(pkgfile)) {\n      try {\n        var body = readFileSync(pkgfile, 'UTF8');\n        var pkg = JSON.parse(body);\n      } catch (e) {}\n      if (opts.packageFilter) {\n        pkg = opts.packageFilter(pkg, x);\n      }\n      if (pkg.main) {\n        if (typeof pkg.main !== 'string') {\n          var mainError = new TypeError('package “' + pkg.name + '” `main` must be a string');\n          mainError.code = 'INVALID_PACKAGE_MAIN';\n          throw mainError;\n        }\n        if (pkg.main === '.' || pkg.main === './') {\n          pkg.main = 'index';\n        }\n        try {\n          var m = loadAsFileSync(path.resolve(x, pkg.main));\n          if (m) return m;\n          var n = loadAsDirectorySync(path.resolve(x, pkg.main));\n          if (n) return n;\n        } catch (e) {}\n      }\n    }\n    return loadAsFileSync(path.join(x, '/index'));\n  }\n  function loadNodeModulesSync(x, start) {\n    var dirs = nodeModulesPaths(start, opts, x);\n    for (var i = 0; i < dirs.length; i++) {\n      var dir = dirs[i];\n      var m = loadAsFileSync(path.join(dir, '/', x));\n      if (m) return m;\n      var n = loadAsDirectorySync(path.join(dir, '/', x));\n      if (n) return n;\n    }\n  }\n};","map":{"version":3,"names":["core","require","fs","path","caller","nodeModulesPaths","normalizeOptions","defaultIsFile","isFile","file","stat","statSync","e","code","isFIFO","module","exports","x","options","TypeError","opts","readFileSync","extensions","basedir","dirname","parent","filename","paths","absoluteStart","resolve","preserveSymlinks","realpathSync","realPathErr","test","res","slice","m","loadAsFileSync","loadAsDirectorySync","n","loadNodeModulesSync","err","Error","pkg","loadpkg","dir","pathFilter","rfile","relative","r","i","length","process","platform","pkgfile","join","body","JSON","parse","jsonErr","packageFilter","main","mainError","name","start","dirs"],"sources":["/home/user/Рабочий стол/pizza/project/node_modules/resolve/lib/sync.js"],"sourcesContent":["var core = require('./core');\nvar fs = require('fs');\nvar path = require('path');\nvar caller = require('./caller.js');\nvar nodeModulesPaths = require('./node-modules-paths.js');\nvar normalizeOptions = require('./normalize-options.js');\n\nvar defaultIsFile = function isFile(file) {\n    try {\n        var stat = fs.statSync(file);\n    } catch (e) {\n        if (e && (e.code === 'ENOENT' || e.code === 'ENOTDIR')) return false;\n        throw e;\n    }\n    return stat.isFile() || stat.isFIFO();\n};\n\nmodule.exports = function (x, options) {\n    if (typeof x !== 'string') {\n        throw new TypeError('Path must be a string.');\n    }\n    var opts = normalizeOptions(x, options);\n\n    var isFile = opts.isFile || defaultIsFile;\n    var readFileSync = opts.readFileSync || fs.readFileSync;\n\n    var extensions = opts.extensions || ['.js'];\n    var basedir = opts.basedir || path.dirname(caller());\n    var parent = opts.filename || basedir;\n\n    opts.paths = opts.paths || [];\n\n    // ensure that `basedir` is an absolute path at this point, resolving against the process' current working directory\n    var absoluteStart = path.resolve(basedir);\n\n    if (opts.preserveSymlinks === false) {\n        try {\n            absoluteStart = fs.realpathSync(absoluteStart);\n        } catch (realPathErr) {\n            if (realPathErr.code !== 'ENOENT') {\n                throw realPathErr;\n            }\n        }\n    }\n\n    if ((/^(?:\\.\\.?(?:\\/|$)|\\/|([A-Za-z]:)?[/\\\\])/).test(x)) {\n        var res = path.resolve(absoluteStart, x);\n        if (x === '..' || x.slice(-1) === '/') res += '/';\n        var m = loadAsFileSync(res) || loadAsDirectorySync(res);\n        if (m) return m;\n    } else {\n        var n = loadNodeModulesSync(x, absoluteStart);\n        if (n) return n;\n    }\n\n    if (core[x]) return x;\n\n    var err = new Error(\"Cannot find module '\" + x + \"' from '\" + parent + \"'\");\n    err.code = 'MODULE_NOT_FOUND';\n    throw err;\n\n    function loadAsFileSync(x) {\n        var pkg = loadpkg(path.dirname(x));\n\n        if (pkg && pkg.dir && pkg.pkg && opts.pathFilter) {\n            var rfile = path.relative(pkg.dir, x);\n            var r = opts.pathFilter(pkg.pkg, x, rfile);\n            if (r) {\n                x = path.resolve(pkg.dir, r); // eslint-disable-line no-param-reassign\n            }\n        }\n\n        if (isFile(x)) {\n            return x;\n        }\n\n        for (var i = 0; i < extensions.length; i++) {\n            var file = x + extensions[i];\n            if (isFile(file)) {\n                return file;\n            }\n        }\n    }\n\n    function loadpkg(dir) {\n        if (dir === '' || dir === '/') return;\n        if (process.platform === 'win32' && (/^\\w:[/\\\\]*$/).test(dir)) {\n            return;\n        }\n        if ((/[/\\\\]node_modules[/\\\\]*$/).test(dir)) return;\n\n        var pkgfile = path.join(dir, 'package.json');\n\n        if (!isFile(pkgfile)) {\n            return loadpkg(path.dirname(dir));\n        }\n\n        var body = readFileSync(pkgfile);\n\n        try {\n            var pkg = JSON.parse(body);\n        } catch (jsonErr) {}\n\n        if (pkg && opts.packageFilter) {\n            pkg = opts.packageFilter(pkg, dir);\n        }\n\n        return { pkg: pkg, dir: dir };\n    }\n\n    function loadAsDirectorySync(x) {\n        var pkgfile = path.join(x, '/package.json');\n        if (isFile(pkgfile)) {\n            try {\n                var body = readFileSync(pkgfile, 'UTF8');\n                var pkg = JSON.parse(body);\n            } catch (e) {}\n\n            if (opts.packageFilter) {\n                pkg = opts.packageFilter(pkg, x);\n            }\n\n            if (pkg.main) {\n                if (typeof pkg.main !== 'string') {\n                    var mainError = new TypeError('package “' + pkg.name + '” `main` must be a string');\n                    mainError.code = 'INVALID_PACKAGE_MAIN';\n                    throw mainError;\n                }\n                if (pkg.main === '.' || pkg.main === './') {\n                    pkg.main = 'index';\n                }\n                try {\n                    var m = loadAsFileSync(path.resolve(x, pkg.main));\n                    if (m) return m;\n                    var n = loadAsDirectorySync(path.resolve(x, pkg.main));\n                    if (n) return n;\n                } catch (e) {}\n            }\n        }\n\n        return loadAsFileSync(path.join(x, '/index'));\n    }\n\n    function loadNodeModulesSync(x, start) {\n        var dirs = nodeModulesPaths(start, opts, x);\n        for (var i = 0; i < dirs.length; i++) {\n            var dir = dirs[i];\n            var m = loadAsFileSync(path.join(dir, '/', x));\n            if (m) return m;\n            var n = loadAsDirectorySync(path.join(dir, '/', x));\n            if (n) return n;\n        }\n    }\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}