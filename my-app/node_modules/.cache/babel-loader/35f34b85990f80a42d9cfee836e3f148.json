{"ast":null,"code":"exports = module.exports = SemVer;\n\n// The debug function is excluded entirely from the minified version.\n/* nomin */\nvar debug;\n/* nomin */\nif (typeof process === 'object' && /* nomin */process.env && /* nomin */process.env.NODE_DEBUG && /* nomin */ /\\bsemver\\b/i.test(process.env.NODE_DEBUG)) /* nomin */debug = function () {\n    /* nomin */var args = Array.prototype.slice.call(arguments, 0);\n    /* nomin */\n    args.unshift('SEMVER');\n    /* nomin */\n    console.log.apply(console, args);\n    /* nomin */\n  };\n  /* nomin */else /* nomin */debug = function () {};\n\n// Note: this is the semver.org version of the spec that it implements\n// Not necessarily the package version of this code.\nexports.SEMVER_SPEC_VERSION = '2.0.0';\nvar MAX_LENGTH = 256;\nvar MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER || 9007199254740991;\n\n// Max safe segment length for coercion.\nvar MAX_SAFE_COMPONENT_LENGTH = 16;\n\n// The actual regexps go on exports.re\nvar re = exports.re = [];\nvar src = exports.src = [];\nvar R = 0;\n\n// The following Regular Expressions can be used for tokenizing,\n// validating, and parsing SemVer version strings.\n\n// ## Numeric Identifier\n// A single `0`, or a non-zero digit followed by zero or more digits.\n\nvar NUMERICIDENTIFIER = R++;\nsrc[NUMERICIDENTIFIER] = '0|[1-9]\\\\d*';\nvar NUMERICIDENTIFIERLOOSE = R++;\nsrc[NUMERICIDENTIFIERLOOSE] = '[0-9]+';\n\n// ## Non-numeric Identifier\n// Zero or more digits, followed by a letter or hyphen, and then zero or\n// more letters, digits, or hyphens.\n\nvar NONNUMERICIDENTIFIER = R++;\nsrc[NONNUMERICIDENTIFIER] = '\\\\d*[a-zA-Z-][a-zA-Z0-9-]*';\n\n// ## Main Version\n// Three dot-separated numeric identifiers.\n\nvar MAINVERSION = R++;\nsrc[MAINVERSION] = '(' + src[NUMERICIDENTIFIER] + ')\\\\.' + '(' + src[NUMERICIDENTIFIER] + ')\\\\.' + '(' + src[NUMERICIDENTIFIER] + ')';\nvar MAINVERSIONLOOSE = R++;\nsrc[MAINVERSIONLOOSE] = '(' + src[NUMERICIDENTIFIERLOOSE] + ')\\\\.' + '(' + src[NUMERICIDENTIFIERLOOSE] + ')\\\\.' + '(' + src[NUMERICIDENTIFIERLOOSE] + ')';\n\n// ## Pre-release Version Identifier\n// A numeric identifier, or a non-numeric identifier.\n\nvar PRERELEASEIDENTIFIER = R++;\nsrc[PRERELEASEIDENTIFIER] = '(?:' + src[NUMERICIDENTIFIER] + '|' + src[NONNUMERICIDENTIFIER] + ')';\nvar PRERELEASEIDENTIFIERLOOSE = R++;\nsrc[PRERELEASEIDENTIFIERLOOSE] = '(?:' + src[NUMERICIDENTIFIERLOOSE] + '|' + src[NONNUMERICIDENTIFIER] + ')';\n\n// ## Pre-release Version\n// Hyphen, followed by one or more dot-separated pre-release version\n// identifiers.\n\nvar PRERELEASE = R++;\nsrc[PRERELEASE] = '(?:-(' + src[PRERELEASEIDENTIFIER] + '(?:\\\\.' + src[PRERELEASEIDENTIFIER] + ')*))';\nvar PRERELEASELOOSE = R++;\nsrc[PRERELEASELOOSE] = '(?:-?(' + src[PRERELEASEIDENTIFIERLOOSE] + '(?:\\\\.' + src[PRERELEASEIDENTIFIERLOOSE] + ')*))';\n\n// ## Build Metadata Identifier\n// Any combination of digits, letters, or hyphens.\n\nvar BUILDIDENTIFIER = R++;\nsrc[BUILDIDENTIFIER] = '[0-9A-Za-z-]+';\n\n// ## Build Metadata\n// Plus sign, followed by one or more period-separated build metadata\n// identifiers.\n\nvar BUILD = R++;\nsrc[BUILD] = '(?:\\\\+(' + src[BUILDIDENTIFIER] + '(?:\\\\.' + src[BUILDIDENTIFIER] + ')*))';\n\n// ## Full Version String\n// A main version, followed optionally by a pre-release version and\n// build metadata.\n\n// Note that the only major, minor, patch, and pre-release sections of\n// the version string are capturing groups.  The build metadata is not a\n// capturing group, because it should not ever be used in version\n// comparison.\n\nvar FULL = R++;\nvar FULLPLAIN = 'v?' + src[MAINVERSION] + src[PRERELEASE] + '?' + src[BUILD] + '?';\nsrc[FULL] = '^' + FULLPLAIN + '$';\n\n// like full, but allows v1.2.3 and =1.2.3, which people do sometimes.\n// also, 1.0.0alpha1 (prerelease without the hyphen) which is pretty\n// common in the npm registry.\nvar LOOSEPLAIN = '[v=\\\\s]*' + src[MAINVERSIONLOOSE] + src[PRERELEASELOOSE] + '?' + src[BUILD] + '?';\nvar LOOSE = R++;\nsrc[LOOSE] = '^' + LOOSEPLAIN + '$';\nvar GTLT = R++;\nsrc[GTLT] = '((?:<|>)?=?)';\n\n// Something like \"2.*\" or \"1.2.x\".\n// Note that \"x.x\" is a valid xRange identifer, meaning \"any version\"\n// Only the first item is strictly required.\nvar XRANGEIDENTIFIERLOOSE = R++;\nsrc[XRANGEIDENTIFIERLOOSE] = src[NUMERICIDENTIFIERLOOSE] + '|x|X|\\\\*';\nvar XRANGEIDENTIFIER = R++;\nsrc[XRANGEIDENTIFIER] = src[NUMERICIDENTIFIER] + '|x|X|\\\\*';\nvar XRANGEPLAIN = R++;\nsrc[XRANGEPLAIN] = '[v=\\\\s]*(' + src[XRANGEIDENTIFIER] + ')' + '(?:\\\\.(' + src[XRANGEIDENTIFIER] + ')' + '(?:\\\\.(' + src[XRANGEIDENTIFIER] + ')' + '(?:' + src[PRERELEASE] + ')?' + src[BUILD] + '?' + ')?)?';\nvar XRANGEPLAINLOOSE = R++;\nsrc[XRANGEPLAINLOOSE] = '[v=\\\\s]*(' + src[XRANGEIDENTIFIERLOOSE] + ')' + '(?:\\\\.(' + src[XRANGEIDENTIFIERLOOSE] + ')' + '(?:\\\\.(' + src[XRANGEIDENTIFIERLOOSE] + ')' + '(?:' + src[PRERELEASELOOSE] + ')?' + src[BUILD] + '?' + ')?)?';\nvar XRANGE = R++;\nsrc[XRANGE] = '^' + src[GTLT] + '\\\\s*' + src[XRANGEPLAIN] + '$';\nvar XRANGELOOSE = R++;\nsrc[XRANGELOOSE] = '^' + src[GTLT] + '\\\\s*' + src[XRANGEPLAINLOOSE] + '$';\n\n// Coercion.\n// Extract anything that could conceivably be a part of a valid semver\nvar COERCE = R++;\nsrc[COERCE] = '(?:^|[^\\\\d])' + '(\\\\d{1,' + MAX_SAFE_COMPONENT_LENGTH + '})' + '(?:\\\\.(\\\\d{1,' + MAX_SAFE_COMPONENT_LENGTH + '}))?' + '(?:\\\\.(\\\\d{1,' + MAX_SAFE_COMPONENT_LENGTH + '}))?' + '(?:$|[^\\\\d])';\n\n// Tilde ranges.\n// Meaning is \"reasonably at or greater than\"\nvar LONETILDE = R++;\nsrc[LONETILDE] = '(?:~>?)';\nvar TILDETRIM = R++;\nsrc[TILDETRIM] = '(\\\\s*)' + src[LONETILDE] + '\\\\s+';\nre[TILDETRIM] = new RegExp(src[TILDETRIM], 'g');\nvar tildeTrimReplace = '$1~';\nvar TILDE = R++;\nsrc[TILDE] = '^' + src[LONETILDE] + src[XRANGEPLAIN] + '$';\nvar TILDELOOSE = R++;\nsrc[TILDELOOSE] = '^' + src[LONETILDE] + src[XRANGEPLAINLOOSE] + '$';\n\n// Caret ranges.\n// Meaning is \"at least and backwards compatible with\"\nvar LONECARET = R++;\nsrc[LONECARET] = '(?:\\\\^)';\nvar CARETTRIM = R++;\nsrc[CARETTRIM] = '(\\\\s*)' + src[LONECARET] + '\\\\s+';\nre[CARETTRIM] = new RegExp(src[CARETTRIM], 'g');\nvar caretTrimReplace = '$1^';\nvar CARET = R++;\nsrc[CARET] = '^' + src[LONECARET] + src[XRANGEPLAIN] + '$';\nvar CARETLOOSE = R++;\nsrc[CARETLOOSE] = '^' + src[LONECARET] + src[XRANGEPLAINLOOSE] + '$';\n\n// A simple gt/lt/eq thing, or just \"\" to indicate \"any version\"\nvar COMPARATORLOOSE = R++;\nsrc[COMPARATORLOOSE] = '^' + src[GTLT] + '\\\\s*(' + LOOSEPLAIN + ')$|^$';\nvar COMPARATOR = R++;\nsrc[COMPARATOR] = '^' + src[GTLT] + '\\\\s*(' + FULLPLAIN + ')$|^$';\n\n// An expression to strip any whitespace between the gtlt and the thing\n// it modifies, so that `> 1.2.3` ==> `>1.2.3`\nvar COMPARATORTRIM = R++;\nsrc[COMPARATORTRIM] = '(\\\\s*)' + src[GTLT] + '\\\\s*(' + LOOSEPLAIN + '|' + src[XRANGEPLAIN] + ')';\n\n// this one has to use the /g flag\nre[COMPARATORTRIM] = new RegExp(src[COMPARATORTRIM], 'g');\nvar comparatorTrimReplace = '$1$2$3';\n\n// Something like `1.2.3 - 1.2.4`\n// Note that these all use the loose form, because they'll be\n// checked against either the strict or loose comparator form\n// later.\nvar HYPHENRANGE = R++;\nsrc[HYPHENRANGE] = '^\\\\s*(' + src[XRANGEPLAIN] + ')' + '\\\\s+-\\\\s+' + '(' + src[XRANGEPLAIN] + ')' + '\\\\s*$';\nvar HYPHENRANGELOOSE = R++;\nsrc[HYPHENRANGELOOSE] = '^\\\\s*(' + src[XRANGEPLAINLOOSE] + ')' + '\\\\s+-\\\\s+' + '(' + src[XRANGEPLAINLOOSE] + ')' + '\\\\s*$';\n\n// Star ranges basically just allow anything at all.\nvar STAR = R++;\nsrc[STAR] = '(<|>)?=?\\\\s*\\\\*';\n\n// Compile to actual regexp objects.\n// All are flag-free, unless they were created above with a flag.\nfor (var i = 0; i < R; i++) {\n  debug(i, src[i]);\n  if (!re[i]) re[i] = new RegExp(src[i]);\n}\nexports.parse = parse;\nfunction parse(version, options) {\n  if (!options || typeof options !== 'object') options = {\n    loose: !!options,\n    includePrerelease: false\n  };\n  if (version instanceof SemVer) return version;\n  if (typeof version !== 'string') return null;\n  if (version.length > MAX_LENGTH) return null;\n  var r = options.loose ? re[LOOSE] : re[FULL];\n  if (!r.test(version)) return null;\n  try {\n    return new SemVer(version, options);\n  } catch (er) {\n    return null;\n  }\n}\nexports.valid = valid;\nfunction valid(version, options) {\n  var v = parse(version, options);\n  return v ? v.version : null;\n}\nexports.clean = clean;\nfunction clean(version, options) {\n  var s = parse(version.trim().replace(/^[=v]+/, ''), options);\n  return s ? s.version : null;\n}\nexports.SemVer = SemVer;\nfunction SemVer(version, options) {\n  if (!options || typeof options !== 'object') options = {\n    loose: !!options,\n    includePrerelease: false\n  };\n  if (version instanceof SemVer) {\n    if (version.loose === options.loose) return version;else version = version.version;\n  } else if (typeof version !== 'string') {\n    throw new TypeError('Invalid Version: ' + version);\n  }\n  if (version.length > MAX_LENGTH) throw new TypeError('version is longer than ' + MAX_LENGTH + ' characters');\n  if (!(this instanceof SemVer)) return new SemVer(version, options);\n  debug('SemVer', version, options);\n  this.options = options;\n  this.loose = !!options.loose;\n  var m = version.trim().match(options.loose ? re[LOOSE] : re[FULL]);\n  if (!m) throw new TypeError('Invalid Version: ' + version);\n  this.raw = version;\n\n  // these are actually numbers\n  this.major = +m[1];\n  this.minor = +m[2];\n  this.patch = +m[3];\n  if (this.major > MAX_SAFE_INTEGER || this.major < 0) throw new TypeError('Invalid major version');\n  if (this.minor > MAX_SAFE_INTEGER || this.minor < 0) throw new TypeError('Invalid minor version');\n  if (this.patch > MAX_SAFE_INTEGER || this.patch < 0) throw new TypeError('Invalid patch version');\n\n  // numberify any prerelease numeric ids\n  if (!m[4]) this.prerelease = [];else this.prerelease = m[4].split('.').map(function (id) {\n    if (/^[0-9]+$/.test(id)) {\n      var num = +id;\n      if (num >= 0 && num < MAX_SAFE_INTEGER) return num;\n    }\n    return id;\n  });\n  this.build = m[5] ? m[5].split('.') : [];\n  this.format();\n}\nSemVer.prototype.format = function () {\n  this.version = this.major + '.' + this.minor + '.' + this.patch;\n  if (this.prerelease.length) this.version += '-' + this.prerelease.join('.');\n  return this.version;\n};\nSemVer.prototype.toString = function () {\n  return this.version;\n};\nSemVer.prototype.compare = function (other) {\n  debug('SemVer.compare', this.version, this.options, other);\n  if (!(other instanceof SemVer)) other = new SemVer(other, this.options);\n  return this.compareMain(other) || this.comparePre(other);\n};\nSemVer.prototype.compareMain = function (other) {\n  if (!(other instanceof SemVer)) other = new SemVer(other, this.options);\n  return compareIdentifiers(this.major, other.major) || compareIdentifiers(this.minor, other.minor) || compareIdentifiers(this.patch, other.patch);\n};\nSemVer.prototype.comparePre = function (other) {\n  if (!(other instanceof SemVer)) other = new SemVer(other, this.options);\n\n  // NOT having a prerelease is > having one\n  if (this.prerelease.length && !other.prerelease.length) return -1;else if (!this.prerelease.length && other.prerelease.length) return 1;else if (!this.prerelease.length && !other.prerelease.length) return 0;\n  var i = 0;\n  do {\n    var a = this.prerelease[i];\n    var b = other.prerelease[i];\n    debug('prerelease compare', i, a, b);\n    if (a === undefined && b === undefined) return 0;else if (b === undefined) return 1;else if (a === undefined) return -1;else if (a === b) continue;else return compareIdentifiers(a, b);\n  } while (++i);\n};\n\n// preminor will bump the version up to the next minor release, and immediately\n// down to pre-release. premajor and prepatch work the same way.\nSemVer.prototype.inc = function (release, identifier) {\n  switch (release) {\n    case 'premajor':\n      this.prerelease.length = 0;\n      this.patch = 0;\n      this.minor = 0;\n      this.major++;\n      this.inc('pre', identifier);\n      break;\n    case 'preminor':\n      this.prerelease.length = 0;\n      this.patch = 0;\n      this.minor++;\n      this.inc('pre', identifier);\n      break;\n    case 'prepatch':\n      // If this is already a prerelease, it will bump to the next version\n      // drop any prereleases that might already exist, since they are not\n      // relevant at this point.\n      this.prerelease.length = 0;\n      this.inc('patch', identifier);\n      this.inc('pre', identifier);\n      break;\n    // If the input is a non-prerelease version, this acts the same as\n    // prepatch.\n    case 'prerelease':\n      if (this.prerelease.length === 0) this.inc('patch', identifier);\n      this.inc('pre', identifier);\n      break;\n    case 'major':\n      // If this is a pre-major version, bump up to the same major version.\n      // Otherwise increment major.\n      // 1.0.0-5 bumps to 1.0.0\n      // 1.1.0 bumps to 2.0.0\n      if (this.minor !== 0 || this.patch !== 0 || this.prerelease.length === 0) this.major++;\n      this.minor = 0;\n      this.patch = 0;\n      this.prerelease = [];\n      break;\n    case 'minor':\n      // If this is a pre-minor version, bump up to the same minor version.\n      // Otherwise increment minor.\n      // 1.2.0-5 bumps to 1.2.0\n      // 1.2.1 bumps to 1.3.0\n      if (this.patch !== 0 || this.prerelease.length === 0) this.minor++;\n      this.patch = 0;\n      this.prerelease = [];\n      break;\n    case 'patch':\n      // If this is not a pre-release version, it will increment the patch.\n      // If it is a pre-release it will bump up to the same patch version.\n      // 1.2.0-5 patches to 1.2.0\n      // 1.2.0 patches to 1.2.1\n      if (this.prerelease.length === 0) this.patch++;\n      this.prerelease = [];\n      break;\n    // This probably shouldn't be used publicly.\n    // 1.0.0 \"pre\" would become 1.0.0-0 which is the wrong direction.\n    case 'pre':\n      if (this.prerelease.length === 0) this.prerelease = [0];else {\n        var i = this.prerelease.length;\n        while (--i >= 0) {\n          if (typeof this.prerelease[i] === 'number') {\n            this.prerelease[i]++;\n            i = -2;\n          }\n        }\n        if (i === -1)\n          // didn't increment anything\n          this.prerelease.push(0);\n      }\n      if (identifier) {\n        // 1.2.0-beta.1 bumps to 1.2.0-beta.2,\n        // 1.2.0-beta.fooblz or 1.2.0-beta bumps to 1.2.0-beta.0\n        if (this.prerelease[0] === identifier) {\n          if (isNaN(this.prerelease[1])) this.prerelease = [identifier, 0];\n        } else this.prerelease = [identifier, 0];\n      }\n      break;\n    default:\n      throw new Error('invalid increment argument: ' + release);\n  }\n  this.format();\n  this.raw = this.version;\n  return this;\n};\nexports.inc = inc;\nfunction inc(version, release, loose, identifier) {\n  if (typeof loose === 'string') {\n    identifier = loose;\n    loose = undefined;\n  }\n  try {\n    return new SemVer(version, loose).inc(release, identifier).version;\n  } catch (er) {\n    return null;\n  }\n}\nexports.diff = diff;\nfunction diff(version1, version2) {\n  if (eq(version1, version2)) {\n    return null;\n  } else {\n    var v1 = parse(version1);\n    var v2 = parse(version2);\n    if (v1.prerelease.length || v2.prerelease.length) {\n      for (var key in v1) {\n        if (key === 'major' || key === 'minor' || key === 'patch') {\n          if (v1[key] !== v2[key]) {\n            return 'pre' + key;\n          }\n        }\n      }\n      return 'prerelease';\n    }\n    for (var key in v1) {\n      if (key === 'major' || key === 'minor' || key === 'patch') {\n        if (v1[key] !== v2[key]) {\n          return key;\n        }\n      }\n    }\n  }\n}\nexports.compareIdentifiers = compareIdentifiers;\nvar numeric = /^[0-9]+$/;\nfunction compareIdentifiers(a, b) {\n  var anum = numeric.test(a);\n  var bnum = numeric.test(b);\n  if (anum && bnum) {\n    a = +a;\n    b = +b;\n  }\n  return anum && !bnum ? -1 : bnum && !anum ? 1 : a < b ? -1 : a > b ? 1 : 0;\n}\nexports.rcompareIdentifiers = rcompareIdentifiers;\nfunction rcompareIdentifiers(a, b) {\n  return compareIdentifiers(b, a);\n}\nexports.major = major;\nfunction major(a, loose) {\n  return new SemVer(a, loose).major;\n}\nexports.minor = minor;\nfunction minor(a, loose) {\n  return new SemVer(a, loose).minor;\n}\nexports.patch = patch;\nfunction patch(a, loose) {\n  return new SemVer(a, loose).patch;\n}\nexports.compare = compare;\nfunction compare(a, b, loose) {\n  return new SemVer(a, loose).compare(new SemVer(b, loose));\n}\nexports.compareLoose = compareLoose;\nfunction compareLoose(a, b) {\n  return compare(a, b, true);\n}\nexports.rcompare = rcompare;\nfunction rcompare(a, b, loose) {\n  return compare(b, a, loose);\n}\nexports.sort = sort;\nfunction sort(list, loose) {\n  return list.sort(function (a, b) {\n    return exports.compare(a, b, loose);\n  });\n}\nexports.rsort = rsort;\nfunction rsort(list, loose) {\n  return list.sort(function (a, b) {\n    return exports.rcompare(a, b, loose);\n  });\n}\nexports.gt = gt;\nfunction gt(a, b, loose) {\n  return compare(a, b, loose) > 0;\n}\nexports.lt = lt;\nfunction lt(a, b, loose) {\n  return compare(a, b, loose) < 0;\n}\nexports.eq = eq;\nfunction eq(a, b, loose) {\n  return compare(a, b, loose) === 0;\n}\nexports.neq = neq;\nfunction neq(a, b, loose) {\n  return compare(a, b, loose) !== 0;\n}\nexports.gte = gte;\nfunction gte(a, b, loose) {\n  return compare(a, b, loose) >= 0;\n}\nexports.lte = lte;\nfunction lte(a, b, loose) {\n  return compare(a, b, loose) <= 0;\n}\nexports.cmp = cmp;\nfunction cmp(a, op, b, loose) {\n  var ret;\n  switch (op) {\n    case '===':\n      if (typeof a === 'object') a = a.version;\n      if (typeof b === 'object') b = b.version;\n      ret = a === b;\n      break;\n    case '!==':\n      if (typeof a === 'object') a = a.version;\n      if (typeof b === 'object') b = b.version;\n      ret = a !== b;\n      break;\n    case '':\n    case '=':\n    case '==':\n      ret = eq(a, b, loose);\n      break;\n    case '!=':\n      ret = neq(a, b, loose);\n      break;\n    case '>':\n      ret = gt(a, b, loose);\n      break;\n    case '>=':\n      ret = gte(a, b, loose);\n      break;\n    case '<':\n      ret = lt(a, b, loose);\n      break;\n    case '<=':\n      ret = lte(a, b, loose);\n      break;\n    default:\n      throw new TypeError('Invalid operator: ' + op);\n  }\n  return ret;\n}\nexports.Comparator = Comparator;\nfunction Comparator(comp, options) {\n  if (!options || typeof options !== 'object') options = {\n    loose: !!options,\n    includePrerelease: false\n  };\n  if (comp instanceof Comparator) {\n    if (comp.loose === !!options.loose) return comp;else comp = comp.value;\n  }\n  if (!(this instanceof Comparator)) return new Comparator(comp, options);\n  debug('comparator', comp, options);\n  this.options = options;\n  this.loose = !!options.loose;\n  this.parse(comp);\n  if (this.semver === ANY) this.value = '';else this.value = this.operator + this.semver.version;\n  debug('comp', this);\n}\nvar ANY = {};\nComparator.prototype.parse = function (comp) {\n  var r = this.options.loose ? re[COMPARATORLOOSE] : re[COMPARATOR];\n  var m = comp.match(r);\n  if (!m) throw new TypeError('Invalid comparator: ' + comp);\n  this.operator = m[1];\n  if (this.operator === '=') this.operator = '';\n\n  // if it literally is just '>' or '' then allow anything.\n  if (!m[2]) this.semver = ANY;else this.semver = new SemVer(m[2], this.options.loose);\n};\nComparator.prototype.toString = function () {\n  return this.value;\n};\nComparator.prototype.test = function (version) {\n  debug('Comparator.test', version, this.options.loose);\n  if (this.semver === ANY) return true;\n  if (typeof version === 'string') version = new SemVer(version, this.options);\n  return cmp(version, this.operator, this.semver, this.options);\n};\nComparator.prototype.intersects = function (comp, options) {\n  if (!(comp instanceof Comparator)) {\n    throw new TypeError('a Comparator is required');\n  }\n  if (!options || typeof options !== 'object') options = {\n    loose: !!options,\n    includePrerelease: false\n  };\n  var rangeTmp;\n  if (this.operator === '') {\n    rangeTmp = new Range(comp.value, options);\n    return satisfies(this.value, rangeTmp, options);\n  } else if (comp.operator === '') {\n    rangeTmp = new Range(this.value, options);\n    return satisfies(comp.semver, rangeTmp, options);\n  }\n  var sameDirectionIncreasing = (this.operator === '>=' || this.operator === '>') && (comp.operator === '>=' || comp.operator === '>');\n  var sameDirectionDecreasing = (this.operator === '<=' || this.operator === '<') && (comp.operator === '<=' || comp.operator === '<');\n  var sameSemVer = this.semver.version === comp.semver.version;\n  var differentDirectionsInclusive = (this.operator === '>=' || this.operator === '<=') && (comp.operator === '>=' || comp.operator === '<=');\n  var oppositeDirectionsLessThan = cmp(this.semver, '<', comp.semver, options) && (this.operator === '>=' || this.operator === '>') && (comp.operator === '<=' || comp.operator === '<');\n  var oppositeDirectionsGreaterThan = cmp(this.semver, '>', comp.semver, options) && (this.operator === '<=' || this.operator === '<') && (comp.operator === '>=' || comp.operator === '>');\n  return sameDirectionIncreasing || sameDirectionDecreasing || sameSemVer && differentDirectionsInclusive || oppositeDirectionsLessThan || oppositeDirectionsGreaterThan;\n};\nexports.Range = Range;\nfunction Range(range, options) {\n  if (!options || typeof options !== 'object') options = {\n    loose: !!options,\n    includePrerelease: false\n  };\n  if (range instanceof Range) {\n    if (range.loose === !!options.loose && range.includePrerelease === !!options.includePrerelease) {\n      return range;\n    } else {\n      return new Range(range.raw, options);\n    }\n  }\n  if (range instanceof Comparator) {\n    return new Range(range.value, options);\n  }\n  if (!(this instanceof Range)) return new Range(range, options);\n  this.options = options;\n  this.loose = !!options.loose;\n  this.includePrerelease = !!options.includePrerelease;\n\n  // First, split based on boolean or ||\n  this.raw = range;\n  this.set = range.split(/\\s*\\|\\|\\s*/).map(function (range) {\n    return this.parseRange(range.trim());\n  }, this).filter(function (c) {\n    // throw out any that are not relevant for whatever reason\n    return c.length;\n  });\n  if (!this.set.length) {\n    throw new TypeError('Invalid SemVer Range: ' + range);\n  }\n  this.format();\n}\nRange.prototype.format = function () {\n  this.range = this.set.map(function (comps) {\n    return comps.join(' ').trim();\n  }).join('||').trim();\n  return this.range;\n};\nRange.prototype.toString = function () {\n  return this.range;\n};\nRange.prototype.parseRange = function (range) {\n  var loose = this.options.loose;\n  range = range.trim();\n  // `1.2.3 - 1.2.4` => `>=1.2.3 <=1.2.4`\n  var hr = loose ? re[HYPHENRANGELOOSE] : re[HYPHENRANGE];\n  range = range.replace(hr, hyphenReplace);\n  debug('hyphen replace', range);\n  // `> 1.2.3 < 1.2.5` => `>1.2.3 <1.2.5`\n  range = range.replace(re[COMPARATORTRIM], comparatorTrimReplace);\n  debug('comparator trim', range, re[COMPARATORTRIM]);\n\n  // `~ 1.2.3` => `~1.2.3`\n  range = range.replace(re[TILDETRIM], tildeTrimReplace);\n\n  // `^ 1.2.3` => `^1.2.3`\n  range = range.replace(re[CARETTRIM], caretTrimReplace);\n\n  // normalize spaces\n  range = range.split(/\\s+/).join(' ');\n\n  // At this point, the range is completely trimmed and\n  // ready to be split into comparators.\n\n  var compRe = loose ? re[COMPARATORLOOSE] : re[COMPARATOR];\n  var set = range.split(' ').map(function (comp) {\n    return parseComparator(comp, this.options);\n  }, this).join(' ').split(/\\s+/);\n  if (this.options.loose) {\n    // in loose mode, throw out any that are not valid comparators\n    set = set.filter(function (comp) {\n      return !!comp.match(compRe);\n    });\n  }\n  set = set.map(function (comp) {\n    return new Comparator(comp, this.options);\n  }, this);\n  return set;\n};\nRange.prototype.intersects = function (range, options) {\n  if (!(range instanceof Range)) {\n    throw new TypeError('a Range is required');\n  }\n  return this.set.some(function (thisComparators) {\n    return thisComparators.every(function (thisComparator) {\n      return range.set.some(function (rangeComparators) {\n        return rangeComparators.every(function (rangeComparator) {\n          return thisComparator.intersects(rangeComparator, options);\n        });\n      });\n    });\n  });\n};\n\n// Mostly just for testing and legacy API reasons\nexports.toComparators = toComparators;\nfunction toComparators(range, options) {\n  return new Range(range, options).set.map(function (comp) {\n    return comp.map(function (c) {\n      return c.value;\n    }).join(' ').trim().split(' ');\n  });\n}\n\n// comprised of xranges, tildes, stars, and gtlt's at this point.\n// already replaced the hyphen ranges\n// turn into a set of JUST comparators.\nfunction parseComparator(comp, options) {\n  debug('comp', comp, options);\n  comp = replaceCarets(comp, options);\n  debug('caret', comp);\n  comp = replaceTildes(comp, options);\n  debug('tildes', comp);\n  comp = replaceXRanges(comp, options);\n  debug('xrange', comp);\n  comp = replaceStars(comp, options);\n  debug('stars', comp);\n  return comp;\n}\nfunction isX(id) {\n  return !id || id.toLowerCase() === 'x' || id === '*';\n}\n\n// ~, ~> --> * (any, kinda silly)\n// ~2, ~2.x, ~2.x.x, ~>2, ~>2.x ~>2.x.x --> >=2.0.0 <3.0.0\n// ~2.0, ~2.0.x, ~>2.0, ~>2.0.x --> >=2.0.0 <2.1.0\n// ~1.2, ~1.2.x, ~>1.2, ~>1.2.x --> >=1.2.0 <1.3.0\n// ~1.2.3, ~>1.2.3 --> >=1.2.3 <1.3.0\n// ~1.2.0, ~>1.2.0 --> >=1.2.0 <1.3.0\nfunction replaceTildes(comp, options) {\n  return comp.trim().split(/\\s+/).map(function (comp) {\n    return replaceTilde(comp, options);\n  }).join(' ');\n}\nfunction replaceTilde(comp, options) {\n  if (!options || typeof options !== 'object') options = {\n    loose: !!options,\n    includePrerelease: false\n  };\n  var r = options.loose ? re[TILDELOOSE] : re[TILDE];\n  return comp.replace(r, function (_, M, m, p, pr) {\n    debug('tilde', comp, _, M, m, p, pr);\n    var ret;\n    if (isX(M)) ret = '';else if (isX(m)) ret = '>=' + M + '.0.0 <' + (+M + 1) + '.0.0';else if (isX(p))\n      // ~1.2 == >=1.2.0 <1.3.0\n      ret = '>=' + M + '.' + m + '.0 <' + M + '.' + (+m + 1) + '.0';else if (pr) {\n      debug('replaceTilde pr', pr);\n      if (pr.charAt(0) !== '-') pr = '-' + pr;\n      ret = '>=' + M + '.' + m + '.' + p + pr + ' <' + M + '.' + (+m + 1) + '.0';\n    } else\n      // ~1.2.3 == >=1.2.3 <1.3.0\n      ret = '>=' + M + '.' + m + '.' + p + ' <' + M + '.' + (+m + 1) + '.0';\n    debug('tilde return', ret);\n    return ret;\n  });\n}\n\n// ^ --> * (any, kinda silly)\n// ^2, ^2.x, ^2.x.x --> >=2.0.0 <3.0.0\n// ^2.0, ^2.0.x --> >=2.0.0 <3.0.0\n// ^1.2, ^1.2.x --> >=1.2.0 <2.0.0\n// ^1.2.3 --> >=1.2.3 <2.0.0\n// ^1.2.0 --> >=1.2.0 <2.0.0\nfunction replaceCarets(comp, options) {\n  return comp.trim().split(/\\s+/).map(function (comp) {\n    return replaceCaret(comp, options);\n  }).join(' ');\n}\nfunction replaceCaret(comp, options) {\n  debug('caret', comp, options);\n  if (!options || typeof options !== 'object') options = {\n    loose: !!options,\n    includePrerelease: false\n  };\n  var r = options.loose ? re[CARETLOOSE] : re[CARET];\n  return comp.replace(r, function (_, M, m, p, pr) {\n    debug('caret', comp, _, M, m, p, pr);\n    var ret;\n    if (isX(M)) ret = '';else if (isX(m)) ret = '>=' + M + '.0.0 <' + (+M + 1) + '.0.0';else if (isX(p)) {\n      if (M === '0') ret = '>=' + M + '.' + m + '.0 <' + M + '.' + (+m + 1) + '.0';else ret = '>=' + M + '.' + m + '.0 <' + (+M + 1) + '.0.0';\n    } else if (pr) {\n      debug('replaceCaret pr', pr);\n      if (pr.charAt(0) !== '-') pr = '-' + pr;\n      if (M === '0') {\n        if (m === '0') ret = '>=' + M + '.' + m + '.' + p + pr + ' <' + M + '.' + m + '.' + (+p + 1);else ret = '>=' + M + '.' + m + '.' + p + pr + ' <' + M + '.' + (+m + 1) + '.0';\n      } else ret = '>=' + M + '.' + m + '.' + p + pr + ' <' + (+M + 1) + '.0.0';\n    } else {\n      debug('no pr');\n      if (M === '0') {\n        if (m === '0') ret = '>=' + M + '.' + m + '.' + p + ' <' + M + '.' + m + '.' + (+p + 1);else ret = '>=' + M + '.' + m + '.' + p + ' <' + M + '.' + (+m + 1) + '.0';\n      } else ret = '>=' + M + '.' + m + '.' + p + ' <' + (+M + 1) + '.0.0';\n    }\n    debug('caret return', ret);\n    return ret;\n  });\n}\nfunction replaceXRanges(comp, options) {\n  debug('replaceXRanges', comp, options);\n  return comp.split(/\\s+/).map(function (comp) {\n    return replaceXRange(comp, options);\n  }).join(' ');\n}\nfunction replaceXRange(comp, options) {\n  comp = comp.trim();\n  if (!options || typeof options !== 'object') options = {\n    loose: !!options,\n    includePrerelease: false\n  };\n  var r = options.loose ? re[XRANGELOOSE] : re[XRANGE];\n  return comp.replace(r, function (ret, gtlt, M, m, p, pr) {\n    debug('xRange', comp, ret, gtlt, M, m, p, pr);\n    var xM = isX(M);\n    var xm = xM || isX(m);\n    var xp = xm || isX(p);\n    var anyX = xp;\n    if (gtlt === '=' && anyX) gtlt = '';\n    if (xM) {\n      if (gtlt === '>' || gtlt === '<') {\n        // nothing is allowed\n        ret = '<0.0.0';\n      } else {\n        // nothing is forbidden\n        ret = '*';\n      }\n    } else if (gtlt && anyX) {\n      // replace X with 0\n      if (xm) m = 0;\n      if (xp) p = 0;\n      if (gtlt === '>') {\n        // >1 => >=2.0.0\n        // >1.2 => >=1.3.0\n        // >1.2.3 => >= 1.2.4\n        gtlt = '>=';\n        if (xm) {\n          M = +M + 1;\n          m = 0;\n          p = 0;\n        } else if (xp) {\n          m = +m + 1;\n          p = 0;\n        }\n      } else if (gtlt === '<=') {\n        // <=0.7.x is actually <0.8.0, since any 0.7.x should\n        // pass.  Similarly, <=7.x is actually <8.0.0, etc.\n        gtlt = '<';\n        if (xm) M = +M + 1;else m = +m + 1;\n      }\n      ret = gtlt + M + '.' + m + '.' + p;\n    } else if (xm) {\n      ret = '>=' + M + '.0.0 <' + (+M + 1) + '.0.0';\n    } else if (xp) {\n      ret = '>=' + M + '.' + m + '.0 <' + M + '.' + (+m + 1) + '.0';\n    }\n    debug('xRange return', ret);\n    return ret;\n  });\n}\n\n// Because * is AND-ed with everything else in the comparator,\n// and '' means \"any version\", just remove the *s entirely.\nfunction replaceStars(comp, options) {\n  debug('replaceStars', comp, options);\n  // Looseness is ignored here.  star is always as loose as it gets!\n  return comp.trim().replace(re[STAR], '');\n}\n\n// This function is passed to string.replace(re[HYPHENRANGE])\n// M, m, patch, prerelease, build\n// 1.2 - 3.4.5 => >=1.2.0 <=3.4.5\n// 1.2.3 - 3.4 => >=1.2.0 <3.5.0 Any 3.4.x will do\n// 1.2 - 3.4 => >=1.2.0 <3.5.0\nfunction hyphenReplace($0, from, fM, fm, fp, fpr, fb, to, tM, tm, tp, tpr, tb) {\n  if (isX(fM)) from = '';else if (isX(fm)) from = '>=' + fM + '.0.0';else if (isX(fp)) from = '>=' + fM + '.' + fm + '.0';else from = '>=' + from;\n  if (isX(tM)) to = '';else if (isX(tm)) to = '<' + (+tM + 1) + '.0.0';else if (isX(tp)) to = '<' + tM + '.' + (+tm + 1) + '.0';else if (tpr) to = '<=' + tM + '.' + tm + '.' + tp + '-' + tpr;else to = '<=' + to;\n  return (from + ' ' + to).trim();\n}\n\n// if ANY of the sets match ALL of its comparators, then pass\nRange.prototype.test = function (version) {\n  if (!version) return false;\n  if (typeof version === 'string') version = new SemVer(version, this.options);\n  for (var i = 0; i < this.set.length; i++) {\n    if (testSet(this.set[i], version, this.options)) return true;\n  }\n  return false;\n};\nfunction testSet(set, version, options) {\n  for (var i = 0; i < set.length; i++) {\n    if (!set[i].test(version)) return false;\n  }\n  if (!options) options = {};\n  if (version.prerelease.length && !options.includePrerelease) {\n    // Find the set of versions that are allowed to have prereleases\n    // For example, ^1.2.3-pr.1 desugars to >=1.2.3-pr.1 <2.0.0\n    // That should allow `1.2.3-pr.2` to pass.\n    // However, `1.2.4-alpha.notready` should NOT be allowed,\n    // even though it's within the range set by the comparators.\n    for (var i = 0; i < set.length; i++) {\n      debug(set[i].semver);\n      if (set[i].semver === ANY) continue;\n      if (set[i].semver.prerelease.length > 0) {\n        var allowed = set[i].semver;\n        if (allowed.major === version.major && allowed.minor === version.minor && allowed.patch === version.patch) return true;\n      }\n    }\n\n    // Version has a -pre, but it's not one of the ones we like.\n    return false;\n  }\n  return true;\n}\nexports.satisfies = satisfies;\nfunction satisfies(version, range, options) {\n  try {\n    range = new Range(range, options);\n  } catch (er) {\n    return false;\n  }\n  return range.test(version);\n}\nexports.maxSatisfying = maxSatisfying;\nfunction maxSatisfying(versions, range, options) {\n  var max = null;\n  var maxSV = null;\n  try {\n    var rangeObj = new Range(range, options);\n  } catch (er) {\n    return null;\n  }\n  versions.forEach(function (v) {\n    if (rangeObj.test(v)) {\n      // satisfies(v, range, options)\n      if (!max || maxSV.compare(v) === -1) {\n        // compare(max, v, true)\n        max = v;\n        maxSV = new SemVer(max, options);\n      }\n    }\n  });\n  return max;\n}\nexports.minSatisfying = minSatisfying;\nfunction minSatisfying(versions, range, options) {\n  var min = null;\n  var minSV = null;\n  try {\n    var rangeObj = new Range(range, options);\n  } catch (er) {\n    return null;\n  }\n  versions.forEach(function (v) {\n    if (rangeObj.test(v)) {\n      // satisfies(v, range, options)\n      if (!min || minSV.compare(v) === 1) {\n        // compare(min, v, true)\n        min = v;\n        minSV = new SemVer(min, options);\n      }\n    }\n  });\n  return min;\n}\nexports.validRange = validRange;\nfunction validRange(range, options) {\n  try {\n    // Return '*' instead of '' so that truthiness works.\n    // This will throw if it's invalid anyway\n    return new Range(range, options).range || '*';\n  } catch (er) {\n    return null;\n  }\n}\n\n// Determine if version is less than all the versions possible in the range\nexports.ltr = ltr;\nfunction ltr(version, range, options) {\n  return outside(version, range, '<', options);\n}\n\n// Determine if version is greater than all the versions possible in the range.\nexports.gtr = gtr;\nfunction gtr(version, range, options) {\n  return outside(version, range, '>', options);\n}\nexports.outside = outside;\nfunction outside(version, range, hilo, options) {\n  version = new SemVer(version, options);\n  range = new Range(range, options);\n  var gtfn, ltefn, ltfn, comp, ecomp;\n  switch (hilo) {\n    case '>':\n      gtfn = gt;\n      ltefn = lte;\n      ltfn = lt;\n      comp = '>';\n      ecomp = '>=';\n      break;\n    case '<':\n      gtfn = lt;\n      ltefn = gte;\n      ltfn = gt;\n      comp = '<';\n      ecomp = '<=';\n      break;\n    default:\n      throw new TypeError('Must provide a hilo val of \"<\" or \">\"');\n  }\n\n  // If it satisifes the range it is not outside\n  if (satisfies(version, range, options)) {\n    return false;\n  }\n\n  // From now on, variable terms are as if we're in \"gtr\" mode.\n  // but note that everything is flipped for the \"ltr\" function.\n\n  for (var i = 0; i < range.set.length; ++i) {\n    var comparators = range.set[i];\n    var high = null;\n    var low = null;\n    comparators.forEach(function (comparator) {\n      if (comparator.semver === ANY) {\n        comparator = new Comparator('>=0.0.0');\n      }\n      high = high || comparator;\n      low = low || comparator;\n      if (gtfn(comparator.semver, high.semver, options)) {\n        high = comparator;\n      } else if (ltfn(comparator.semver, low.semver, options)) {\n        low = comparator;\n      }\n    });\n\n    // If the edge version comparator has a operator then our version\n    // isn't outside it\n    if (high.operator === comp || high.operator === ecomp) {\n      return false;\n    }\n\n    // If the lowest version comparator has an operator and our version\n    // is less than it then it isn't higher than the range\n    if ((!low.operator || low.operator === comp) && ltefn(version, low.semver)) {\n      return false;\n    } else if (low.operator === ecomp && ltfn(version, low.semver)) {\n      return false;\n    }\n  }\n  return true;\n}\nexports.prerelease = prerelease;\nfunction prerelease(version, options) {\n  var parsed = parse(version, options);\n  return parsed && parsed.prerelease.length ? parsed.prerelease : null;\n}\nexports.intersects = intersects;\nfunction intersects(r1, r2, options) {\n  r1 = new Range(r1, options);\n  r2 = new Range(r2, options);\n  return r1.intersects(r2);\n}\nexports.coerce = coerce;\nfunction coerce(version) {\n  if (version instanceof SemVer) return version;\n  if (typeof version !== 'string') return null;\n  var match = version.match(re[COERCE]);\n  if (match == null) return null;\n  return parse((match[1] || '0') + '.' + (match[2] || '0') + '.' + (match[3] || '0'));\n}","map":{"version":3,"names":["exports","module","SemVer","debug","process","env","NODE_DEBUG","test","args","Array","prototype","slice","call","arguments","unshift","console","log","apply","SEMVER_SPEC_VERSION","MAX_LENGTH","MAX_SAFE_INTEGER","Number","MAX_SAFE_COMPONENT_LENGTH","re","src","R","NUMERICIDENTIFIER","NUMERICIDENTIFIERLOOSE","NONNUMERICIDENTIFIER","MAINVERSION","MAINVERSIONLOOSE","PRERELEASEIDENTIFIER","PRERELEASEIDENTIFIERLOOSE","PRERELEASE","PRERELEASELOOSE","BUILDIDENTIFIER","BUILD","FULL","FULLPLAIN","LOOSEPLAIN","LOOSE","GTLT","XRANGEIDENTIFIERLOOSE","XRANGEIDENTIFIER","XRANGEPLAIN","XRANGEPLAINLOOSE","XRANGE","XRANGELOOSE","COERCE","LONETILDE","TILDETRIM","RegExp","tildeTrimReplace","TILDE","TILDELOOSE","LONECARET","CARETTRIM","caretTrimReplace","CARET","CARETLOOSE","COMPARATORLOOSE","COMPARATOR","COMPARATORTRIM","comparatorTrimReplace","HYPHENRANGE","HYPHENRANGELOOSE","STAR","i","parse","version","options","loose","includePrerelease","length","r","er","valid","v","clean","s","trim","replace","TypeError","m","match","raw","major","minor","patch","prerelease","split","map","id","num","build","format","join","toString","compare","other","compareMain","comparePre","compareIdentifiers","a","b","undefined","inc","release","identifier","push","isNaN","Error","diff","version1","version2","eq","v1","v2","key","numeric","anum","bnum","rcompareIdentifiers","compareLoose","rcompare","sort","list","rsort","gt","lt","neq","gte","lte","cmp","op","ret","Comparator","comp","value","semver","ANY","operator","intersects","rangeTmp","Range","satisfies","sameDirectionIncreasing","sameDirectionDecreasing","sameSemVer","differentDirectionsInclusive","oppositeDirectionsLessThan","oppositeDirectionsGreaterThan","range","set","parseRange","filter","c","comps","hr","hyphenReplace","compRe","parseComparator","some","thisComparators","every","thisComparator","rangeComparators","rangeComparator","toComparators","replaceCarets","replaceTildes","replaceXRanges","replaceStars","isX","toLowerCase","replaceTilde","_","M","p","pr","charAt","replaceCaret","replaceXRange","gtlt","xM","xm","xp","anyX","$0","from","fM","fm","fp","fpr","fb","to","tM","tm","tp","tpr","tb","testSet","allowed","maxSatisfying","versions","max","maxSV","rangeObj","forEach","minSatisfying","min","minSV","validRange","ltr","outside","gtr","hilo","gtfn","ltefn","ltfn","ecomp","comparators","high","low","comparator","parsed","r1","r2","coerce"],"sources":["/home/user/Рабочий стол/pizza/project/node_modules/semver/semver.js"],"sourcesContent":["exports = module.exports = SemVer;\n\n// The debug function is excluded entirely from the minified version.\n/* nomin */ var debug;\n/* nomin */ if (typeof process === 'object' &&\n    /* nomin */ process.env &&\n    /* nomin */ process.env.NODE_DEBUG &&\n    /* nomin */ /\\bsemver\\b/i.test(process.env.NODE_DEBUG))\n  /* nomin */ debug = function() {\n    /* nomin */ var args = Array.prototype.slice.call(arguments, 0);\n    /* nomin */ args.unshift('SEMVER');\n    /* nomin */ console.log.apply(console, args);\n    /* nomin */ };\n/* nomin */ else\n  /* nomin */ debug = function() {};\n\n// Note: this is the semver.org version of the spec that it implements\n// Not necessarily the package version of this code.\nexports.SEMVER_SPEC_VERSION = '2.0.0';\n\nvar MAX_LENGTH = 256;\nvar MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER || 9007199254740991;\n\n// Max safe segment length for coercion.\nvar MAX_SAFE_COMPONENT_LENGTH = 16;\n\n// The actual regexps go on exports.re\nvar re = exports.re = [];\nvar src = exports.src = [];\nvar R = 0;\n\n// The following Regular Expressions can be used for tokenizing,\n// validating, and parsing SemVer version strings.\n\n// ## Numeric Identifier\n// A single `0`, or a non-zero digit followed by zero or more digits.\n\nvar NUMERICIDENTIFIER = R++;\nsrc[NUMERICIDENTIFIER] = '0|[1-9]\\\\d*';\nvar NUMERICIDENTIFIERLOOSE = R++;\nsrc[NUMERICIDENTIFIERLOOSE] = '[0-9]+';\n\n\n// ## Non-numeric Identifier\n// Zero or more digits, followed by a letter or hyphen, and then zero or\n// more letters, digits, or hyphens.\n\nvar NONNUMERICIDENTIFIER = R++;\nsrc[NONNUMERICIDENTIFIER] = '\\\\d*[a-zA-Z-][a-zA-Z0-9-]*';\n\n\n// ## Main Version\n// Three dot-separated numeric identifiers.\n\nvar MAINVERSION = R++;\nsrc[MAINVERSION] = '(' + src[NUMERICIDENTIFIER] + ')\\\\.' +\n                   '(' + src[NUMERICIDENTIFIER] + ')\\\\.' +\n                   '(' + src[NUMERICIDENTIFIER] + ')';\n\nvar MAINVERSIONLOOSE = R++;\nsrc[MAINVERSIONLOOSE] = '(' + src[NUMERICIDENTIFIERLOOSE] + ')\\\\.' +\n                        '(' + src[NUMERICIDENTIFIERLOOSE] + ')\\\\.' +\n                        '(' + src[NUMERICIDENTIFIERLOOSE] + ')';\n\n// ## Pre-release Version Identifier\n// A numeric identifier, or a non-numeric identifier.\n\nvar PRERELEASEIDENTIFIER = R++;\nsrc[PRERELEASEIDENTIFIER] = '(?:' + src[NUMERICIDENTIFIER] +\n                            '|' + src[NONNUMERICIDENTIFIER] + ')';\n\nvar PRERELEASEIDENTIFIERLOOSE = R++;\nsrc[PRERELEASEIDENTIFIERLOOSE] = '(?:' + src[NUMERICIDENTIFIERLOOSE] +\n                                 '|' + src[NONNUMERICIDENTIFIER] + ')';\n\n\n// ## Pre-release Version\n// Hyphen, followed by one or more dot-separated pre-release version\n// identifiers.\n\nvar PRERELEASE = R++;\nsrc[PRERELEASE] = '(?:-(' + src[PRERELEASEIDENTIFIER] +\n                  '(?:\\\\.' + src[PRERELEASEIDENTIFIER] + ')*))';\n\nvar PRERELEASELOOSE = R++;\nsrc[PRERELEASELOOSE] = '(?:-?(' + src[PRERELEASEIDENTIFIERLOOSE] +\n                       '(?:\\\\.' + src[PRERELEASEIDENTIFIERLOOSE] + ')*))';\n\n// ## Build Metadata Identifier\n// Any combination of digits, letters, or hyphens.\n\nvar BUILDIDENTIFIER = R++;\nsrc[BUILDIDENTIFIER] = '[0-9A-Za-z-]+';\n\n// ## Build Metadata\n// Plus sign, followed by one or more period-separated build metadata\n// identifiers.\n\nvar BUILD = R++;\nsrc[BUILD] = '(?:\\\\+(' + src[BUILDIDENTIFIER] +\n             '(?:\\\\.' + src[BUILDIDENTIFIER] + ')*))';\n\n\n// ## Full Version String\n// A main version, followed optionally by a pre-release version and\n// build metadata.\n\n// Note that the only major, minor, patch, and pre-release sections of\n// the version string are capturing groups.  The build metadata is not a\n// capturing group, because it should not ever be used in version\n// comparison.\n\nvar FULL = R++;\nvar FULLPLAIN = 'v?' + src[MAINVERSION] +\n                src[PRERELEASE] + '?' +\n                src[BUILD] + '?';\n\nsrc[FULL] = '^' + FULLPLAIN + '$';\n\n// like full, but allows v1.2.3 and =1.2.3, which people do sometimes.\n// also, 1.0.0alpha1 (prerelease without the hyphen) which is pretty\n// common in the npm registry.\nvar LOOSEPLAIN = '[v=\\\\s]*' + src[MAINVERSIONLOOSE] +\n                 src[PRERELEASELOOSE] + '?' +\n                 src[BUILD] + '?';\n\nvar LOOSE = R++;\nsrc[LOOSE] = '^' + LOOSEPLAIN + '$';\n\nvar GTLT = R++;\nsrc[GTLT] = '((?:<|>)?=?)';\n\n// Something like \"2.*\" or \"1.2.x\".\n// Note that \"x.x\" is a valid xRange identifer, meaning \"any version\"\n// Only the first item is strictly required.\nvar XRANGEIDENTIFIERLOOSE = R++;\nsrc[XRANGEIDENTIFIERLOOSE] = src[NUMERICIDENTIFIERLOOSE] + '|x|X|\\\\*';\nvar XRANGEIDENTIFIER = R++;\nsrc[XRANGEIDENTIFIER] = src[NUMERICIDENTIFIER] + '|x|X|\\\\*';\n\nvar XRANGEPLAIN = R++;\nsrc[XRANGEPLAIN] = '[v=\\\\s]*(' + src[XRANGEIDENTIFIER] + ')' +\n                   '(?:\\\\.(' + src[XRANGEIDENTIFIER] + ')' +\n                   '(?:\\\\.(' + src[XRANGEIDENTIFIER] + ')' +\n                   '(?:' + src[PRERELEASE] + ')?' +\n                   src[BUILD] + '?' +\n                   ')?)?';\n\nvar XRANGEPLAINLOOSE = R++;\nsrc[XRANGEPLAINLOOSE] = '[v=\\\\s]*(' + src[XRANGEIDENTIFIERLOOSE] + ')' +\n                        '(?:\\\\.(' + src[XRANGEIDENTIFIERLOOSE] + ')' +\n                        '(?:\\\\.(' + src[XRANGEIDENTIFIERLOOSE] + ')' +\n                        '(?:' + src[PRERELEASELOOSE] + ')?' +\n                        src[BUILD] + '?' +\n                        ')?)?';\n\nvar XRANGE = R++;\nsrc[XRANGE] = '^' + src[GTLT] + '\\\\s*' + src[XRANGEPLAIN] + '$';\nvar XRANGELOOSE = R++;\nsrc[XRANGELOOSE] = '^' + src[GTLT] + '\\\\s*' + src[XRANGEPLAINLOOSE] + '$';\n\n// Coercion.\n// Extract anything that could conceivably be a part of a valid semver\nvar COERCE = R++;\nsrc[COERCE] = '(?:^|[^\\\\d])' +\n              '(\\\\d{1,' + MAX_SAFE_COMPONENT_LENGTH + '})' +\n              '(?:\\\\.(\\\\d{1,' + MAX_SAFE_COMPONENT_LENGTH + '}))?' +\n              '(?:\\\\.(\\\\d{1,' + MAX_SAFE_COMPONENT_LENGTH + '}))?' +\n              '(?:$|[^\\\\d])';\n\n// Tilde ranges.\n// Meaning is \"reasonably at or greater than\"\nvar LONETILDE = R++;\nsrc[LONETILDE] = '(?:~>?)';\n\nvar TILDETRIM = R++;\nsrc[TILDETRIM] = '(\\\\s*)' + src[LONETILDE] + '\\\\s+';\nre[TILDETRIM] = new RegExp(src[TILDETRIM], 'g');\nvar tildeTrimReplace = '$1~';\n\nvar TILDE = R++;\nsrc[TILDE] = '^' + src[LONETILDE] + src[XRANGEPLAIN] + '$';\nvar TILDELOOSE = R++;\nsrc[TILDELOOSE] = '^' + src[LONETILDE] + src[XRANGEPLAINLOOSE] + '$';\n\n// Caret ranges.\n// Meaning is \"at least and backwards compatible with\"\nvar LONECARET = R++;\nsrc[LONECARET] = '(?:\\\\^)';\n\nvar CARETTRIM = R++;\nsrc[CARETTRIM] = '(\\\\s*)' + src[LONECARET] + '\\\\s+';\nre[CARETTRIM] = new RegExp(src[CARETTRIM], 'g');\nvar caretTrimReplace = '$1^';\n\nvar CARET = R++;\nsrc[CARET] = '^' + src[LONECARET] + src[XRANGEPLAIN] + '$';\nvar CARETLOOSE = R++;\nsrc[CARETLOOSE] = '^' + src[LONECARET] + src[XRANGEPLAINLOOSE] + '$';\n\n// A simple gt/lt/eq thing, or just \"\" to indicate \"any version\"\nvar COMPARATORLOOSE = R++;\nsrc[COMPARATORLOOSE] = '^' + src[GTLT] + '\\\\s*(' + LOOSEPLAIN + ')$|^$';\nvar COMPARATOR = R++;\nsrc[COMPARATOR] = '^' + src[GTLT] + '\\\\s*(' + FULLPLAIN + ')$|^$';\n\n\n// An expression to strip any whitespace between the gtlt and the thing\n// it modifies, so that `> 1.2.3` ==> `>1.2.3`\nvar COMPARATORTRIM = R++;\nsrc[COMPARATORTRIM] = '(\\\\s*)' + src[GTLT] +\n                      '\\\\s*(' + LOOSEPLAIN + '|' + src[XRANGEPLAIN] + ')';\n\n// this one has to use the /g flag\nre[COMPARATORTRIM] = new RegExp(src[COMPARATORTRIM], 'g');\nvar comparatorTrimReplace = '$1$2$3';\n\n\n// Something like `1.2.3 - 1.2.4`\n// Note that these all use the loose form, because they'll be\n// checked against either the strict or loose comparator form\n// later.\nvar HYPHENRANGE = R++;\nsrc[HYPHENRANGE] = '^\\\\s*(' + src[XRANGEPLAIN] + ')' +\n                   '\\\\s+-\\\\s+' +\n                   '(' + src[XRANGEPLAIN] + ')' +\n                   '\\\\s*$';\n\nvar HYPHENRANGELOOSE = R++;\nsrc[HYPHENRANGELOOSE] = '^\\\\s*(' + src[XRANGEPLAINLOOSE] + ')' +\n                        '\\\\s+-\\\\s+' +\n                        '(' + src[XRANGEPLAINLOOSE] + ')' +\n                        '\\\\s*$';\n\n// Star ranges basically just allow anything at all.\nvar STAR = R++;\nsrc[STAR] = '(<|>)?=?\\\\s*\\\\*';\n\n// Compile to actual regexp objects.\n// All are flag-free, unless they were created above with a flag.\nfor (var i = 0; i < R; i++) {\n  debug(i, src[i]);\n  if (!re[i])\n    re[i] = new RegExp(src[i]);\n}\n\nexports.parse = parse;\nfunction parse(version, options) {\n  if (!options || typeof options !== 'object')\n    options = { loose: !!options, includePrerelease: false }\n\n  if (version instanceof SemVer)\n    return version;\n\n  if (typeof version !== 'string')\n    return null;\n\n  if (version.length > MAX_LENGTH)\n    return null;\n\n  var r = options.loose ? re[LOOSE] : re[FULL];\n  if (!r.test(version))\n    return null;\n\n  try {\n    return new SemVer(version, options);\n  } catch (er) {\n    return null;\n  }\n}\n\nexports.valid = valid;\nfunction valid(version, options) {\n  var v = parse(version, options);\n  return v ? v.version : null;\n}\n\n\nexports.clean = clean;\nfunction clean(version, options) {\n  var s = parse(version.trim().replace(/^[=v]+/, ''), options);\n  return s ? s.version : null;\n}\n\nexports.SemVer = SemVer;\n\nfunction SemVer(version, options) {\n  if (!options || typeof options !== 'object')\n    options = { loose: !!options, includePrerelease: false }\n  if (version instanceof SemVer) {\n    if (version.loose === options.loose)\n      return version;\n    else\n      version = version.version;\n  } else if (typeof version !== 'string') {\n    throw new TypeError('Invalid Version: ' + version);\n  }\n\n  if (version.length > MAX_LENGTH)\n    throw new TypeError('version is longer than ' + MAX_LENGTH + ' characters')\n\n  if (!(this instanceof SemVer))\n    return new SemVer(version, options);\n\n  debug('SemVer', version, options);\n  this.options = options;\n  this.loose = !!options.loose;\n\n  var m = version.trim().match(options.loose ? re[LOOSE] : re[FULL]);\n\n  if (!m)\n    throw new TypeError('Invalid Version: ' + version);\n\n  this.raw = version;\n\n  // these are actually numbers\n  this.major = +m[1];\n  this.minor = +m[2];\n  this.patch = +m[3];\n\n  if (this.major > MAX_SAFE_INTEGER || this.major < 0)\n    throw new TypeError('Invalid major version')\n\n  if (this.minor > MAX_SAFE_INTEGER || this.minor < 0)\n    throw new TypeError('Invalid minor version')\n\n  if (this.patch > MAX_SAFE_INTEGER || this.patch < 0)\n    throw new TypeError('Invalid patch version')\n\n  // numberify any prerelease numeric ids\n  if (!m[4])\n    this.prerelease = [];\n  else\n    this.prerelease = m[4].split('.').map(function(id) {\n      if (/^[0-9]+$/.test(id)) {\n        var num = +id;\n        if (num >= 0 && num < MAX_SAFE_INTEGER)\n          return num;\n      }\n      return id;\n    });\n\n  this.build = m[5] ? m[5].split('.') : [];\n  this.format();\n}\n\nSemVer.prototype.format = function() {\n  this.version = this.major + '.' + this.minor + '.' + this.patch;\n  if (this.prerelease.length)\n    this.version += '-' + this.prerelease.join('.');\n  return this.version;\n};\n\nSemVer.prototype.toString = function() {\n  return this.version;\n};\n\nSemVer.prototype.compare = function(other) {\n  debug('SemVer.compare', this.version, this.options, other);\n  if (!(other instanceof SemVer))\n    other = new SemVer(other, this.options);\n\n  return this.compareMain(other) || this.comparePre(other);\n};\n\nSemVer.prototype.compareMain = function(other) {\n  if (!(other instanceof SemVer))\n    other = new SemVer(other, this.options);\n\n  return compareIdentifiers(this.major, other.major) ||\n         compareIdentifiers(this.minor, other.minor) ||\n         compareIdentifiers(this.patch, other.patch);\n};\n\nSemVer.prototype.comparePre = function(other) {\n  if (!(other instanceof SemVer))\n    other = new SemVer(other, this.options);\n\n  // NOT having a prerelease is > having one\n  if (this.prerelease.length && !other.prerelease.length)\n    return -1;\n  else if (!this.prerelease.length && other.prerelease.length)\n    return 1;\n  else if (!this.prerelease.length && !other.prerelease.length)\n    return 0;\n\n  var i = 0;\n  do {\n    var a = this.prerelease[i];\n    var b = other.prerelease[i];\n    debug('prerelease compare', i, a, b);\n    if (a === undefined && b === undefined)\n      return 0;\n    else if (b === undefined)\n      return 1;\n    else if (a === undefined)\n      return -1;\n    else if (a === b)\n      continue;\n    else\n      return compareIdentifiers(a, b);\n  } while (++i);\n};\n\n// preminor will bump the version up to the next minor release, and immediately\n// down to pre-release. premajor and prepatch work the same way.\nSemVer.prototype.inc = function(release, identifier) {\n  switch (release) {\n    case 'premajor':\n      this.prerelease.length = 0;\n      this.patch = 0;\n      this.minor = 0;\n      this.major++;\n      this.inc('pre', identifier);\n      break;\n    case 'preminor':\n      this.prerelease.length = 0;\n      this.patch = 0;\n      this.minor++;\n      this.inc('pre', identifier);\n      break;\n    case 'prepatch':\n      // If this is already a prerelease, it will bump to the next version\n      // drop any prereleases that might already exist, since they are not\n      // relevant at this point.\n      this.prerelease.length = 0;\n      this.inc('patch', identifier);\n      this.inc('pre', identifier);\n      break;\n    // If the input is a non-prerelease version, this acts the same as\n    // prepatch.\n    case 'prerelease':\n      if (this.prerelease.length === 0)\n        this.inc('patch', identifier);\n      this.inc('pre', identifier);\n      break;\n\n    case 'major':\n      // If this is a pre-major version, bump up to the same major version.\n      // Otherwise increment major.\n      // 1.0.0-5 bumps to 1.0.0\n      // 1.1.0 bumps to 2.0.0\n      if (this.minor !== 0 || this.patch !== 0 || this.prerelease.length === 0)\n        this.major++;\n      this.minor = 0;\n      this.patch = 0;\n      this.prerelease = [];\n      break;\n    case 'minor':\n      // If this is a pre-minor version, bump up to the same minor version.\n      // Otherwise increment minor.\n      // 1.2.0-5 bumps to 1.2.0\n      // 1.2.1 bumps to 1.3.0\n      if (this.patch !== 0 || this.prerelease.length === 0)\n        this.minor++;\n      this.patch = 0;\n      this.prerelease = [];\n      break;\n    case 'patch':\n      // If this is not a pre-release version, it will increment the patch.\n      // If it is a pre-release it will bump up to the same patch version.\n      // 1.2.0-5 patches to 1.2.0\n      // 1.2.0 patches to 1.2.1\n      if (this.prerelease.length === 0)\n        this.patch++;\n      this.prerelease = [];\n      break;\n    // This probably shouldn't be used publicly.\n    // 1.0.0 \"pre\" would become 1.0.0-0 which is the wrong direction.\n    case 'pre':\n      if (this.prerelease.length === 0)\n        this.prerelease = [0];\n      else {\n        var i = this.prerelease.length;\n        while (--i >= 0) {\n          if (typeof this.prerelease[i] === 'number') {\n            this.prerelease[i]++;\n            i = -2;\n          }\n        }\n        if (i === -1) // didn't increment anything\n          this.prerelease.push(0);\n      }\n      if (identifier) {\n        // 1.2.0-beta.1 bumps to 1.2.0-beta.2,\n        // 1.2.0-beta.fooblz or 1.2.0-beta bumps to 1.2.0-beta.0\n        if (this.prerelease[0] === identifier) {\n          if (isNaN(this.prerelease[1]))\n            this.prerelease = [identifier, 0];\n        } else\n          this.prerelease = [identifier, 0];\n      }\n      break;\n\n    default:\n      throw new Error('invalid increment argument: ' + release);\n  }\n  this.format();\n  this.raw = this.version;\n  return this;\n};\n\nexports.inc = inc;\nfunction inc(version, release, loose, identifier) {\n  if (typeof(loose) === 'string') {\n    identifier = loose;\n    loose = undefined;\n  }\n\n  try {\n    return new SemVer(version, loose).inc(release, identifier).version;\n  } catch (er) {\n    return null;\n  }\n}\n\nexports.diff = diff;\nfunction diff(version1, version2) {\n  if (eq(version1, version2)) {\n    return null;\n  } else {\n    var v1 = parse(version1);\n    var v2 = parse(version2);\n    if (v1.prerelease.length || v2.prerelease.length) {\n      for (var key in v1) {\n        if (key === 'major' || key === 'minor' || key === 'patch') {\n          if (v1[key] !== v2[key]) {\n            return 'pre'+key;\n          }\n        }\n      }\n      return 'prerelease';\n    }\n    for (var key in v1) {\n      if (key === 'major' || key === 'minor' || key === 'patch') {\n        if (v1[key] !== v2[key]) {\n          return key;\n        }\n      }\n    }\n  }\n}\n\nexports.compareIdentifiers = compareIdentifiers;\n\nvar numeric = /^[0-9]+$/;\nfunction compareIdentifiers(a, b) {\n  var anum = numeric.test(a);\n  var bnum = numeric.test(b);\n\n  if (anum && bnum) {\n    a = +a;\n    b = +b;\n  }\n\n  return (anum && !bnum) ? -1 :\n         (bnum && !anum) ? 1 :\n         a < b ? -1 :\n         a > b ? 1 :\n         0;\n}\n\nexports.rcompareIdentifiers = rcompareIdentifiers;\nfunction rcompareIdentifiers(a, b) {\n  return compareIdentifiers(b, a);\n}\n\nexports.major = major;\nfunction major(a, loose) {\n  return new SemVer(a, loose).major;\n}\n\nexports.minor = minor;\nfunction minor(a, loose) {\n  return new SemVer(a, loose).minor;\n}\n\nexports.patch = patch;\nfunction patch(a, loose) {\n  return new SemVer(a, loose).patch;\n}\n\nexports.compare = compare;\nfunction compare(a, b, loose) {\n  return new SemVer(a, loose).compare(new SemVer(b, loose));\n}\n\nexports.compareLoose = compareLoose;\nfunction compareLoose(a, b) {\n  return compare(a, b, true);\n}\n\nexports.rcompare = rcompare;\nfunction rcompare(a, b, loose) {\n  return compare(b, a, loose);\n}\n\nexports.sort = sort;\nfunction sort(list, loose) {\n  return list.sort(function(a, b) {\n    return exports.compare(a, b, loose);\n  });\n}\n\nexports.rsort = rsort;\nfunction rsort(list, loose) {\n  return list.sort(function(a, b) {\n    return exports.rcompare(a, b, loose);\n  });\n}\n\nexports.gt = gt;\nfunction gt(a, b, loose) {\n  return compare(a, b, loose) > 0;\n}\n\nexports.lt = lt;\nfunction lt(a, b, loose) {\n  return compare(a, b, loose) < 0;\n}\n\nexports.eq = eq;\nfunction eq(a, b, loose) {\n  return compare(a, b, loose) === 0;\n}\n\nexports.neq = neq;\nfunction neq(a, b, loose) {\n  return compare(a, b, loose) !== 0;\n}\n\nexports.gte = gte;\nfunction gte(a, b, loose) {\n  return compare(a, b, loose) >= 0;\n}\n\nexports.lte = lte;\nfunction lte(a, b, loose) {\n  return compare(a, b, loose) <= 0;\n}\n\nexports.cmp = cmp;\nfunction cmp(a, op, b, loose) {\n  var ret;\n  switch (op) {\n    case '===':\n      if (typeof a === 'object') a = a.version;\n      if (typeof b === 'object') b = b.version;\n      ret = a === b;\n      break;\n    case '!==':\n      if (typeof a === 'object') a = a.version;\n      if (typeof b === 'object') b = b.version;\n      ret = a !== b;\n      break;\n    case '': case '=': case '==': ret = eq(a, b, loose); break;\n    case '!=': ret = neq(a, b, loose); break;\n    case '>': ret = gt(a, b, loose); break;\n    case '>=': ret = gte(a, b, loose); break;\n    case '<': ret = lt(a, b, loose); break;\n    case '<=': ret = lte(a, b, loose); break;\n    default: throw new TypeError('Invalid operator: ' + op);\n  }\n  return ret;\n}\n\nexports.Comparator = Comparator;\nfunction Comparator(comp, options) {\n  if (!options || typeof options !== 'object')\n    options = { loose: !!options, includePrerelease: false }\n\n  if (comp instanceof Comparator) {\n    if (comp.loose === !!options.loose)\n      return comp;\n    else\n      comp = comp.value;\n  }\n\n  if (!(this instanceof Comparator))\n    return new Comparator(comp, options);\n\n  debug('comparator', comp, options);\n  this.options = options;\n  this.loose = !!options.loose;\n  this.parse(comp);\n\n  if (this.semver === ANY)\n    this.value = '';\n  else\n    this.value = this.operator + this.semver.version;\n\n  debug('comp', this);\n}\n\nvar ANY = {};\nComparator.prototype.parse = function(comp) {\n  var r = this.options.loose ? re[COMPARATORLOOSE] : re[COMPARATOR];\n  var m = comp.match(r);\n\n  if (!m)\n    throw new TypeError('Invalid comparator: ' + comp);\n\n  this.operator = m[1];\n  if (this.operator === '=')\n    this.operator = '';\n\n  // if it literally is just '>' or '' then allow anything.\n  if (!m[2])\n    this.semver = ANY;\n  else\n    this.semver = new SemVer(m[2], this.options.loose);\n};\n\nComparator.prototype.toString = function() {\n  return this.value;\n};\n\nComparator.prototype.test = function(version) {\n  debug('Comparator.test', version, this.options.loose);\n\n  if (this.semver === ANY)\n    return true;\n\n  if (typeof version === 'string')\n    version = new SemVer(version, this.options);\n\n  return cmp(version, this.operator, this.semver, this.options);\n};\n\nComparator.prototype.intersects = function(comp, options) {\n  if (!(comp instanceof Comparator)) {\n    throw new TypeError('a Comparator is required');\n  }\n\n  if (!options || typeof options !== 'object')\n    options = { loose: !!options, includePrerelease: false }\n\n  var rangeTmp;\n\n  if (this.operator === '') {\n    rangeTmp = new Range(comp.value, options);\n    return satisfies(this.value, rangeTmp, options);\n  } else if (comp.operator === '') {\n    rangeTmp = new Range(this.value, options);\n    return satisfies(comp.semver, rangeTmp, options);\n  }\n\n  var sameDirectionIncreasing =\n    (this.operator === '>=' || this.operator === '>') &&\n    (comp.operator === '>=' || comp.operator === '>');\n  var sameDirectionDecreasing =\n    (this.operator === '<=' || this.operator === '<') &&\n    (comp.operator === '<=' || comp.operator === '<');\n  var sameSemVer = this.semver.version === comp.semver.version;\n  var differentDirectionsInclusive =\n    (this.operator === '>=' || this.operator === '<=') &&\n    (comp.operator === '>=' || comp.operator === '<=');\n  var oppositeDirectionsLessThan =\n    cmp(this.semver, '<', comp.semver, options) &&\n    ((this.operator === '>=' || this.operator === '>') &&\n    (comp.operator === '<=' || comp.operator === '<'));\n  var oppositeDirectionsGreaterThan =\n    cmp(this.semver, '>', comp.semver, options) &&\n    ((this.operator === '<=' || this.operator === '<') &&\n    (comp.operator === '>=' || comp.operator === '>'));\n\n  return sameDirectionIncreasing || sameDirectionDecreasing ||\n    (sameSemVer && differentDirectionsInclusive) ||\n    oppositeDirectionsLessThan || oppositeDirectionsGreaterThan;\n};\n\n\nexports.Range = Range;\nfunction Range(range, options) {\n  if (!options || typeof options !== 'object')\n    options = { loose: !!options, includePrerelease: false }\n\n  if (range instanceof Range) {\n    if (range.loose === !!options.loose &&\n        range.includePrerelease === !!options.includePrerelease) {\n      return range;\n    } else {\n      return new Range(range.raw, options);\n    }\n  }\n\n  if (range instanceof Comparator) {\n    return new Range(range.value, options);\n  }\n\n  if (!(this instanceof Range))\n    return new Range(range, options);\n\n  this.options = options;\n  this.loose = !!options.loose;\n  this.includePrerelease = !!options.includePrerelease\n\n  // First, split based on boolean or ||\n  this.raw = range;\n  this.set = range.split(/\\s*\\|\\|\\s*/).map(function(range) {\n    return this.parseRange(range.trim());\n  }, this).filter(function(c) {\n    // throw out any that are not relevant for whatever reason\n    return c.length;\n  });\n\n  if (!this.set.length) {\n    throw new TypeError('Invalid SemVer Range: ' + range);\n  }\n\n  this.format();\n}\n\nRange.prototype.format = function() {\n  this.range = this.set.map(function(comps) {\n    return comps.join(' ').trim();\n  }).join('||').trim();\n  return this.range;\n};\n\nRange.prototype.toString = function() {\n  return this.range;\n};\n\nRange.prototype.parseRange = function(range) {\n  var loose = this.options.loose;\n  range = range.trim();\n  // `1.2.3 - 1.2.4` => `>=1.2.3 <=1.2.4`\n  var hr = loose ? re[HYPHENRANGELOOSE] : re[HYPHENRANGE];\n  range = range.replace(hr, hyphenReplace);\n  debug('hyphen replace', range);\n  // `> 1.2.3 < 1.2.5` => `>1.2.3 <1.2.5`\n  range = range.replace(re[COMPARATORTRIM], comparatorTrimReplace);\n  debug('comparator trim', range, re[COMPARATORTRIM]);\n\n  // `~ 1.2.3` => `~1.2.3`\n  range = range.replace(re[TILDETRIM], tildeTrimReplace);\n\n  // `^ 1.2.3` => `^1.2.3`\n  range = range.replace(re[CARETTRIM], caretTrimReplace);\n\n  // normalize spaces\n  range = range.split(/\\s+/).join(' ');\n\n  // At this point, the range is completely trimmed and\n  // ready to be split into comparators.\n\n  var compRe = loose ? re[COMPARATORLOOSE] : re[COMPARATOR];\n  var set = range.split(' ').map(function(comp) {\n    return parseComparator(comp, this.options);\n  }, this).join(' ').split(/\\s+/);\n  if (this.options.loose) {\n    // in loose mode, throw out any that are not valid comparators\n    set = set.filter(function(comp) {\n      return !!comp.match(compRe);\n    });\n  }\n  set = set.map(function(comp) {\n    return new Comparator(comp, this.options);\n  }, this);\n\n  return set;\n};\n\nRange.prototype.intersects = function(range, options) {\n  if (!(range instanceof Range)) {\n    throw new TypeError('a Range is required');\n  }\n\n  return this.set.some(function(thisComparators) {\n    return thisComparators.every(function(thisComparator) {\n      return range.set.some(function(rangeComparators) {\n        return rangeComparators.every(function(rangeComparator) {\n          return thisComparator.intersects(rangeComparator, options);\n        });\n      });\n    });\n  });\n};\n\n// Mostly just for testing and legacy API reasons\nexports.toComparators = toComparators;\nfunction toComparators(range, options) {\n  return new Range(range, options).set.map(function(comp) {\n    return comp.map(function(c) {\n      return c.value;\n    }).join(' ').trim().split(' ');\n  });\n}\n\n// comprised of xranges, tildes, stars, and gtlt's at this point.\n// already replaced the hyphen ranges\n// turn into a set of JUST comparators.\nfunction parseComparator(comp, options) {\n  debug('comp', comp, options);\n  comp = replaceCarets(comp, options);\n  debug('caret', comp);\n  comp = replaceTildes(comp, options);\n  debug('tildes', comp);\n  comp = replaceXRanges(comp, options);\n  debug('xrange', comp);\n  comp = replaceStars(comp, options);\n  debug('stars', comp);\n  return comp;\n}\n\nfunction isX(id) {\n  return !id || id.toLowerCase() === 'x' || id === '*';\n}\n\n// ~, ~> --> * (any, kinda silly)\n// ~2, ~2.x, ~2.x.x, ~>2, ~>2.x ~>2.x.x --> >=2.0.0 <3.0.0\n// ~2.0, ~2.0.x, ~>2.0, ~>2.0.x --> >=2.0.0 <2.1.0\n// ~1.2, ~1.2.x, ~>1.2, ~>1.2.x --> >=1.2.0 <1.3.0\n// ~1.2.3, ~>1.2.3 --> >=1.2.3 <1.3.0\n// ~1.2.0, ~>1.2.0 --> >=1.2.0 <1.3.0\nfunction replaceTildes(comp, options) {\n  return comp.trim().split(/\\s+/).map(function(comp) {\n    return replaceTilde(comp, options);\n  }).join(' ');\n}\n\nfunction replaceTilde(comp, options) {\n  if (!options || typeof options !== 'object')\n    options = { loose: !!options, includePrerelease: false }\n  var r = options.loose ? re[TILDELOOSE] : re[TILDE];\n  return comp.replace(r, function(_, M, m, p, pr) {\n    debug('tilde', comp, _, M, m, p, pr);\n    var ret;\n\n    if (isX(M))\n      ret = '';\n    else if (isX(m))\n      ret = '>=' + M + '.0.0 <' + (+M + 1) + '.0.0';\n    else if (isX(p))\n      // ~1.2 == >=1.2.0 <1.3.0\n      ret = '>=' + M + '.' + m + '.0 <' + M + '.' + (+m + 1) + '.0';\n    else if (pr) {\n      debug('replaceTilde pr', pr);\n      if (pr.charAt(0) !== '-')\n        pr = '-' + pr;\n      ret = '>=' + M + '.' + m + '.' + p + pr +\n            ' <' + M + '.' + (+m + 1) + '.0';\n    } else\n      // ~1.2.3 == >=1.2.3 <1.3.0\n      ret = '>=' + M + '.' + m + '.' + p +\n            ' <' + M + '.' + (+m + 1) + '.0';\n\n    debug('tilde return', ret);\n    return ret;\n  });\n}\n\n// ^ --> * (any, kinda silly)\n// ^2, ^2.x, ^2.x.x --> >=2.0.0 <3.0.0\n// ^2.0, ^2.0.x --> >=2.0.0 <3.0.0\n// ^1.2, ^1.2.x --> >=1.2.0 <2.0.0\n// ^1.2.3 --> >=1.2.3 <2.0.0\n// ^1.2.0 --> >=1.2.0 <2.0.0\nfunction replaceCarets(comp, options) {\n  return comp.trim().split(/\\s+/).map(function(comp) {\n    return replaceCaret(comp, options);\n  }).join(' ');\n}\n\nfunction replaceCaret(comp, options) {\n  debug('caret', comp, options);\n  if (!options || typeof options !== 'object')\n    options = { loose: !!options, includePrerelease: false }\n  var r = options.loose ? re[CARETLOOSE] : re[CARET];\n  return comp.replace(r, function(_, M, m, p, pr) {\n    debug('caret', comp, _, M, m, p, pr);\n    var ret;\n\n    if (isX(M))\n      ret = '';\n    else if (isX(m))\n      ret = '>=' + M + '.0.0 <' + (+M + 1) + '.0.0';\n    else if (isX(p)) {\n      if (M === '0')\n        ret = '>=' + M + '.' + m + '.0 <' + M + '.' + (+m + 1) + '.0';\n      else\n        ret = '>=' + M + '.' + m + '.0 <' + (+M + 1) + '.0.0';\n    } else if (pr) {\n      debug('replaceCaret pr', pr);\n      if (pr.charAt(0) !== '-')\n        pr = '-' + pr;\n      if (M === '0') {\n        if (m === '0')\n          ret = '>=' + M + '.' + m + '.' + p + pr +\n                ' <' + M + '.' + m + '.' + (+p + 1);\n        else\n          ret = '>=' + M + '.' + m + '.' + p + pr +\n                ' <' + M + '.' + (+m + 1) + '.0';\n      } else\n        ret = '>=' + M + '.' + m + '.' + p + pr +\n              ' <' + (+M + 1) + '.0.0';\n    } else {\n      debug('no pr');\n      if (M === '0') {\n        if (m === '0')\n          ret = '>=' + M + '.' + m + '.' + p +\n                ' <' + M + '.' + m + '.' + (+p + 1);\n        else\n          ret = '>=' + M + '.' + m + '.' + p +\n                ' <' + M + '.' + (+m + 1) + '.0';\n      } else\n        ret = '>=' + M + '.' + m + '.' + p +\n              ' <' + (+M + 1) + '.0.0';\n    }\n\n    debug('caret return', ret);\n    return ret;\n  });\n}\n\nfunction replaceXRanges(comp, options) {\n  debug('replaceXRanges', comp, options);\n  return comp.split(/\\s+/).map(function(comp) {\n    return replaceXRange(comp, options);\n  }).join(' ');\n}\n\nfunction replaceXRange(comp, options) {\n  comp = comp.trim();\n  if (!options || typeof options !== 'object')\n    options = { loose: !!options, includePrerelease: false }\n  var r = options.loose ? re[XRANGELOOSE] : re[XRANGE];\n  return comp.replace(r, function(ret, gtlt, M, m, p, pr) {\n    debug('xRange', comp, ret, gtlt, M, m, p, pr);\n    var xM = isX(M);\n    var xm = xM || isX(m);\n    var xp = xm || isX(p);\n    var anyX = xp;\n\n    if (gtlt === '=' && anyX)\n      gtlt = '';\n\n    if (xM) {\n      if (gtlt === '>' || gtlt === '<') {\n        // nothing is allowed\n        ret = '<0.0.0';\n      } else {\n        // nothing is forbidden\n        ret = '*';\n      }\n    } else if (gtlt && anyX) {\n      // replace X with 0\n      if (xm)\n        m = 0;\n      if (xp)\n        p = 0;\n\n      if (gtlt === '>') {\n        // >1 => >=2.0.0\n        // >1.2 => >=1.3.0\n        // >1.2.3 => >= 1.2.4\n        gtlt = '>=';\n        if (xm) {\n          M = +M + 1;\n          m = 0;\n          p = 0;\n        } else if (xp) {\n          m = +m + 1;\n          p = 0;\n        }\n      } else if (gtlt === '<=') {\n        // <=0.7.x is actually <0.8.0, since any 0.7.x should\n        // pass.  Similarly, <=7.x is actually <8.0.0, etc.\n        gtlt = '<';\n        if (xm)\n          M = +M + 1;\n        else\n          m = +m + 1;\n      }\n\n      ret = gtlt + M + '.' + m + '.' + p;\n    } else if (xm) {\n      ret = '>=' + M + '.0.0 <' + (+M + 1) + '.0.0';\n    } else if (xp) {\n      ret = '>=' + M + '.' + m + '.0 <' + M + '.' + (+m + 1) + '.0';\n    }\n\n    debug('xRange return', ret);\n\n    return ret;\n  });\n}\n\n// Because * is AND-ed with everything else in the comparator,\n// and '' means \"any version\", just remove the *s entirely.\nfunction replaceStars(comp, options) {\n  debug('replaceStars', comp, options);\n  // Looseness is ignored here.  star is always as loose as it gets!\n  return comp.trim().replace(re[STAR], '');\n}\n\n// This function is passed to string.replace(re[HYPHENRANGE])\n// M, m, patch, prerelease, build\n// 1.2 - 3.4.5 => >=1.2.0 <=3.4.5\n// 1.2.3 - 3.4 => >=1.2.0 <3.5.0 Any 3.4.x will do\n// 1.2 - 3.4 => >=1.2.0 <3.5.0\nfunction hyphenReplace($0,\n                       from, fM, fm, fp, fpr, fb,\n                       to, tM, tm, tp, tpr, tb) {\n\n  if (isX(fM))\n    from = '';\n  else if (isX(fm))\n    from = '>=' + fM + '.0.0';\n  else if (isX(fp))\n    from = '>=' + fM + '.' + fm + '.0';\n  else\n    from = '>=' + from;\n\n  if (isX(tM))\n    to = '';\n  else if (isX(tm))\n    to = '<' + (+tM + 1) + '.0.0';\n  else if (isX(tp))\n    to = '<' + tM + '.' + (+tm + 1) + '.0';\n  else if (tpr)\n    to = '<=' + tM + '.' + tm + '.' + tp + '-' + tpr;\n  else\n    to = '<=' + to;\n\n  return (from + ' ' + to).trim();\n}\n\n\n// if ANY of the sets match ALL of its comparators, then pass\nRange.prototype.test = function(version) {\n  if (!version)\n    return false;\n\n  if (typeof version === 'string')\n    version = new SemVer(version, this.options);\n\n  for (var i = 0; i < this.set.length; i++) {\n    if (testSet(this.set[i], version, this.options))\n      return true;\n  }\n  return false;\n};\n\nfunction testSet(set, version, options) {\n  for (var i = 0; i < set.length; i++) {\n    if (!set[i].test(version))\n      return false;\n  }\n\n  if (!options)\n    options = {}\n\n  if (version.prerelease.length && !options.includePrerelease) {\n    // Find the set of versions that are allowed to have prereleases\n    // For example, ^1.2.3-pr.1 desugars to >=1.2.3-pr.1 <2.0.0\n    // That should allow `1.2.3-pr.2` to pass.\n    // However, `1.2.4-alpha.notready` should NOT be allowed,\n    // even though it's within the range set by the comparators.\n    for (var i = 0; i < set.length; i++) {\n      debug(set[i].semver);\n      if (set[i].semver === ANY)\n        continue;\n\n      if (set[i].semver.prerelease.length > 0) {\n        var allowed = set[i].semver;\n        if (allowed.major === version.major &&\n            allowed.minor === version.minor &&\n            allowed.patch === version.patch)\n          return true;\n      }\n    }\n\n    // Version has a -pre, but it's not one of the ones we like.\n    return false;\n  }\n\n  return true;\n}\n\nexports.satisfies = satisfies;\nfunction satisfies(version, range, options) {\n  try {\n    range = new Range(range, options);\n  } catch (er) {\n    return false;\n  }\n  return range.test(version);\n}\n\nexports.maxSatisfying = maxSatisfying;\nfunction maxSatisfying(versions, range, options) {\n  var max = null;\n  var maxSV = null;\n  try {\n    var rangeObj = new Range(range, options);\n  } catch (er) {\n    return null;\n  }\n  versions.forEach(function (v) {\n    if (rangeObj.test(v)) { // satisfies(v, range, options)\n      if (!max || maxSV.compare(v) === -1) { // compare(max, v, true)\n        max = v;\n        maxSV = new SemVer(max, options);\n      }\n    }\n  })\n  return max;\n}\n\nexports.minSatisfying = minSatisfying;\nfunction minSatisfying(versions, range, options) {\n  var min = null;\n  var minSV = null;\n  try {\n    var rangeObj = new Range(range, options);\n  } catch (er) {\n    return null;\n  }\n  versions.forEach(function (v) {\n    if (rangeObj.test(v)) { // satisfies(v, range, options)\n      if (!min || minSV.compare(v) === 1) { // compare(min, v, true)\n        min = v;\n        minSV = new SemVer(min, options);\n      }\n    }\n  })\n  return min;\n}\n\nexports.validRange = validRange;\nfunction validRange(range, options) {\n  try {\n    // Return '*' instead of '' so that truthiness works.\n    // This will throw if it's invalid anyway\n    return new Range(range, options).range || '*';\n  } catch (er) {\n    return null;\n  }\n}\n\n// Determine if version is less than all the versions possible in the range\nexports.ltr = ltr;\nfunction ltr(version, range, options) {\n  return outside(version, range, '<', options);\n}\n\n// Determine if version is greater than all the versions possible in the range.\nexports.gtr = gtr;\nfunction gtr(version, range, options) {\n  return outside(version, range, '>', options);\n}\n\nexports.outside = outside;\nfunction outside(version, range, hilo, options) {\n  version = new SemVer(version, options);\n  range = new Range(range, options);\n\n  var gtfn, ltefn, ltfn, comp, ecomp;\n  switch (hilo) {\n    case '>':\n      gtfn = gt;\n      ltefn = lte;\n      ltfn = lt;\n      comp = '>';\n      ecomp = '>=';\n      break;\n    case '<':\n      gtfn = lt;\n      ltefn = gte;\n      ltfn = gt;\n      comp = '<';\n      ecomp = '<=';\n      break;\n    default:\n      throw new TypeError('Must provide a hilo val of \"<\" or \">\"');\n  }\n\n  // If it satisifes the range it is not outside\n  if (satisfies(version, range, options)) {\n    return false;\n  }\n\n  // From now on, variable terms are as if we're in \"gtr\" mode.\n  // but note that everything is flipped for the \"ltr\" function.\n\n  for (var i = 0; i < range.set.length; ++i) {\n    var comparators = range.set[i];\n\n    var high = null;\n    var low = null;\n\n    comparators.forEach(function(comparator) {\n      if (comparator.semver === ANY) {\n        comparator = new Comparator('>=0.0.0')\n      }\n      high = high || comparator;\n      low = low || comparator;\n      if (gtfn(comparator.semver, high.semver, options)) {\n        high = comparator;\n      } else if (ltfn(comparator.semver, low.semver, options)) {\n        low = comparator;\n      }\n    });\n\n    // If the edge version comparator has a operator then our version\n    // isn't outside it\n    if (high.operator === comp || high.operator === ecomp) {\n      return false;\n    }\n\n    // If the lowest version comparator has an operator and our version\n    // is less than it then it isn't higher than the range\n    if ((!low.operator || low.operator === comp) &&\n        ltefn(version, low.semver)) {\n      return false;\n    } else if (low.operator === ecomp && ltfn(version, low.semver)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nexports.prerelease = prerelease;\nfunction prerelease(version, options) {\n  var parsed = parse(version, options);\n  return (parsed && parsed.prerelease.length) ? parsed.prerelease : null;\n}\n\nexports.intersects = intersects;\nfunction intersects(r1, r2, options) {\n  r1 = new Range(r1, options)\n  r2 = new Range(r2, options)\n  return r1.intersects(r2)\n}\n\nexports.coerce = coerce;\nfunction coerce(version) {\n  if (version instanceof SemVer)\n    return version;\n\n  if (typeof version !== 'string')\n    return null;\n\n  var match = version.match(re[COERCE]);\n\n  if (match == null)\n    return null;\n\n  return parse((match[1] || '0') + '.' + (match[2] || '0') + '.' + (match[3] || '0')); \n}\n"],"mappings":"AAAAA,OAAO,GAAGC,MAAM,CAACD,OAAO,GAAGE,MAAM;;AAEjC;AACA;AAAY,IAAIC,KAAK;AACrB;AAAY,IAAI,OAAOC,OAAO,KAAK,QAAQ,IACvC,WAAYA,OAAO,CAACC,GAAG,IACvB,WAAYD,OAAO,CAACC,GAAG,CAACC,UAAU,IAClC,WAAY,cAAa,CAACC,IAAI,CAACH,OAAO,CAACC,GAAG,CAACC,UAAU,CAAC,EACxD,WAAYH,KAAK,GAAG,YAAW;IAC7B,WAAY,IAAIK,IAAI,GAAGC,KAAK,CAACC,SAAS,CAACC,KAAK,CAACC,IAAI,CAACC,SAAS,EAAE,CAAC,CAAC;IAC/D;IAAYL,IAAI,CAACM,OAAO,CAAC,QAAQ,CAAC;IAClC;IAAYC,OAAO,CAACC,GAAG,CAACC,KAAK,CAACF,OAAO,EAAEP,IAAI,CAAC;IAC5C;EAAY,CAAC;EACjB,gBACE,WAAYL,KAAK,GAAG,YAAW,CAAC,CAAC;;AAEnC;AACA;AACAH,OAAO,CAACkB,mBAAmB,GAAG,OAAO;AAErC,IAAIC,UAAU,GAAG,GAAG;AACpB,IAAIC,gBAAgB,GAAGC,MAAM,CAACD,gBAAgB,IAAI,gBAAgB;;AAElE;AACA,IAAIE,yBAAyB,GAAG,EAAE;;AAElC;AACA,IAAIC,EAAE,GAAGvB,OAAO,CAACuB,EAAE,GAAG,EAAE;AACxB,IAAIC,GAAG,GAAGxB,OAAO,CAACwB,GAAG,GAAG,EAAE;AAC1B,IAAIC,CAAC,GAAG,CAAC;;AAET;AACA;;AAEA;AACA;;AAEA,IAAIC,iBAAiB,GAAGD,CAAC,EAAE;AAC3BD,GAAG,CAACE,iBAAiB,CAAC,GAAG,aAAa;AACtC,IAAIC,sBAAsB,GAAGF,CAAC,EAAE;AAChCD,GAAG,CAACG,sBAAsB,CAAC,GAAG,QAAQ;;AAGtC;AACA;AACA;;AAEA,IAAIC,oBAAoB,GAAGH,CAAC,EAAE;AAC9BD,GAAG,CAACI,oBAAoB,CAAC,GAAG,4BAA4B;;AAGxD;AACA;;AAEA,IAAIC,WAAW,GAAGJ,CAAC,EAAE;AACrBD,GAAG,CAACK,WAAW,CAAC,GAAG,GAAG,GAAGL,GAAG,CAACE,iBAAiB,CAAC,GAAG,MAAM,GACrC,GAAG,GAAGF,GAAG,CAACE,iBAAiB,CAAC,GAAG,MAAM,GACrC,GAAG,GAAGF,GAAG,CAACE,iBAAiB,CAAC,GAAG,GAAG;AAErD,IAAII,gBAAgB,GAAGL,CAAC,EAAE;AAC1BD,GAAG,CAACM,gBAAgB,CAAC,GAAG,GAAG,GAAGN,GAAG,CAACG,sBAAsB,CAAC,GAAG,MAAM,GAC1C,GAAG,GAAGH,GAAG,CAACG,sBAAsB,CAAC,GAAG,MAAM,GAC1C,GAAG,GAAGH,GAAG,CAACG,sBAAsB,CAAC,GAAG,GAAG;;AAE/D;AACA;;AAEA,IAAII,oBAAoB,GAAGN,CAAC,EAAE;AAC9BD,GAAG,CAACO,oBAAoB,CAAC,GAAG,KAAK,GAAGP,GAAG,CAACE,iBAAiB,CAAC,GAC9B,GAAG,GAAGF,GAAG,CAACI,oBAAoB,CAAC,GAAG,GAAG;AAEjE,IAAII,yBAAyB,GAAGP,CAAC,EAAE;AACnCD,GAAG,CAACQ,yBAAyB,CAAC,GAAG,KAAK,GAAGR,GAAG,CAACG,sBAAsB,CAAC,GACnC,GAAG,GAAGH,GAAG,CAACI,oBAAoB,CAAC,GAAG,GAAG;;AAGtE;AACA;AACA;;AAEA,IAAIK,UAAU,GAAGR,CAAC,EAAE;AACpBD,GAAG,CAACS,UAAU,CAAC,GAAG,OAAO,GAAGT,GAAG,CAACO,oBAAoB,CAAC,GACnC,QAAQ,GAAGP,GAAG,CAACO,oBAAoB,CAAC,GAAG,MAAM;AAE/D,IAAIG,eAAe,GAAGT,CAAC,EAAE;AACzBD,GAAG,CAACU,eAAe,CAAC,GAAG,QAAQ,GAAGV,GAAG,CAACQ,yBAAyB,CAAC,GACzC,QAAQ,GAAGR,GAAG,CAACQ,yBAAyB,CAAC,GAAG,MAAM;;AAEzE;AACA;;AAEA,IAAIG,eAAe,GAAGV,CAAC,EAAE;AACzBD,GAAG,CAACW,eAAe,CAAC,GAAG,eAAe;;AAEtC;AACA;AACA;;AAEA,IAAIC,KAAK,GAAGX,CAAC,EAAE;AACfD,GAAG,CAACY,KAAK,CAAC,GAAG,SAAS,GAAGZ,GAAG,CAACW,eAAe,CAAC,GAChC,QAAQ,GAAGX,GAAG,CAACW,eAAe,CAAC,GAAG,MAAM;;AAGrD;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,IAAIE,IAAI,GAAGZ,CAAC,EAAE;AACd,IAAIa,SAAS,GAAG,IAAI,GAAGd,GAAG,CAACK,WAAW,CAAC,GACvBL,GAAG,CAACS,UAAU,CAAC,GAAG,GAAG,GACrBT,GAAG,CAACY,KAAK,CAAC,GAAG,GAAG;AAEhCZ,GAAG,CAACa,IAAI,CAAC,GAAG,GAAG,GAAGC,SAAS,GAAG,GAAG;;AAEjC;AACA;AACA;AACA,IAAIC,UAAU,GAAG,UAAU,GAAGf,GAAG,CAACM,gBAAgB,CAAC,GAClCN,GAAG,CAACU,eAAe,CAAC,GAAG,GAAG,GAC1BV,GAAG,CAACY,KAAK,CAAC,GAAG,GAAG;AAEjC,IAAII,KAAK,GAAGf,CAAC,EAAE;AACfD,GAAG,CAACgB,KAAK,CAAC,GAAG,GAAG,GAAGD,UAAU,GAAG,GAAG;AAEnC,IAAIE,IAAI,GAAGhB,CAAC,EAAE;AACdD,GAAG,CAACiB,IAAI,CAAC,GAAG,cAAc;;AAE1B;AACA;AACA;AACA,IAAIC,qBAAqB,GAAGjB,CAAC,EAAE;AAC/BD,GAAG,CAACkB,qBAAqB,CAAC,GAAGlB,GAAG,CAACG,sBAAsB,CAAC,GAAG,UAAU;AACrE,IAAIgB,gBAAgB,GAAGlB,CAAC,EAAE;AAC1BD,GAAG,CAACmB,gBAAgB,CAAC,GAAGnB,GAAG,CAACE,iBAAiB,CAAC,GAAG,UAAU;AAE3D,IAAIkB,WAAW,GAAGnB,CAAC,EAAE;AACrBD,GAAG,CAACoB,WAAW,CAAC,GAAG,WAAW,GAAGpB,GAAG,CAACmB,gBAAgB,CAAC,GAAG,GAAG,GACzC,SAAS,GAAGnB,GAAG,CAACmB,gBAAgB,CAAC,GAAG,GAAG,GACvC,SAAS,GAAGnB,GAAG,CAACmB,gBAAgB,CAAC,GAAG,GAAG,GACvC,KAAK,GAAGnB,GAAG,CAACS,UAAU,CAAC,GAAG,IAAI,GAC9BT,GAAG,CAACY,KAAK,CAAC,GAAG,GAAG,GAChB,MAAM;AAEzB,IAAIS,gBAAgB,GAAGpB,CAAC,EAAE;AAC1BD,GAAG,CAACqB,gBAAgB,CAAC,GAAG,WAAW,GAAGrB,GAAG,CAACkB,qBAAqB,CAAC,GAAG,GAAG,GAC9C,SAAS,GAAGlB,GAAG,CAACkB,qBAAqB,CAAC,GAAG,GAAG,GAC5C,SAAS,GAAGlB,GAAG,CAACkB,qBAAqB,CAAC,GAAG,GAAG,GAC5C,KAAK,GAAGlB,GAAG,CAACU,eAAe,CAAC,GAAG,IAAI,GACnCV,GAAG,CAACY,KAAK,CAAC,GAAG,GAAG,GAChB,MAAM;AAE9B,IAAIU,MAAM,GAAGrB,CAAC,EAAE;AAChBD,GAAG,CAACsB,MAAM,CAAC,GAAG,GAAG,GAAGtB,GAAG,CAACiB,IAAI,CAAC,GAAG,MAAM,GAAGjB,GAAG,CAACoB,WAAW,CAAC,GAAG,GAAG;AAC/D,IAAIG,WAAW,GAAGtB,CAAC,EAAE;AACrBD,GAAG,CAACuB,WAAW,CAAC,GAAG,GAAG,GAAGvB,GAAG,CAACiB,IAAI,CAAC,GAAG,MAAM,GAAGjB,GAAG,CAACqB,gBAAgB,CAAC,GAAG,GAAG;;AAEzE;AACA;AACA,IAAIG,MAAM,GAAGvB,CAAC,EAAE;AAChBD,GAAG,CAACwB,MAAM,CAAC,GAAG,cAAc,GACd,SAAS,GAAG1B,yBAAyB,GAAG,IAAI,GAC5C,eAAe,GAAGA,yBAAyB,GAAG,MAAM,GACpD,eAAe,GAAGA,yBAAyB,GAAG,MAAM,GACpD,cAAc;;AAE5B;AACA;AACA,IAAI2B,SAAS,GAAGxB,CAAC,EAAE;AACnBD,GAAG,CAACyB,SAAS,CAAC,GAAG,SAAS;AAE1B,IAAIC,SAAS,GAAGzB,CAAC,EAAE;AACnBD,GAAG,CAAC0B,SAAS,CAAC,GAAG,QAAQ,GAAG1B,GAAG,CAACyB,SAAS,CAAC,GAAG,MAAM;AACnD1B,EAAE,CAAC2B,SAAS,CAAC,GAAG,IAAIC,MAAM,CAAC3B,GAAG,CAAC0B,SAAS,CAAC,EAAE,GAAG,CAAC;AAC/C,IAAIE,gBAAgB,GAAG,KAAK;AAE5B,IAAIC,KAAK,GAAG5B,CAAC,EAAE;AACfD,GAAG,CAAC6B,KAAK,CAAC,GAAG,GAAG,GAAG7B,GAAG,CAACyB,SAAS,CAAC,GAAGzB,GAAG,CAACoB,WAAW,CAAC,GAAG,GAAG;AAC1D,IAAIU,UAAU,GAAG7B,CAAC,EAAE;AACpBD,GAAG,CAAC8B,UAAU,CAAC,GAAG,GAAG,GAAG9B,GAAG,CAACyB,SAAS,CAAC,GAAGzB,GAAG,CAACqB,gBAAgB,CAAC,GAAG,GAAG;;AAEpE;AACA;AACA,IAAIU,SAAS,GAAG9B,CAAC,EAAE;AACnBD,GAAG,CAAC+B,SAAS,CAAC,GAAG,SAAS;AAE1B,IAAIC,SAAS,GAAG/B,CAAC,EAAE;AACnBD,GAAG,CAACgC,SAAS,CAAC,GAAG,QAAQ,GAAGhC,GAAG,CAAC+B,SAAS,CAAC,GAAG,MAAM;AACnDhC,EAAE,CAACiC,SAAS,CAAC,GAAG,IAAIL,MAAM,CAAC3B,GAAG,CAACgC,SAAS,CAAC,EAAE,GAAG,CAAC;AAC/C,IAAIC,gBAAgB,GAAG,KAAK;AAE5B,IAAIC,KAAK,GAAGjC,CAAC,EAAE;AACfD,GAAG,CAACkC,KAAK,CAAC,GAAG,GAAG,GAAGlC,GAAG,CAAC+B,SAAS,CAAC,GAAG/B,GAAG,CAACoB,WAAW,CAAC,GAAG,GAAG;AAC1D,IAAIe,UAAU,GAAGlC,CAAC,EAAE;AACpBD,GAAG,CAACmC,UAAU,CAAC,GAAG,GAAG,GAAGnC,GAAG,CAAC+B,SAAS,CAAC,GAAG/B,GAAG,CAACqB,gBAAgB,CAAC,GAAG,GAAG;;AAEpE;AACA,IAAIe,eAAe,GAAGnC,CAAC,EAAE;AACzBD,GAAG,CAACoC,eAAe,CAAC,GAAG,GAAG,GAAGpC,GAAG,CAACiB,IAAI,CAAC,GAAG,OAAO,GAAGF,UAAU,GAAG,OAAO;AACvE,IAAIsB,UAAU,GAAGpC,CAAC,EAAE;AACpBD,GAAG,CAACqC,UAAU,CAAC,GAAG,GAAG,GAAGrC,GAAG,CAACiB,IAAI,CAAC,GAAG,OAAO,GAAGH,SAAS,GAAG,OAAO;;AAGjE;AACA;AACA,IAAIwB,cAAc,GAAGrC,CAAC,EAAE;AACxBD,GAAG,CAACsC,cAAc,CAAC,GAAG,QAAQ,GAAGtC,GAAG,CAACiB,IAAI,CAAC,GACpB,OAAO,GAAGF,UAAU,GAAG,GAAG,GAAGf,GAAG,CAACoB,WAAW,CAAC,GAAG,GAAG;;AAEzE;AACArB,EAAE,CAACuC,cAAc,CAAC,GAAG,IAAIX,MAAM,CAAC3B,GAAG,CAACsC,cAAc,CAAC,EAAE,GAAG,CAAC;AACzD,IAAIC,qBAAqB,GAAG,QAAQ;;AAGpC;AACA;AACA;AACA;AACA,IAAIC,WAAW,GAAGvC,CAAC,EAAE;AACrBD,GAAG,CAACwC,WAAW,CAAC,GAAG,QAAQ,GAAGxC,GAAG,CAACoB,WAAW,CAAC,GAAG,GAAG,GACjC,WAAW,GACX,GAAG,GAAGpB,GAAG,CAACoB,WAAW,CAAC,GAAG,GAAG,GAC5B,OAAO;AAE1B,IAAIqB,gBAAgB,GAAGxC,CAAC,EAAE;AAC1BD,GAAG,CAACyC,gBAAgB,CAAC,GAAG,QAAQ,GAAGzC,GAAG,CAACqB,gBAAgB,CAAC,GAAG,GAAG,GACtC,WAAW,GACX,GAAG,GAAGrB,GAAG,CAACqB,gBAAgB,CAAC,GAAG,GAAG,GACjC,OAAO;;AAE/B;AACA,IAAIqB,IAAI,GAAGzC,CAAC,EAAE;AACdD,GAAG,CAAC0C,IAAI,CAAC,GAAG,iBAAiB;;AAE7B;AACA;AACA,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG1C,CAAC,EAAE0C,CAAC,EAAE,EAAE;EAC1BhE,KAAK,CAACgE,CAAC,EAAE3C,GAAG,CAAC2C,CAAC,CAAC,CAAC;EAChB,IAAI,CAAC5C,EAAE,CAAC4C,CAAC,CAAC,EACR5C,EAAE,CAAC4C,CAAC,CAAC,GAAG,IAAIhB,MAAM,CAAC3B,GAAG,CAAC2C,CAAC,CAAC,CAAC;AAC9B;AAEAnE,OAAO,CAACoE,KAAK,GAAGA,KAAK;AACrB,SAASA,KAAK,CAACC,OAAO,EAAEC,OAAO,EAAE;EAC/B,IAAI,CAACA,OAAO,IAAI,OAAOA,OAAO,KAAK,QAAQ,EACzCA,OAAO,GAAG;IAAEC,KAAK,EAAE,CAAC,CAACD,OAAO;IAAEE,iBAAiB,EAAE;EAAM,CAAC;EAE1D,IAAIH,OAAO,YAAYnE,MAAM,EAC3B,OAAOmE,OAAO;EAEhB,IAAI,OAAOA,OAAO,KAAK,QAAQ,EAC7B,OAAO,IAAI;EAEb,IAAIA,OAAO,CAACI,MAAM,GAAGtD,UAAU,EAC7B,OAAO,IAAI;EAEb,IAAIuD,CAAC,GAAGJ,OAAO,CAACC,KAAK,GAAGhD,EAAE,CAACiB,KAAK,CAAC,GAAGjB,EAAE,CAACc,IAAI,CAAC;EAC5C,IAAI,CAACqC,CAAC,CAACnE,IAAI,CAAC8D,OAAO,CAAC,EAClB,OAAO,IAAI;EAEb,IAAI;IACF,OAAO,IAAInE,MAAM,CAACmE,OAAO,EAAEC,OAAO,CAAC;EACrC,CAAC,CAAC,OAAOK,EAAE,EAAE;IACX,OAAO,IAAI;EACb;AACF;AAEA3E,OAAO,CAAC4E,KAAK,GAAGA,KAAK;AACrB,SAASA,KAAK,CAACP,OAAO,EAAEC,OAAO,EAAE;EAC/B,IAAIO,CAAC,GAAGT,KAAK,CAACC,OAAO,EAAEC,OAAO,CAAC;EAC/B,OAAOO,CAAC,GAAGA,CAAC,CAACR,OAAO,GAAG,IAAI;AAC7B;AAGArE,OAAO,CAAC8E,KAAK,GAAGA,KAAK;AACrB,SAASA,KAAK,CAACT,OAAO,EAAEC,OAAO,EAAE;EAC/B,IAAIS,CAAC,GAAGX,KAAK,CAACC,OAAO,CAACW,IAAI,EAAE,CAACC,OAAO,CAAC,QAAQ,EAAE,EAAE,CAAC,EAAEX,OAAO,CAAC;EAC5D,OAAOS,CAAC,GAAGA,CAAC,CAACV,OAAO,GAAG,IAAI;AAC7B;AAEArE,OAAO,CAACE,MAAM,GAAGA,MAAM;AAEvB,SAASA,MAAM,CAACmE,OAAO,EAAEC,OAAO,EAAE;EAChC,IAAI,CAACA,OAAO,IAAI,OAAOA,OAAO,KAAK,QAAQ,EACzCA,OAAO,GAAG;IAAEC,KAAK,EAAE,CAAC,CAACD,OAAO;IAAEE,iBAAiB,EAAE;EAAM,CAAC;EAC1D,IAAIH,OAAO,YAAYnE,MAAM,EAAE;IAC7B,IAAImE,OAAO,CAACE,KAAK,KAAKD,OAAO,CAACC,KAAK,EACjC,OAAOF,OAAO,CAAC,KAEfA,OAAO,GAAGA,OAAO,CAACA,OAAO;EAC7B,CAAC,MAAM,IAAI,OAAOA,OAAO,KAAK,QAAQ,EAAE;IACtC,MAAM,IAAIa,SAAS,CAAC,mBAAmB,GAAGb,OAAO,CAAC;EACpD;EAEA,IAAIA,OAAO,CAACI,MAAM,GAAGtD,UAAU,EAC7B,MAAM,IAAI+D,SAAS,CAAC,yBAAyB,GAAG/D,UAAU,GAAG,aAAa,CAAC;EAE7E,IAAI,EAAE,IAAI,YAAYjB,MAAM,CAAC,EAC3B,OAAO,IAAIA,MAAM,CAACmE,OAAO,EAAEC,OAAO,CAAC;EAErCnE,KAAK,CAAC,QAAQ,EAAEkE,OAAO,EAAEC,OAAO,CAAC;EACjC,IAAI,CAACA,OAAO,GAAGA,OAAO;EACtB,IAAI,CAACC,KAAK,GAAG,CAAC,CAACD,OAAO,CAACC,KAAK;EAE5B,IAAIY,CAAC,GAAGd,OAAO,CAACW,IAAI,EAAE,CAACI,KAAK,CAACd,OAAO,CAACC,KAAK,GAAGhD,EAAE,CAACiB,KAAK,CAAC,GAAGjB,EAAE,CAACc,IAAI,CAAC,CAAC;EAElE,IAAI,CAAC8C,CAAC,EACJ,MAAM,IAAID,SAAS,CAAC,mBAAmB,GAAGb,OAAO,CAAC;EAEpD,IAAI,CAACgB,GAAG,GAAGhB,OAAO;;EAElB;EACA,IAAI,CAACiB,KAAK,GAAG,CAACH,CAAC,CAAC,CAAC,CAAC;EAClB,IAAI,CAACI,KAAK,GAAG,CAACJ,CAAC,CAAC,CAAC,CAAC;EAClB,IAAI,CAACK,KAAK,GAAG,CAACL,CAAC,CAAC,CAAC,CAAC;EAElB,IAAI,IAAI,CAACG,KAAK,GAAGlE,gBAAgB,IAAI,IAAI,CAACkE,KAAK,GAAG,CAAC,EACjD,MAAM,IAAIJ,SAAS,CAAC,uBAAuB,CAAC;EAE9C,IAAI,IAAI,CAACK,KAAK,GAAGnE,gBAAgB,IAAI,IAAI,CAACmE,KAAK,GAAG,CAAC,EACjD,MAAM,IAAIL,SAAS,CAAC,uBAAuB,CAAC;EAE9C,IAAI,IAAI,CAACM,KAAK,GAAGpE,gBAAgB,IAAI,IAAI,CAACoE,KAAK,GAAG,CAAC,EACjD,MAAM,IAAIN,SAAS,CAAC,uBAAuB,CAAC;;EAE9C;EACA,IAAI,CAACC,CAAC,CAAC,CAAC,CAAC,EACP,IAAI,CAACM,UAAU,GAAG,EAAE,CAAC,KAErB,IAAI,CAACA,UAAU,GAAGN,CAAC,CAAC,CAAC,CAAC,CAACO,KAAK,CAAC,GAAG,CAAC,CAACC,GAAG,CAAC,UAASC,EAAE,EAAE;IACjD,IAAI,UAAU,CAACrF,IAAI,CAACqF,EAAE,CAAC,EAAE;MACvB,IAAIC,GAAG,GAAG,CAACD,EAAE;MACb,IAAIC,GAAG,IAAI,CAAC,IAAIA,GAAG,GAAGzE,gBAAgB,EACpC,OAAOyE,GAAG;IACd;IACA,OAAOD,EAAE;EACX,CAAC,CAAC;EAEJ,IAAI,CAACE,KAAK,GAAGX,CAAC,CAAC,CAAC,CAAC,GAAGA,CAAC,CAAC,CAAC,CAAC,CAACO,KAAK,CAAC,GAAG,CAAC,GAAG,EAAE;EACxC,IAAI,CAACK,MAAM,EAAE;AACf;AAEA7F,MAAM,CAACQ,SAAS,CAACqF,MAAM,GAAG,YAAW;EACnC,IAAI,CAAC1B,OAAO,GAAG,IAAI,CAACiB,KAAK,GAAG,GAAG,GAAG,IAAI,CAACC,KAAK,GAAG,GAAG,GAAG,IAAI,CAACC,KAAK;EAC/D,IAAI,IAAI,CAACC,UAAU,CAAChB,MAAM,EACxB,IAAI,CAACJ,OAAO,IAAI,GAAG,GAAG,IAAI,CAACoB,UAAU,CAACO,IAAI,CAAC,GAAG,CAAC;EACjD,OAAO,IAAI,CAAC3B,OAAO;AACrB,CAAC;AAEDnE,MAAM,CAACQ,SAAS,CAACuF,QAAQ,GAAG,YAAW;EACrC,OAAO,IAAI,CAAC5B,OAAO;AACrB,CAAC;AAEDnE,MAAM,CAACQ,SAAS,CAACwF,OAAO,GAAG,UAASC,KAAK,EAAE;EACzChG,KAAK,CAAC,gBAAgB,EAAE,IAAI,CAACkE,OAAO,EAAE,IAAI,CAACC,OAAO,EAAE6B,KAAK,CAAC;EAC1D,IAAI,EAAEA,KAAK,YAAYjG,MAAM,CAAC,EAC5BiG,KAAK,GAAG,IAAIjG,MAAM,CAACiG,KAAK,EAAE,IAAI,CAAC7B,OAAO,CAAC;EAEzC,OAAO,IAAI,CAAC8B,WAAW,CAACD,KAAK,CAAC,IAAI,IAAI,CAACE,UAAU,CAACF,KAAK,CAAC;AAC1D,CAAC;AAEDjG,MAAM,CAACQ,SAAS,CAAC0F,WAAW,GAAG,UAASD,KAAK,EAAE;EAC7C,IAAI,EAAEA,KAAK,YAAYjG,MAAM,CAAC,EAC5BiG,KAAK,GAAG,IAAIjG,MAAM,CAACiG,KAAK,EAAE,IAAI,CAAC7B,OAAO,CAAC;EAEzC,OAAOgC,kBAAkB,CAAC,IAAI,CAAChB,KAAK,EAAEa,KAAK,CAACb,KAAK,CAAC,IAC3CgB,kBAAkB,CAAC,IAAI,CAACf,KAAK,EAAEY,KAAK,CAACZ,KAAK,CAAC,IAC3Ce,kBAAkB,CAAC,IAAI,CAACd,KAAK,EAAEW,KAAK,CAACX,KAAK,CAAC;AACpD,CAAC;AAEDtF,MAAM,CAACQ,SAAS,CAAC2F,UAAU,GAAG,UAASF,KAAK,EAAE;EAC5C,IAAI,EAAEA,KAAK,YAAYjG,MAAM,CAAC,EAC5BiG,KAAK,GAAG,IAAIjG,MAAM,CAACiG,KAAK,EAAE,IAAI,CAAC7B,OAAO,CAAC;;EAEzC;EACA,IAAI,IAAI,CAACmB,UAAU,CAAChB,MAAM,IAAI,CAAC0B,KAAK,CAACV,UAAU,CAAChB,MAAM,EACpD,OAAO,CAAC,CAAC,CAAC,KACP,IAAI,CAAC,IAAI,CAACgB,UAAU,CAAChB,MAAM,IAAI0B,KAAK,CAACV,UAAU,CAAChB,MAAM,EACzD,OAAO,CAAC,CAAC,KACN,IAAI,CAAC,IAAI,CAACgB,UAAU,CAAChB,MAAM,IAAI,CAAC0B,KAAK,CAACV,UAAU,CAAChB,MAAM,EAC1D,OAAO,CAAC;EAEV,IAAIN,CAAC,GAAG,CAAC;EACT,GAAG;IACD,IAAIoC,CAAC,GAAG,IAAI,CAACd,UAAU,CAACtB,CAAC,CAAC;IAC1B,IAAIqC,CAAC,GAAGL,KAAK,CAACV,UAAU,CAACtB,CAAC,CAAC;IAC3BhE,KAAK,CAAC,oBAAoB,EAAEgE,CAAC,EAAEoC,CAAC,EAAEC,CAAC,CAAC;IACpC,IAAID,CAAC,KAAKE,SAAS,IAAID,CAAC,KAAKC,SAAS,EACpC,OAAO,CAAC,CAAC,KACN,IAAID,CAAC,KAAKC,SAAS,EACtB,OAAO,CAAC,CAAC,KACN,IAAIF,CAAC,KAAKE,SAAS,EACtB,OAAO,CAAC,CAAC,CAAC,KACP,IAAIF,CAAC,KAAKC,CAAC,EACd,SAAS,KAET,OAAOF,kBAAkB,CAACC,CAAC,EAAEC,CAAC,CAAC;EACnC,CAAC,QAAQ,EAAErC,CAAC;AACd,CAAC;;AAED;AACA;AACAjE,MAAM,CAACQ,SAAS,CAACgG,GAAG,GAAG,UAASC,OAAO,EAAEC,UAAU,EAAE;EACnD,QAAQD,OAAO;IACb,KAAK,UAAU;MACb,IAAI,CAAClB,UAAU,CAAChB,MAAM,GAAG,CAAC;MAC1B,IAAI,CAACe,KAAK,GAAG,CAAC;MACd,IAAI,CAACD,KAAK,GAAG,CAAC;MACd,IAAI,CAACD,KAAK,EAAE;MACZ,IAAI,CAACoB,GAAG,CAAC,KAAK,EAAEE,UAAU,CAAC;MAC3B;IACF,KAAK,UAAU;MACb,IAAI,CAACnB,UAAU,CAAChB,MAAM,GAAG,CAAC;MAC1B,IAAI,CAACe,KAAK,GAAG,CAAC;MACd,IAAI,CAACD,KAAK,EAAE;MACZ,IAAI,CAACmB,GAAG,CAAC,KAAK,EAAEE,UAAU,CAAC;MAC3B;IACF,KAAK,UAAU;MACb;MACA;MACA;MACA,IAAI,CAACnB,UAAU,CAAChB,MAAM,GAAG,CAAC;MAC1B,IAAI,CAACiC,GAAG,CAAC,OAAO,EAAEE,UAAU,CAAC;MAC7B,IAAI,CAACF,GAAG,CAAC,KAAK,EAAEE,UAAU,CAAC;MAC3B;IACF;IACA;IACA,KAAK,YAAY;MACf,IAAI,IAAI,CAACnB,UAAU,CAAChB,MAAM,KAAK,CAAC,EAC9B,IAAI,CAACiC,GAAG,CAAC,OAAO,EAAEE,UAAU,CAAC;MAC/B,IAAI,CAACF,GAAG,CAAC,KAAK,EAAEE,UAAU,CAAC;MAC3B;IAEF,KAAK,OAAO;MACV;MACA;MACA;MACA;MACA,IAAI,IAAI,CAACrB,KAAK,KAAK,CAAC,IAAI,IAAI,CAACC,KAAK,KAAK,CAAC,IAAI,IAAI,CAACC,UAAU,CAAChB,MAAM,KAAK,CAAC,EACtE,IAAI,CAACa,KAAK,EAAE;MACd,IAAI,CAACC,KAAK,GAAG,CAAC;MACd,IAAI,CAACC,KAAK,GAAG,CAAC;MACd,IAAI,CAACC,UAAU,GAAG,EAAE;MACpB;IACF,KAAK,OAAO;MACV;MACA;MACA;MACA;MACA,IAAI,IAAI,CAACD,KAAK,KAAK,CAAC,IAAI,IAAI,CAACC,UAAU,CAAChB,MAAM,KAAK,CAAC,EAClD,IAAI,CAACc,KAAK,EAAE;MACd,IAAI,CAACC,KAAK,GAAG,CAAC;MACd,IAAI,CAACC,UAAU,GAAG,EAAE;MACpB;IACF,KAAK,OAAO;MACV;MACA;MACA;MACA;MACA,IAAI,IAAI,CAACA,UAAU,CAAChB,MAAM,KAAK,CAAC,EAC9B,IAAI,CAACe,KAAK,EAAE;MACd,IAAI,CAACC,UAAU,GAAG,EAAE;MACpB;IACF;IACA;IACA,KAAK,KAAK;MACR,IAAI,IAAI,CAACA,UAAU,CAAChB,MAAM,KAAK,CAAC,EAC9B,IAAI,CAACgB,UAAU,GAAG,CAAC,CAAC,CAAC,CAAC,KACnB;QACH,IAAItB,CAAC,GAAG,IAAI,CAACsB,UAAU,CAAChB,MAAM;QAC9B,OAAO,EAAEN,CAAC,IAAI,CAAC,EAAE;UACf,IAAI,OAAO,IAAI,CAACsB,UAAU,CAACtB,CAAC,CAAC,KAAK,QAAQ,EAAE;YAC1C,IAAI,CAACsB,UAAU,CAACtB,CAAC,CAAC,EAAE;YACpBA,CAAC,GAAG,CAAC,CAAC;UACR;QACF;QACA,IAAIA,CAAC,KAAK,CAAC,CAAC;UAAE;UACZ,IAAI,CAACsB,UAAU,CAACoB,IAAI,CAAC,CAAC,CAAC;MAC3B;MACA,IAAID,UAAU,EAAE;QACd;QACA;QACA,IAAI,IAAI,CAACnB,UAAU,CAAC,CAAC,CAAC,KAAKmB,UAAU,EAAE;UACrC,IAAIE,KAAK,CAAC,IAAI,CAACrB,UAAU,CAAC,CAAC,CAAC,CAAC,EAC3B,IAAI,CAACA,UAAU,GAAG,CAACmB,UAAU,EAAE,CAAC,CAAC;QACrC,CAAC,MACC,IAAI,CAACnB,UAAU,GAAG,CAACmB,UAAU,EAAE,CAAC,CAAC;MACrC;MACA;IAEF;MACE,MAAM,IAAIG,KAAK,CAAC,8BAA8B,GAAGJ,OAAO,CAAC;EAAC;EAE9D,IAAI,CAACZ,MAAM,EAAE;EACb,IAAI,CAACV,GAAG,GAAG,IAAI,CAAChB,OAAO;EACvB,OAAO,IAAI;AACb,CAAC;AAEDrE,OAAO,CAAC0G,GAAG,GAAGA,GAAG;AACjB,SAASA,GAAG,CAACrC,OAAO,EAAEsC,OAAO,EAAEpC,KAAK,EAAEqC,UAAU,EAAE;EAChD,IAAI,OAAOrC,KAAM,KAAK,QAAQ,EAAE;IAC9BqC,UAAU,GAAGrC,KAAK;IAClBA,KAAK,GAAGkC,SAAS;EACnB;EAEA,IAAI;IACF,OAAO,IAAIvG,MAAM,CAACmE,OAAO,EAAEE,KAAK,CAAC,CAACmC,GAAG,CAACC,OAAO,EAAEC,UAAU,CAAC,CAACvC,OAAO;EACpE,CAAC,CAAC,OAAOM,EAAE,EAAE;IACX,OAAO,IAAI;EACb;AACF;AAEA3E,OAAO,CAACgH,IAAI,GAAGA,IAAI;AACnB,SAASA,IAAI,CAACC,QAAQ,EAAEC,QAAQ,EAAE;EAChC,IAAIC,EAAE,CAACF,QAAQ,EAAEC,QAAQ,CAAC,EAAE;IAC1B,OAAO,IAAI;EACb,CAAC,MAAM;IACL,IAAIE,EAAE,GAAGhD,KAAK,CAAC6C,QAAQ,CAAC;IACxB,IAAII,EAAE,GAAGjD,KAAK,CAAC8C,QAAQ,CAAC;IACxB,IAAIE,EAAE,CAAC3B,UAAU,CAAChB,MAAM,IAAI4C,EAAE,CAAC5B,UAAU,CAAChB,MAAM,EAAE;MAChD,KAAK,IAAI6C,GAAG,IAAIF,EAAE,EAAE;QAClB,IAAIE,GAAG,KAAK,OAAO,IAAIA,GAAG,KAAK,OAAO,IAAIA,GAAG,KAAK,OAAO,EAAE;UACzD,IAAIF,EAAE,CAACE,GAAG,CAAC,KAAKD,EAAE,CAACC,GAAG,CAAC,EAAE;YACvB,OAAO,KAAK,GAACA,GAAG;UAClB;QACF;MACF;MACA,OAAO,YAAY;IACrB;IACA,KAAK,IAAIA,GAAG,IAAIF,EAAE,EAAE;MAClB,IAAIE,GAAG,KAAK,OAAO,IAAIA,GAAG,KAAK,OAAO,IAAIA,GAAG,KAAK,OAAO,EAAE;QACzD,IAAIF,EAAE,CAACE,GAAG,CAAC,KAAKD,EAAE,CAACC,GAAG,CAAC,EAAE;UACvB,OAAOA,GAAG;QACZ;MACF;IACF;EACF;AACF;AAEAtH,OAAO,CAACsG,kBAAkB,GAAGA,kBAAkB;AAE/C,IAAIiB,OAAO,GAAG,UAAU;AACxB,SAASjB,kBAAkB,CAACC,CAAC,EAAEC,CAAC,EAAE;EAChC,IAAIgB,IAAI,GAAGD,OAAO,CAAChH,IAAI,CAACgG,CAAC,CAAC;EAC1B,IAAIkB,IAAI,GAAGF,OAAO,CAAChH,IAAI,CAACiG,CAAC,CAAC;EAE1B,IAAIgB,IAAI,IAAIC,IAAI,EAAE;IAChBlB,CAAC,GAAG,CAACA,CAAC;IACNC,CAAC,GAAG,CAACA,CAAC;EACR;EAEA,OAAQgB,IAAI,IAAI,CAACC,IAAI,GAAI,CAAC,CAAC,GACnBA,IAAI,IAAI,CAACD,IAAI,GAAI,CAAC,GACnBjB,CAAC,GAAGC,CAAC,GAAG,CAAC,CAAC,GACVD,CAAC,GAAGC,CAAC,GAAG,CAAC,GACT,CAAC;AACV;AAEAxG,OAAO,CAAC0H,mBAAmB,GAAGA,mBAAmB;AACjD,SAASA,mBAAmB,CAACnB,CAAC,EAAEC,CAAC,EAAE;EACjC,OAAOF,kBAAkB,CAACE,CAAC,EAAED,CAAC,CAAC;AACjC;AAEAvG,OAAO,CAACsF,KAAK,GAAGA,KAAK;AACrB,SAASA,KAAK,CAACiB,CAAC,EAAEhC,KAAK,EAAE;EACvB,OAAO,IAAIrE,MAAM,CAACqG,CAAC,EAAEhC,KAAK,CAAC,CAACe,KAAK;AACnC;AAEAtF,OAAO,CAACuF,KAAK,GAAGA,KAAK;AACrB,SAASA,KAAK,CAACgB,CAAC,EAAEhC,KAAK,EAAE;EACvB,OAAO,IAAIrE,MAAM,CAACqG,CAAC,EAAEhC,KAAK,CAAC,CAACgB,KAAK;AACnC;AAEAvF,OAAO,CAACwF,KAAK,GAAGA,KAAK;AACrB,SAASA,KAAK,CAACe,CAAC,EAAEhC,KAAK,EAAE;EACvB,OAAO,IAAIrE,MAAM,CAACqG,CAAC,EAAEhC,KAAK,CAAC,CAACiB,KAAK;AACnC;AAEAxF,OAAO,CAACkG,OAAO,GAAGA,OAAO;AACzB,SAASA,OAAO,CAACK,CAAC,EAAEC,CAAC,EAAEjC,KAAK,EAAE;EAC5B,OAAO,IAAIrE,MAAM,CAACqG,CAAC,EAAEhC,KAAK,CAAC,CAAC2B,OAAO,CAAC,IAAIhG,MAAM,CAACsG,CAAC,EAAEjC,KAAK,CAAC,CAAC;AAC3D;AAEAvE,OAAO,CAAC2H,YAAY,GAAGA,YAAY;AACnC,SAASA,YAAY,CAACpB,CAAC,EAAEC,CAAC,EAAE;EAC1B,OAAON,OAAO,CAACK,CAAC,EAAEC,CAAC,EAAE,IAAI,CAAC;AAC5B;AAEAxG,OAAO,CAAC4H,QAAQ,GAAGA,QAAQ;AAC3B,SAASA,QAAQ,CAACrB,CAAC,EAAEC,CAAC,EAAEjC,KAAK,EAAE;EAC7B,OAAO2B,OAAO,CAACM,CAAC,EAAED,CAAC,EAAEhC,KAAK,CAAC;AAC7B;AAEAvE,OAAO,CAAC6H,IAAI,GAAGA,IAAI;AACnB,SAASA,IAAI,CAACC,IAAI,EAAEvD,KAAK,EAAE;EACzB,OAAOuD,IAAI,CAACD,IAAI,CAAC,UAAStB,CAAC,EAAEC,CAAC,EAAE;IAC9B,OAAOxG,OAAO,CAACkG,OAAO,CAACK,CAAC,EAAEC,CAAC,EAAEjC,KAAK,CAAC;EACrC,CAAC,CAAC;AACJ;AAEAvE,OAAO,CAAC+H,KAAK,GAAGA,KAAK;AACrB,SAASA,KAAK,CAACD,IAAI,EAAEvD,KAAK,EAAE;EAC1B,OAAOuD,IAAI,CAACD,IAAI,CAAC,UAAStB,CAAC,EAAEC,CAAC,EAAE;IAC9B,OAAOxG,OAAO,CAAC4H,QAAQ,CAACrB,CAAC,EAAEC,CAAC,EAAEjC,KAAK,CAAC;EACtC,CAAC,CAAC;AACJ;AAEAvE,OAAO,CAACgI,EAAE,GAAGA,EAAE;AACf,SAASA,EAAE,CAACzB,CAAC,EAAEC,CAAC,EAAEjC,KAAK,EAAE;EACvB,OAAO2B,OAAO,CAACK,CAAC,EAAEC,CAAC,EAAEjC,KAAK,CAAC,GAAG,CAAC;AACjC;AAEAvE,OAAO,CAACiI,EAAE,GAAGA,EAAE;AACf,SAASA,EAAE,CAAC1B,CAAC,EAAEC,CAAC,EAAEjC,KAAK,EAAE;EACvB,OAAO2B,OAAO,CAACK,CAAC,EAAEC,CAAC,EAAEjC,KAAK,CAAC,GAAG,CAAC;AACjC;AAEAvE,OAAO,CAACmH,EAAE,GAAGA,EAAE;AACf,SAASA,EAAE,CAACZ,CAAC,EAAEC,CAAC,EAAEjC,KAAK,EAAE;EACvB,OAAO2B,OAAO,CAACK,CAAC,EAAEC,CAAC,EAAEjC,KAAK,CAAC,KAAK,CAAC;AACnC;AAEAvE,OAAO,CAACkI,GAAG,GAAGA,GAAG;AACjB,SAASA,GAAG,CAAC3B,CAAC,EAAEC,CAAC,EAAEjC,KAAK,EAAE;EACxB,OAAO2B,OAAO,CAACK,CAAC,EAAEC,CAAC,EAAEjC,KAAK,CAAC,KAAK,CAAC;AACnC;AAEAvE,OAAO,CAACmI,GAAG,GAAGA,GAAG;AACjB,SAASA,GAAG,CAAC5B,CAAC,EAAEC,CAAC,EAAEjC,KAAK,EAAE;EACxB,OAAO2B,OAAO,CAACK,CAAC,EAAEC,CAAC,EAAEjC,KAAK,CAAC,IAAI,CAAC;AAClC;AAEAvE,OAAO,CAACoI,GAAG,GAAGA,GAAG;AACjB,SAASA,GAAG,CAAC7B,CAAC,EAAEC,CAAC,EAAEjC,KAAK,EAAE;EACxB,OAAO2B,OAAO,CAACK,CAAC,EAAEC,CAAC,EAAEjC,KAAK,CAAC,IAAI,CAAC;AAClC;AAEAvE,OAAO,CAACqI,GAAG,GAAGA,GAAG;AACjB,SAASA,GAAG,CAAC9B,CAAC,EAAE+B,EAAE,EAAE9B,CAAC,EAAEjC,KAAK,EAAE;EAC5B,IAAIgE,GAAG;EACP,QAAQD,EAAE;IACR,KAAK,KAAK;MACR,IAAI,OAAO/B,CAAC,KAAK,QAAQ,EAAEA,CAAC,GAAGA,CAAC,CAAClC,OAAO;MACxC,IAAI,OAAOmC,CAAC,KAAK,QAAQ,EAAEA,CAAC,GAAGA,CAAC,CAACnC,OAAO;MACxCkE,GAAG,GAAGhC,CAAC,KAAKC,CAAC;MACb;IACF,KAAK,KAAK;MACR,IAAI,OAAOD,CAAC,KAAK,QAAQ,EAAEA,CAAC,GAAGA,CAAC,CAAClC,OAAO;MACxC,IAAI,OAAOmC,CAAC,KAAK,QAAQ,EAAEA,CAAC,GAAGA,CAAC,CAACnC,OAAO;MACxCkE,GAAG,GAAGhC,CAAC,KAAKC,CAAC;MACb;IACF,KAAK,EAAE;IAAE,KAAK,GAAG;IAAE,KAAK,IAAI;MAAE+B,GAAG,GAAGpB,EAAE,CAACZ,CAAC,EAAEC,CAAC,EAAEjC,KAAK,CAAC;MAAE;IACrD,KAAK,IAAI;MAAEgE,GAAG,GAAGL,GAAG,CAAC3B,CAAC,EAAEC,CAAC,EAAEjC,KAAK,CAAC;MAAE;IACnC,KAAK,GAAG;MAAEgE,GAAG,GAAGP,EAAE,CAACzB,CAAC,EAAEC,CAAC,EAAEjC,KAAK,CAAC;MAAE;IACjC,KAAK,IAAI;MAAEgE,GAAG,GAAGJ,GAAG,CAAC5B,CAAC,EAAEC,CAAC,EAAEjC,KAAK,CAAC;MAAE;IACnC,KAAK,GAAG;MAAEgE,GAAG,GAAGN,EAAE,CAAC1B,CAAC,EAAEC,CAAC,EAAEjC,KAAK,CAAC;MAAE;IACjC,KAAK,IAAI;MAAEgE,GAAG,GAAGH,GAAG,CAAC7B,CAAC,EAAEC,CAAC,EAAEjC,KAAK,CAAC;MAAE;IACnC;MAAS,MAAM,IAAIW,SAAS,CAAC,oBAAoB,GAAGoD,EAAE,CAAC;EAAC;EAE1D,OAAOC,GAAG;AACZ;AAEAvI,OAAO,CAACwI,UAAU,GAAGA,UAAU;AAC/B,SAASA,UAAU,CAACC,IAAI,EAAEnE,OAAO,EAAE;EACjC,IAAI,CAACA,OAAO,IAAI,OAAOA,OAAO,KAAK,QAAQ,EACzCA,OAAO,GAAG;IAAEC,KAAK,EAAE,CAAC,CAACD,OAAO;IAAEE,iBAAiB,EAAE;EAAM,CAAC;EAE1D,IAAIiE,IAAI,YAAYD,UAAU,EAAE;IAC9B,IAAIC,IAAI,CAAClE,KAAK,KAAK,CAAC,CAACD,OAAO,CAACC,KAAK,EAChC,OAAOkE,IAAI,CAAC,KAEZA,IAAI,GAAGA,IAAI,CAACC,KAAK;EACrB;EAEA,IAAI,EAAE,IAAI,YAAYF,UAAU,CAAC,EAC/B,OAAO,IAAIA,UAAU,CAACC,IAAI,EAAEnE,OAAO,CAAC;EAEtCnE,KAAK,CAAC,YAAY,EAAEsI,IAAI,EAAEnE,OAAO,CAAC;EAClC,IAAI,CAACA,OAAO,GAAGA,OAAO;EACtB,IAAI,CAACC,KAAK,GAAG,CAAC,CAACD,OAAO,CAACC,KAAK;EAC5B,IAAI,CAACH,KAAK,CAACqE,IAAI,CAAC;EAEhB,IAAI,IAAI,CAACE,MAAM,KAAKC,GAAG,EACrB,IAAI,CAACF,KAAK,GAAG,EAAE,CAAC,KAEhB,IAAI,CAACA,KAAK,GAAG,IAAI,CAACG,QAAQ,GAAG,IAAI,CAACF,MAAM,CAACtE,OAAO;EAElDlE,KAAK,CAAC,MAAM,EAAE,IAAI,CAAC;AACrB;AAEA,IAAIyI,GAAG,GAAG,CAAC,CAAC;AACZJ,UAAU,CAAC9H,SAAS,CAAC0D,KAAK,GAAG,UAASqE,IAAI,EAAE;EAC1C,IAAI/D,CAAC,GAAG,IAAI,CAACJ,OAAO,CAACC,KAAK,GAAGhD,EAAE,CAACqC,eAAe,CAAC,GAAGrC,EAAE,CAACsC,UAAU,CAAC;EACjE,IAAIsB,CAAC,GAAGsD,IAAI,CAACrD,KAAK,CAACV,CAAC,CAAC;EAErB,IAAI,CAACS,CAAC,EACJ,MAAM,IAAID,SAAS,CAAC,sBAAsB,GAAGuD,IAAI,CAAC;EAEpD,IAAI,CAACI,QAAQ,GAAG1D,CAAC,CAAC,CAAC,CAAC;EACpB,IAAI,IAAI,CAAC0D,QAAQ,KAAK,GAAG,EACvB,IAAI,CAACA,QAAQ,GAAG,EAAE;;EAEpB;EACA,IAAI,CAAC1D,CAAC,CAAC,CAAC,CAAC,EACP,IAAI,CAACwD,MAAM,GAAGC,GAAG,CAAC,KAElB,IAAI,CAACD,MAAM,GAAG,IAAIzI,MAAM,CAACiF,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,CAACb,OAAO,CAACC,KAAK,CAAC;AACtD,CAAC;AAEDiE,UAAU,CAAC9H,SAAS,CAACuF,QAAQ,GAAG,YAAW;EACzC,OAAO,IAAI,CAACyC,KAAK;AACnB,CAAC;AAEDF,UAAU,CAAC9H,SAAS,CAACH,IAAI,GAAG,UAAS8D,OAAO,EAAE;EAC5ClE,KAAK,CAAC,iBAAiB,EAAEkE,OAAO,EAAE,IAAI,CAACC,OAAO,CAACC,KAAK,CAAC;EAErD,IAAI,IAAI,CAACoE,MAAM,KAAKC,GAAG,EACrB,OAAO,IAAI;EAEb,IAAI,OAAOvE,OAAO,KAAK,QAAQ,EAC7BA,OAAO,GAAG,IAAInE,MAAM,CAACmE,OAAO,EAAE,IAAI,CAACC,OAAO,CAAC;EAE7C,OAAO+D,GAAG,CAAChE,OAAO,EAAE,IAAI,CAACwE,QAAQ,EAAE,IAAI,CAACF,MAAM,EAAE,IAAI,CAACrE,OAAO,CAAC;AAC/D,CAAC;AAEDkE,UAAU,CAAC9H,SAAS,CAACoI,UAAU,GAAG,UAASL,IAAI,EAAEnE,OAAO,EAAE;EACxD,IAAI,EAAEmE,IAAI,YAAYD,UAAU,CAAC,EAAE;IACjC,MAAM,IAAItD,SAAS,CAAC,0BAA0B,CAAC;EACjD;EAEA,IAAI,CAACZ,OAAO,IAAI,OAAOA,OAAO,KAAK,QAAQ,EACzCA,OAAO,GAAG;IAAEC,KAAK,EAAE,CAAC,CAACD,OAAO;IAAEE,iBAAiB,EAAE;EAAM,CAAC;EAE1D,IAAIuE,QAAQ;EAEZ,IAAI,IAAI,CAACF,QAAQ,KAAK,EAAE,EAAE;IACxBE,QAAQ,GAAG,IAAIC,KAAK,CAACP,IAAI,CAACC,KAAK,EAAEpE,OAAO,CAAC;IACzC,OAAO2E,SAAS,CAAC,IAAI,CAACP,KAAK,EAAEK,QAAQ,EAAEzE,OAAO,CAAC;EACjD,CAAC,MAAM,IAAImE,IAAI,CAACI,QAAQ,KAAK,EAAE,EAAE;IAC/BE,QAAQ,GAAG,IAAIC,KAAK,CAAC,IAAI,CAACN,KAAK,EAAEpE,OAAO,CAAC;IACzC,OAAO2E,SAAS,CAACR,IAAI,CAACE,MAAM,EAAEI,QAAQ,EAAEzE,OAAO,CAAC;EAClD;EAEA,IAAI4E,uBAAuB,GACzB,CAAC,IAAI,CAACL,QAAQ,KAAK,IAAI,IAAI,IAAI,CAACA,QAAQ,KAAK,GAAG,MAC/CJ,IAAI,CAACI,QAAQ,KAAK,IAAI,IAAIJ,IAAI,CAACI,QAAQ,KAAK,GAAG,CAAC;EACnD,IAAIM,uBAAuB,GACzB,CAAC,IAAI,CAACN,QAAQ,KAAK,IAAI,IAAI,IAAI,CAACA,QAAQ,KAAK,GAAG,MAC/CJ,IAAI,CAACI,QAAQ,KAAK,IAAI,IAAIJ,IAAI,CAACI,QAAQ,KAAK,GAAG,CAAC;EACnD,IAAIO,UAAU,GAAG,IAAI,CAACT,MAAM,CAACtE,OAAO,KAAKoE,IAAI,CAACE,MAAM,CAACtE,OAAO;EAC5D,IAAIgF,4BAA4B,GAC9B,CAAC,IAAI,CAACR,QAAQ,KAAK,IAAI,IAAI,IAAI,CAACA,QAAQ,KAAK,IAAI,MAChDJ,IAAI,CAACI,QAAQ,KAAK,IAAI,IAAIJ,IAAI,CAACI,QAAQ,KAAK,IAAI,CAAC;EACpD,IAAIS,0BAA0B,GAC5BjB,GAAG,CAAC,IAAI,CAACM,MAAM,EAAE,GAAG,EAAEF,IAAI,CAACE,MAAM,EAAErE,OAAO,CAAC,IAC1C,CAAC,IAAI,CAACuE,QAAQ,KAAK,IAAI,IAAI,IAAI,CAACA,QAAQ,KAAK,GAAG,MAChDJ,IAAI,CAACI,QAAQ,KAAK,IAAI,IAAIJ,IAAI,CAACI,QAAQ,KAAK,GAAG,CAAE;EACpD,IAAIU,6BAA6B,GAC/BlB,GAAG,CAAC,IAAI,CAACM,MAAM,EAAE,GAAG,EAAEF,IAAI,CAACE,MAAM,EAAErE,OAAO,CAAC,IAC1C,CAAC,IAAI,CAACuE,QAAQ,KAAK,IAAI,IAAI,IAAI,CAACA,QAAQ,KAAK,GAAG,MAChDJ,IAAI,CAACI,QAAQ,KAAK,IAAI,IAAIJ,IAAI,CAACI,QAAQ,KAAK,GAAG,CAAE;EAEpD,OAAOK,uBAAuB,IAAIC,uBAAuB,IACtDC,UAAU,IAAIC,4BAA6B,IAC5CC,0BAA0B,IAAIC,6BAA6B;AAC/D,CAAC;AAGDvJ,OAAO,CAACgJ,KAAK,GAAGA,KAAK;AACrB,SAASA,KAAK,CAACQ,KAAK,EAAElF,OAAO,EAAE;EAC7B,IAAI,CAACA,OAAO,IAAI,OAAOA,OAAO,KAAK,QAAQ,EACzCA,OAAO,GAAG;IAAEC,KAAK,EAAE,CAAC,CAACD,OAAO;IAAEE,iBAAiB,EAAE;EAAM,CAAC;EAE1D,IAAIgF,KAAK,YAAYR,KAAK,EAAE;IAC1B,IAAIQ,KAAK,CAACjF,KAAK,KAAK,CAAC,CAACD,OAAO,CAACC,KAAK,IAC/BiF,KAAK,CAAChF,iBAAiB,KAAK,CAAC,CAACF,OAAO,CAACE,iBAAiB,EAAE;MAC3D,OAAOgF,KAAK;IACd,CAAC,MAAM;MACL,OAAO,IAAIR,KAAK,CAACQ,KAAK,CAACnE,GAAG,EAAEf,OAAO,CAAC;IACtC;EACF;EAEA,IAAIkF,KAAK,YAAYhB,UAAU,EAAE;IAC/B,OAAO,IAAIQ,KAAK,CAACQ,KAAK,CAACd,KAAK,EAAEpE,OAAO,CAAC;EACxC;EAEA,IAAI,EAAE,IAAI,YAAY0E,KAAK,CAAC,EAC1B,OAAO,IAAIA,KAAK,CAACQ,KAAK,EAAElF,OAAO,CAAC;EAElC,IAAI,CAACA,OAAO,GAAGA,OAAO;EACtB,IAAI,CAACC,KAAK,GAAG,CAAC,CAACD,OAAO,CAACC,KAAK;EAC5B,IAAI,CAACC,iBAAiB,GAAG,CAAC,CAACF,OAAO,CAACE,iBAAiB;;EAEpD;EACA,IAAI,CAACa,GAAG,GAAGmE,KAAK;EAChB,IAAI,CAACC,GAAG,GAAGD,KAAK,CAAC9D,KAAK,CAAC,YAAY,CAAC,CAACC,GAAG,CAAC,UAAS6D,KAAK,EAAE;IACvD,OAAO,IAAI,CAACE,UAAU,CAACF,KAAK,CAACxE,IAAI,EAAE,CAAC;EACtC,CAAC,EAAE,IAAI,CAAC,CAAC2E,MAAM,CAAC,UAASC,CAAC,EAAE;IAC1B;IACA,OAAOA,CAAC,CAACnF,MAAM;EACjB,CAAC,CAAC;EAEF,IAAI,CAAC,IAAI,CAACgF,GAAG,CAAChF,MAAM,EAAE;IACpB,MAAM,IAAIS,SAAS,CAAC,wBAAwB,GAAGsE,KAAK,CAAC;EACvD;EAEA,IAAI,CAACzD,MAAM,EAAE;AACf;AAEAiD,KAAK,CAACtI,SAAS,CAACqF,MAAM,GAAG,YAAW;EAClC,IAAI,CAACyD,KAAK,GAAG,IAAI,CAACC,GAAG,CAAC9D,GAAG,CAAC,UAASkE,KAAK,EAAE;IACxC,OAAOA,KAAK,CAAC7D,IAAI,CAAC,GAAG,CAAC,CAAChB,IAAI,EAAE;EAC/B,CAAC,CAAC,CAACgB,IAAI,CAAC,IAAI,CAAC,CAAChB,IAAI,EAAE;EACpB,OAAO,IAAI,CAACwE,KAAK;AACnB,CAAC;AAEDR,KAAK,CAACtI,SAAS,CAACuF,QAAQ,GAAG,YAAW;EACpC,OAAO,IAAI,CAACuD,KAAK;AACnB,CAAC;AAEDR,KAAK,CAACtI,SAAS,CAACgJ,UAAU,GAAG,UAASF,KAAK,EAAE;EAC3C,IAAIjF,KAAK,GAAG,IAAI,CAACD,OAAO,CAACC,KAAK;EAC9BiF,KAAK,GAAGA,KAAK,CAACxE,IAAI,EAAE;EACpB;EACA,IAAI8E,EAAE,GAAGvF,KAAK,GAAGhD,EAAE,CAAC0C,gBAAgB,CAAC,GAAG1C,EAAE,CAACyC,WAAW,CAAC;EACvDwF,KAAK,GAAGA,KAAK,CAACvE,OAAO,CAAC6E,EAAE,EAAEC,aAAa,CAAC;EACxC5J,KAAK,CAAC,gBAAgB,EAAEqJ,KAAK,CAAC;EAC9B;EACAA,KAAK,GAAGA,KAAK,CAACvE,OAAO,CAAC1D,EAAE,CAACuC,cAAc,CAAC,EAAEC,qBAAqB,CAAC;EAChE5D,KAAK,CAAC,iBAAiB,EAAEqJ,KAAK,EAAEjI,EAAE,CAACuC,cAAc,CAAC,CAAC;;EAEnD;EACA0F,KAAK,GAAGA,KAAK,CAACvE,OAAO,CAAC1D,EAAE,CAAC2B,SAAS,CAAC,EAAEE,gBAAgB,CAAC;;EAEtD;EACAoG,KAAK,GAAGA,KAAK,CAACvE,OAAO,CAAC1D,EAAE,CAACiC,SAAS,CAAC,EAAEC,gBAAgB,CAAC;;EAEtD;EACA+F,KAAK,GAAGA,KAAK,CAAC9D,KAAK,CAAC,KAAK,CAAC,CAACM,IAAI,CAAC,GAAG,CAAC;;EAEpC;EACA;;EAEA,IAAIgE,MAAM,GAAGzF,KAAK,GAAGhD,EAAE,CAACqC,eAAe,CAAC,GAAGrC,EAAE,CAACsC,UAAU,CAAC;EACzD,IAAI4F,GAAG,GAAGD,KAAK,CAAC9D,KAAK,CAAC,GAAG,CAAC,CAACC,GAAG,CAAC,UAAS8C,IAAI,EAAE;IAC5C,OAAOwB,eAAe,CAACxB,IAAI,EAAE,IAAI,CAACnE,OAAO,CAAC;EAC5C,CAAC,EAAE,IAAI,CAAC,CAAC0B,IAAI,CAAC,GAAG,CAAC,CAACN,KAAK,CAAC,KAAK,CAAC;EAC/B,IAAI,IAAI,CAACpB,OAAO,CAACC,KAAK,EAAE;IACtB;IACAkF,GAAG,GAAGA,GAAG,CAACE,MAAM,CAAC,UAASlB,IAAI,EAAE;MAC9B,OAAO,CAAC,CAACA,IAAI,CAACrD,KAAK,CAAC4E,MAAM,CAAC;IAC7B,CAAC,CAAC;EACJ;EACAP,GAAG,GAAGA,GAAG,CAAC9D,GAAG,CAAC,UAAS8C,IAAI,EAAE;IAC3B,OAAO,IAAID,UAAU,CAACC,IAAI,EAAE,IAAI,CAACnE,OAAO,CAAC;EAC3C,CAAC,EAAE,IAAI,CAAC;EAER,OAAOmF,GAAG;AACZ,CAAC;AAEDT,KAAK,CAACtI,SAAS,CAACoI,UAAU,GAAG,UAASU,KAAK,EAAElF,OAAO,EAAE;EACpD,IAAI,EAAEkF,KAAK,YAAYR,KAAK,CAAC,EAAE;IAC7B,MAAM,IAAI9D,SAAS,CAAC,qBAAqB,CAAC;EAC5C;EAEA,OAAO,IAAI,CAACuE,GAAG,CAACS,IAAI,CAAC,UAASC,eAAe,EAAE;IAC7C,OAAOA,eAAe,CAACC,KAAK,CAAC,UAASC,cAAc,EAAE;MACpD,OAAOb,KAAK,CAACC,GAAG,CAACS,IAAI,CAAC,UAASI,gBAAgB,EAAE;QAC/C,OAAOA,gBAAgB,CAACF,KAAK,CAAC,UAASG,eAAe,EAAE;UACtD,OAAOF,cAAc,CAACvB,UAAU,CAACyB,eAAe,EAAEjG,OAAO,CAAC;QAC5D,CAAC,CAAC;MACJ,CAAC,CAAC;IACJ,CAAC,CAAC;EACJ,CAAC,CAAC;AACJ,CAAC;;AAED;AACAtE,OAAO,CAACwK,aAAa,GAAGA,aAAa;AACrC,SAASA,aAAa,CAAChB,KAAK,EAAElF,OAAO,EAAE;EACrC,OAAO,IAAI0E,KAAK,CAACQ,KAAK,EAAElF,OAAO,CAAC,CAACmF,GAAG,CAAC9D,GAAG,CAAC,UAAS8C,IAAI,EAAE;IACtD,OAAOA,IAAI,CAAC9C,GAAG,CAAC,UAASiE,CAAC,EAAE;MAC1B,OAAOA,CAAC,CAAClB,KAAK;IAChB,CAAC,CAAC,CAAC1C,IAAI,CAAC,GAAG,CAAC,CAAChB,IAAI,EAAE,CAACU,KAAK,CAAC,GAAG,CAAC;EAChC,CAAC,CAAC;AACJ;;AAEA;AACA;AACA;AACA,SAASuE,eAAe,CAACxB,IAAI,EAAEnE,OAAO,EAAE;EACtCnE,KAAK,CAAC,MAAM,EAAEsI,IAAI,EAAEnE,OAAO,CAAC;EAC5BmE,IAAI,GAAGgC,aAAa,CAAChC,IAAI,EAAEnE,OAAO,CAAC;EACnCnE,KAAK,CAAC,OAAO,EAAEsI,IAAI,CAAC;EACpBA,IAAI,GAAGiC,aAAa,CAACjC,IAAI,EAAEnE,OAAO,CAAC;EACnCnE,KAAK,CAAC,QAAQ,EAAEsI,IAAI,CAAC;EACrBA,IAAI,GAAGkC,cAAc,CAAClC,IAAI,EAAEnE,OAAO,CAAC;EACpCnE,KAAK,CAAC,QAAQ,EAAEsI,IAAI,CAAC;EACrBA,IAAI,GAAGmC,YAAY,CAACnC,IAAI,EAAEnE,OAAO,CAAC;EAClCnE,KAAK,CAAC,OAAO,EAAEsI,IAAI,CAAC;EACpB,OAAOA,IAAI;AACb;AAEA,SAASoC,GAAG,CAACjF,EAAE,EAAE;EACf,OAAO,CAACA,EAAE,IAAIA,EAAE,CAACkF,WAAW,EAAE,KAAK,GAAG,IAAIlF,EAAE,KAAK,GAAG;AACtD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS8E,aAAa,CAACjC,IAAI,EAAEnE,OAAO,EAAE;EACpC,OAAOmE,IAAI,CAACzD,IAAI,EAAE,CAACU,KAAK,CAAC,KAAK,CAAC,CAACC,GAAG,CAAC,UAAS8C,IAAI,EAAE;IACjD,OAAOsC,YAAY,CAACtC,IAAI,EAAEnE,OAAO,CAAC;EACpC,CAAC,CAAC,CAAC0B,IAAI,CAAC,GAAG,CAAC;AACd;AAEA,SAAS+E,YAAY,CAACtC,IAAI,EAAEnE,OAAO,EAAE;EACnC,IAAI,CAACA,OAAO,IAAI,OAAOA,OAAO,KAAK,QAAQ,EACzCA,OAAO,GAAG;IAAEC,KAAK,EAAE,CAAC,CAACD,OAAO;IAAEE,iBAAiB,EAAE;EAAM,CAAC;EAC1D,IAAIE,CAAC,GAAGJ,OAAO,CAACC,KAAK,GAAGhD,EAAE,CAAC+B,UAAU,CAAC,GAAG/B,EAAE,CAAC8B,KAAK,CAAC;EAClD,OAAOoF,IAAI,CAACxD,OAAO,CAACP,CAAC,EAAE,UAASsG,CAAC,EAAEC,CAAC,EAAE9F,CAAC,EAAE+F,CAAC,EAAEC,EAAE,EAAE;IAC9ChL,KAAK,CAAC,OAAO,EAAEsI,IAAI,EAAEuC,CAAC,EAAEC,CAAC,EAAE9F,CAAC,EAAE+F,CAAC,EAAEC,EAAE,CAAC;IACpC,IAAI5C,GAAG;IAEP,IAAIsC,GAAG,CAACI,CAAC,CAAC,EACR1C,GAAG,GAAG,EAAE,CAAC,KACN,IAAIsC,GAAG,CAAC1F,CAAC,CAAC,EACboD,GAAG,GAAG,IAAI,GAAG0C,CAAC,GAAG,QAAQ,IAAI,CAACA,CAAC,GAAG,CAAC,CAAC,GAAG,MAAM,CAAC,KAC3C,IAAIJ,GAAG,CAACK,CAAC,CAAC;MACb;MACA3C,GAAG,GAAG,IAAI,GAAG0C,CAAC,GAAG,GAAG,GAAG9F,CAAC,GAAG,MAAM,GAAG8F,CAAC,GAAG,GAAG,IAAI,CAAC9F,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,KAC3D,IAAIgG,EAAE,EAAE;MACXhL,KAAK,CAAC,iBAAiB,EAAEgL,EAAE,CAAC;MAC5B,IAAIA,EAAE,CAACC,MAAM,CAAC,CAAC,CAAC,KAAK,GAAG,EACtBD,EAAE,GAAG,GAAG,GAAGA,EAAE;MACf5C,GAAG,GAAG,IAAI,GAAG0C,CAAC,GAAG,GAAG,GAAG9F,CAAC,GAAG,GAAG,GAAG+F,CAAC,GAAGC,EAAE,GACjC,IAAI,GAAGF,CAAC,GAAG,GAAG,IAAI,CAAC9F,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI;IACxC,CAAC;MACC;MACAoD,GAAG,GAAG,IAAI,GAAG0C,CAAC,GAAG,GAAG,GAAG9F,CAAC,GAAG,GAAG,GAAG+F,CAAC,GAC5B,IAAI,GAAGD,CAAC,GAAG,GAAG,IAAI,CAAC9F,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI;IAExChF,KAAK,CAAC,cAAc,EAAEoI,GAAG,CAAC;IAC1B,OAAOA,GAAG;EACZ,CAAC,CAAC;AACJ;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAASkC,aAAa,CAAChC,IAAI,EAAEnE,OAAO,EAAE;EACpC,OAAOmE,IAAI,CAACzD,IAAI,EAAE,CAACU,KAAK,CAAC,KAAK,CAAC,CAACC,GAAG,CAAC,UAAS8C,IAAI,EAAE;IACjD,OAAO4C,YAAY,CAAC5C,IAAI,EAAEnE,OAAO,CAAC;EACpC,CAAC,CAAC,CAAC0B,IAAI,CAAC,GAAG,CAAC;AACd;AAEA,SAASqF,YAAY,CAAC5C,IAAI,EAAEnE,OAAO,EAAE;EACnCnE,KAAK,CAAC,OAAO,EAAEsI,IAAI,EAAEnE,OAAO,CAAC;EAC7B,IAAI,CAACA,OAAO,IAAI,OAAOA,OAAO,KAAK,QAAQ,EACzCA,OAAO,GAAG;IAAEC,KAAK,EAAE,CAAC,CAACD,OAAO;IAAEE,iBAAiB,EAAE;EAAM,CAAC;EAC1D,IAAIE,CAAC,GAAGJ,OAAO,CAACC,KAAK,GAAGhD,EAAE,CAACoC,UAAU,CAAC,GAAGpC,EAAE,CAACmC,KAAK,CAAC;EAClD,OAAO+E,IAAI,CAACxD,OAAO,CAACP,CAAC,EAAE,UAASsG,CAAC,EAAEC,CAAC,EAAE9F,CAAC,EAAE+F,CAAC,EAAEC,EAAE,EAAE;IAC9ChL,KAAK,CAAC,OAAO,EAAEsI,IAAI,EAAEuC,CAAC,EAAEC,CAAC,EAAE9F,CAAC,EAAE+F,CAAC,EAAEC,EAAE,CAAC;IACpC,IAAI5C,GAAG;IAEP,IAAIsC,GAAG,CAACI,CAAC,CAAC,EACR1C,GAAG,GAAG,EAAE,CAAC,KACN,IAAIsC,GAAG,CAAC1F,CAAC,CAAC,EACboD,GAAG,GAAG,IAAI,GAAG0C,CAAC,GAAG,QAAQ,IAAI,CAACA,CAAC,GAAG,CAAC,CAAC,GAAG,MAAM,CAAC,KAC3C,IAAIJ,GAAG,CAACK,CAAC,CAAC,EAAE;MACf,IAAID,CAAC,KAAK,GAAG,EACX1C,GAAG,GAAG,IAAI,GAAG0C,CAAC,GAAG,GAAG,GAAG9F,CAAC,GAAG,MAAM,GAAG8F,CAAC,GAAG,GAAG,IAAI,CAAC9F,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,KAE9DoD,GAAG,GAAG,IAAI,GAAG0C,CAAC,GAAG,GAAG,GAAG9F,CAAC,GAAG,MAAM,IAAI,CAAC8F,CAAC,GAAG,CAAC,CAAC,GAAG,MAAM;IACzD,CAAC,MAAM,IAAIE,EAAE,EAAE;MACbhL,KAAK,CAAC,iBAAiB,EAAEgL,EAAE,CAAC;MAC5B,IAAIA,EAAE,CAACC,MAAM,CAAC,CAAC,CAAC,KAAK,GAAG,EACtBD,EAAE,GAAG,GAAG,GAAGA,EAAE;MACf,IAAIF,CAAC,KAAK,GAAG,EAAE;QACb,IAAI9F,CAAC,KAAK,GAAG,EACXoD,GAAG,GAAG,IAAI,GAAG0C,CAAC,GAAG,GAAG,GAAG9F,CAAC,GAAG,GAAG,GAAG+F,CAAC,GAAGC,EAAE,GACjC,IAAI,GAAGF,CAAC,GAAG,GAAG,GAAG9F,CAAC,GAAG,GAAG,IAAI,CAAC+F,CAAC,GAAG,CAAC,CAAC,CAAC,KAE1C3C,GAAG,GAAG,IAAI,GAAG0C,CAAC,GAAG,GAAG,GAAG9F,CAAC,GAAG,GAAG,GAAG+F,CAAC,GAAGC,EAAE,GACjC,IAAI,GAAGF,CAAC,GAAG,GAAG,IAAI,CAAC9F,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI;MAC1C,CAAC,MACCoD,GAAG,GAAG,IAAI,GAAG0C,CAAC,GAAG,GAAG,GAAG9F,CAAC,GAAG,GAAG,GAAG+F,CAAC,GAAGC,EAAE,GACjC,IAAI,IAAI,CAACF,CAAC,GAAG,CAAC,CAAC,GAAG,MAAM;IAClC,CAAC,MAAM;MACL9K,KAAK,CAAC,OAAO,CAAC;MACd,IAAI8K,CAAC,KAAK,GAAG,EAAE;QACb,IAAI9F,CAAC,KAAK,GAAG,EACXoD,GAAG,GAAG,IAAI,GAAG0C,CAAC,GAAG,GAAG,GAAG9F,CAAC,GAAG,GAAG,GAAG+F,CAAC,GAC5B,IAAI,GAAGD,CAAC,GAAG,GAAG,GAAG9F,CAAC,GAAG,GAAG,IAAI,CAAC+F,CAAC,GAAG,CAAC,CAAC,CAAC,KAE1C3C,GAAG,GAAG,IAAI,GAAG0C,CAAC,GAAG,GAAG,GAAG9F,CAAC,GAAG,GAAG,GAAG+F,CAAC,GAC5B,IAAI,GAAGD,CAAC,GAAG,GAAG,IAAI,CAAC9F,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI;MAC1C,CAAC,MACCoD,GAAG,GAAG,IAAI,GAAG0C,CAAC,GAAG,GAAG,GAAG9F,CAAC,GAAG,GAAG,GAAG+F,CAAC,GAC5B,IAAI,IAAI,CAACD,CAAC,GAAG,CAAC,CAAC,GAAG,MAAM;IAClC;IAEA9K,KAAK,CAAC,cAAc,EAAEoI,GAAG,CAAC;IAC1B,OAAOA,GAAG;EACZ,CAAC,CAAC;AACJ;AAEA,SAASoC,cAAc,CAAClC,IAAI,EAAEnE,OAAO,EAAE;EACrCnE,KAAK,CAAC,gBAAgB,EAAEsI,IAAI,EAAEnE,OAAO,CAAC;EACtC,OAAOmE,IAAI,CAAC/C,KAAK,CAAC,KAAK,CAAC,CAACC,GAAG,CAAC,UAAS8C,IAAI,EAAE;IAC1C,OAAO6C,aAAa,CAAC7C,IAAI,EAAEnE,OAAO,CAAC;EACrC,CAAC,CAAC,CAAC0B,IAAI,CAAC,GAAG,CAAC;AACd;AAEA,SAASsF,aAAa,CAAC7C,IAAI,EAAEnE,OAAO,EAAE;EACpCmE,IAAI,GAAGA,IAAI,CAACzD,IAAI,EAAE;EAClB,IAAI,CAACV,OAAO,IAAI,OAAOA,OAAO,KAAK,QAAQ,EACzCA,OAAO,GAAG;IAAEC,KAAK,EAAE,CAAC,CAACD,OAAO;IAAEE,iBAAiB,EAAE;EAAM,CAAC;EAC1D,IAAIE,CAAC,GAAGJ,OAAO,CAACC,KAAK,GAAGhD,EAAE,CAACwB,WAAW,CAAC,GAAGxB,EAAE,CAACuB,MAAM,CAAC;EACpD,OAAO2F,IAAI,CAACxD,OAAO,CAACP,CAAC,EAAE,UAAS6D,GAAG,EAAEgD,IAAI,EAAEN,CAAC,EAAE9F,CAAC,EAAE+F,CAAC,EAAEC,EAAE,EAAE;IACtDhL,KAAK,CAAC,QAAQ,EAAEsI,IAAI,EAAEF,GAAG,EAAEgD,IAAI,EAAEN,CAAC,EAAE9F,CAAC,EAAE+F,CAAC,EAAEC,EAAE,CAAC;IAC7C,IAAIK,EAAE,GAAGX,GAAG,CAACI,CAAC,CAAC;IACf,IAAIQ,EAAE,GAAGD,EAAE,IAAIX,GAAG,CAAC1F,CAAC,CAAC;IACrB,IAAIuG,EAAE,GAAGD,EAAE,IAAIZ,GAAG,CAACK,CAAC,CAAC;IACrB,IAAIS,IAAI,GAAGD,EAAE;IAEb,IAAIH,IAAI,KAAK,GAAG,IAAII,IAAI,EACtBJ,IAAI,GAAG,EAAE;IAEX,IAAIC,EAAE,EAAE;MACN,IAAID,IAAI,KAAK,GAAG,IAAIA,IAAI,KAAK,GAAG,EAAE;QAChC;QACAhD,GAAG,GAAG,QAAQ;MAChB,CAAC,MAAM;QACL;QACAA,GAAG,GAAG,GAAG;MACX;IACF,CAAC,MAAM,IAAIgD,IAAI,IAAII,IAAI,EAAE;MACvB;MACA,IAAIF,EAAE,EACJtG,CAAC,GAAG,CAAC;MACP,IAAIuG,EAAE,EACJR,CAAC,GAAG,CAAC;MAEP,IAAIK,IAAI,KAAK,GAAG,EAAE;QAChB;QACA;QACA;QACAA,IAAI,GAAG,IAAI;QACX,IAAIE,EAAE,EAAE;UACNR,CAAC,GAAG,CAACA,CAAC,GAAG,CAAC;UACV9F,CAAC,GAAG,CAAC;UACL+F,CAAC,GAAG,CAAC;QACP,CAAC,MAAM,IAAIQ,EAAE,EAAE;UACbvG,CAAC,GAAG,CAACA,CAAC,GAAG,CAAC;UACV+F,CAAC,GAAG,CAAC;QACP;MACF,CAAC,MAAM,IAAIK,IAAI,KAAK,IAAI,EAAE;QACxB;QACA;QACAA,IAAI,GAAG,GAAG;QACV,IAAIE,EAAE,EACJR,CAAC,GAAG,CAACA,CAAC,GAAG,CAAC,CAAC,KAEX9F,CAAC,GAAG,CAACA,CAAC,GAAG,CAAC;MACd;MAEAoD,GAAG,GAAGgD,IAAI,GAAGN,CAAC,GAAG,GAAG,GAAG9F,CAAC,GAAG,GAAG,GAAG+F,CAAC;IACpC,CAAC,MAAM,IAAIO,EAAE,EAAE;MACblD,GAAG,GAAG,IAAI,GAAG0C,CAAC,GAAG,QAAQ,IAAI,CAACA,CAAC,GAAG,CAAC,CAAC,GAAG,MAAM;IAC/C,CAAC,MAAM,IAAIS,EAAE,EAAE;MACbnD,GAAG,GAAG,IAAI,GAAG0C,CAAC,GAAG,GAAG,GAAG9F,CAAC,GAAG,MAAM,GAAG8F,CAAC,GAAG,GAAG,IAAI,CAAC9F,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI;IAC/D;IAEAhF,KAAK,CAAC,eAAe,EAAEoI,GAAG,CAAC;IAE3B,OAAOA,GAAG;EACZ,CAAC,CAAC;AACJ;;AAEA;AACA;AACA,SAASqC,YAAY,CAACnC,IAAI,EAAEnE,OAAO,EAAE;EACnCnE,KAAK,CAAC,cAAc,EAAEsI,IAAI,EAAEnE,OAAO,CAAC;EACpC;EACA,OAAOmE,IAAI,CAACzD,IAAI,EAAE,CAACC,OAAO,CAAC1D,EAAE,CAAC2C,IAAI,CAAC,EAAE,EAAE,CAAC;AAC1C;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS6F,aAAa,CAAC6B,EAAE,EACFC,IAAI,EAAEC,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAEC,GAAG,EAAEC,EAAE,EACzBC,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAEC,GAAG,EAAEC,EAAE,EAAE;EAE9C,IAAI3B,GAAG,CAACiB,EAAE,CAAC,EACTD,IAAI,GAAG,EAAE,CAAC,KACP,IAAIhB,GAAG,CAACkB,EAAE,CAAC,EACdF,IAAI,GAAG,IAAI,GAAGC,EAAE,GAAG,MAAM,CAAC,KACvB,IAAIjB,GAAG,CAACmB,EAAE,CAAC,EACdH,IAAI,GAAG,IAAI,GAAGC,EAAE,GAAG,GAAG,GAAGC,EAAE,GAAG,IAAI,CAAC,KAEnCF,IAAI,GAAG,IAAI,GAAGA,IAAI;EAEpB,IAAIhB,GAAG,CAACuB,EAAE,CAAC,EACTD,EAAE,GAAG,EAAE,CAAC,KACL,IAAItB,GAAG,CAACwB,EAAE,CAAC,EACdF,EAAE,GAAG,GAAG,IAAI,CAACC,EAAE,GAAG,CAAC,CAAC,GAAG,MAAM,CAAC,KAC3B,IAAIvB,GAAG,CAACyB,EAAE,CAAC,EACdH,EAAE,GAAG,GAAG,GAAGC,EAAE,GAAG,GAAG,IAAI,CAACC,EAAE,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,KACpC,IAAIE,GAAG,EACVJ,EAAE,GAAG,IAAI,GAAGC,EAAE,GAAG,GAAG,GAAGC,EAAE,GAAG,GAAG,GAAGC,EAAE,GAAG,GAAG,GAAGC,GAAG,CAAC,KAEjDJ,EAAE,GAAG,IAAI,GAAGA,EAAE;EAEhB,OAAO,CAACN,IAAI,GAAG,GAAG,GAAGM,EAAE,EAAEnH,IAAI,EAAE;AACjC;;AAGA;AACAgE,KAAK,CAACtI,SAAS,CAACH,IAAI,GAAG,UAAS8D,OAAO,EAAE;EACvC,IAAI,CAACA,OAAO,EACV,OAAO,KAAK;EAEd,IAAI,OAAOA,OAAO,KAAK,QAAQ,EAC7BA,OAAO,GAAG,IAAInE,MAAM,CAACmE,OAAO,EAAE,IAAI,CAACC,OAAO,CAAC;EAE7C,KAAK,IAAIH,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACsF,GAAG,CAAChF,MAAM,EAAEN,CAAC,EAAE,EAAE;IACxC,IAAIsI,OAAO,CAAC,IAAI,CAAChD,GAAG,CAACtF,CAAC,CAAC,EAAEE,OAAO,EAAE,IAAI,CAACC,OAAO,CAAC,EAC7C,OAAO,IAAI;EACf;EACA,OAAO,KAAK;AACd,CAAC;AAED,SAASmI,OAAO,CAAChD,GAAG,EAAEpF,OAAO,EAAEC,OAAO,EAAE;EACtC,KAAK,IAAIH,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGsF,GAAG,CAAChF,MAAM,EAAEN,CAAC,EAAE,EAAE;IACnC,IAAI,CAACsF,GAAG,CAACtF,CAAC,CAAC,CAAC5D,IAAI,CAAC8D,OAAO,CAAC,EACvB,OAAO,KAAK;EAChB;EAEA,IAAI,CAACC,OAAO,EACVA,OAAO,GAAG,CAAC,CAAC;EAEd,IAAID,OAAO,CAACoB,UAAU,CAAChB,MAAM,IAAI,CAACH,OAAO,CAACE,iBAAiB,EAAE;IAC3D;IACA;IACA;IACA;IACA;IACA,KAAK,IAAIL,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGsF,GAAG,CAAChF,MAAM,EAAEN,CAAC,EAAE,EAAE;MACnChE,KAAK,CAACsJ,GAAG,CAACtF,CAAC,CAAC,CAACwE,MAAM,CAAC;MACpB,IAAIc,GAAG,CAACtF,CAAC,CAAC,CAACwE,MAAM,KAAKC,GAAG,EACvB;MAEF,IAAIa,GAAG,CAACtF,CAAC,CAAC,CAACwE,MAAM,CAAClD,UAAU,CAAChB,MAAM,GAAG,CAAC,EAAE;QACvC,IAAIiI,OAAO,GAAGjD,GAAG,CAACtF,CAAC,CAAC,CAACwE,MAAM;QAC3B,IAAI+D,OAAO,CAACpH,KAAK,KAAKjB,OAAO,CAACiB,KAAK,IAC/BoH,OAAO,CAACnH,KAAK,KAAKlB,OAAO,CAACkB,KAAK,IAC/BmH,OAAO,CAAClH,KAAK,KAAKnB,OAAO,CAACmB,KAAK,EACjC,OAAO,IAAI;MACf;IACF;;IAEA;IACA,OAAO,KAAK;EACd;EAEA,OAAO,IAAI;AACb;AAEAxF,OAAO,CAACiJ,SAAS,GAAGA,SAAS;AAC7B,SAASA,SAAS,CAAC5E,OAAO,EAAEmF,KAAK,EAAElF,OAAO,EAAE;EAC1C,IAAI;IACFkF,KAAK,GAAG,IAAIR,KAAK,CAACQ,KAAK,EAAElF,OAAO,CAAC;EACnC,CAAC,CAAC,OAAOK,EAAE,EAAE;IACX,OAAO,KAAK;EACd;EACA,OAAO6E,KAAK,CAACjJ,IAAI,CAAC8D,OAAO,CAAC;AAC5B;AAEArE,OAAO,CAAC2M,aAAa,GAAGA,aAAa;AACrC,SAASA,aAAa,CAACC,QAAQ,EAAEpD,KAAK,EAAElF,OAAO,EAAE;EAC/C,IAAIuI,GAAG,GAAG,IAAI;EACd,IAAIC,KAAK,GAAG,IAAI;EAChB,IAAI;IACF,IAAIC,QAAQ,GAAG,IAAI/D,KAAK,CAACQ,KAAK,EAAElF,OAAO,CAAC;EAC1C,CAAC,CAAC,OAAOK,EAAE,EAAE;IACX,OAAO,IAAI;EACb;EACAiI,QAAQ,CAACI,OAAO,CAAC,UAAUnI,CAAC,EAAE;IAC5B,IAAIkI,QAAQ,CAACxM,IAAI,CAACsE,CAAC,CAAC,EAAE;MAAE;MACtB,IAAI,CAACgI,GAAG,IAAIC,KAAK,CAAC5G,OAAO,CAACrB,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE;QAAE;QACrCgI,GAAG,GAAGhI,CAAC;QACPiI,KAAK,GAAG,IAAI5M,MAAM,CAAC2M,GAAG,EAAEvI,OAAO,CAAC;MAClC;IACF;EACF,CAAC,CAAC;EACF,OAAOuI,GAAG;AACZ;AAEA7M,OAAO,CAACiN,aAAa,GAAGA,aAAa;AACrC,SAASA,aAAa,CAACL,QAAQ,EAAEpD,KAAK,EAAElF,OAAO,EAAE;EAC/C,IAAI4I,GAAG,GAAG,IAAI;EACd,IAAIC,KAAK,GAAG,IAAI;EAChB,IAAI;IACF,IAAIJ,QAAQ,GAAG,IAAI/D,KAAK,CAACQ,KAAK,EAAElF,OAAO,CAAC;EAC1C,CAAC,CAAC,OAAOK,EAAE,EAAE;IACX,OAAO,IAAI;EACb;EACAiI,QAAQ,CAACI,OAAO,CAAC,UAAUnI,CAAC,EAAE;IAC5B,IAAIkI,QAAQ,CAACxM,IAAI,CAACsE,CAAC,CAAC,EAAE;MAAE;MACtB,IAAI,CAACqI,GAAG,IAAIC,KAAK,CAACjH,OAAO,CAACrB,CAAC,CAAC,KAAK,CAAC,EAAE;QAAE;QACpCqI,GAAG,GAAGrI,CAAC;QACPsI,KAAK,GAAG,IAAIjN,MAAM,CAACgN,GAAG,EAAE5I,OAAO,CAAC;MAClC;IACF;EACF,CAAC,CAAC;EACF,OAAO4I,GAAG;AACZ;AAEAlN,OAAO,CAACoN,UAAU,GAAGA,UAAU;AAC/B,SAASA,UAAU,CAAC5D,KAAK,EAAElF,OAAO,EAAE;EAClC,IAAI;IACF;IACA;IACA,OAAO,IAAI0E,KAAK,CAACQ,KAAK,EAAElF,OAAO,CAAC,CAACkF,KAAK,IAAI,GAAG;EAC/C,CAAC,CAAC,OAAO7E,EAAE,EAAE;IACX,OAAO,IAAI;EACb;AACF;;AAEA;AACA3E,OAAO,CAACqN,GAAG,GAAGA,GAAG;AACjB,SAASA,GAAG,CAAChJ,OAAO,EAAEmF,KAAK,EAAElF,OAAO,EAAE;EACpC,OAAOgJ,OAAO,CAACjJ,OAAO,EAAEmF,KAAK,EAAE,GAAG,EAAElF,OAAO,CAAC;AAC9C;;AAEA;AACAtE,OAAO,CAACuN,GAAG,GAAGA,GAAG;AACjB,SAASA,GAAG,CAAClJ,OAAO,EAAEmF,KAAK,EAAElF,OAAO,EAAE;EACpC,OAAOgJ,OAAO,CAACjJ,OAAO,EAAEmF,KAAK,EAAE,GAAG,EAAElF,OAAO,CAAC;AAC9C;AAEAtE,OAAO,CAACsN,OAAO,GAAGA,OAAO;AACzB,SAASA,OAAO,CAACjJ,OAAO,EAAEmF,KAAK,EAAEgE,IAAI,EAAElJ,OAAO,EAAE;EAC9CD,OAAO,GAAG,IAAInE,MAAM,CAACmE,OAAO,EAAEC,OAAO,CAAC;EACtCkF,KAAK,GAAG,IAAIR,KAAK,CAACQ,KAAK,EAAElF,OAAO,CAAC;EAEjC,IAAImJ,IAAI,EAAEC,KAAK,EAAEC,IAAI,EAAElF,IAAI,EAAEmF,KAAK;EAClC,QAAQJ,IAAI;IACV,KAAK,GAAG;MACNC,IAAI,GAAGzF,EAAE;MACT0F,KAAK,GAAGtF,GAAG;MACXuF,IAAI,GAAG1F,EAAE;MACTQ,IAAI,GAAG,GAAG;MACVmF,KAAK,GAAG,IAAI;MACZ;IACF,KAAK,GAAG;MACNH,IAAI,GAAGxF,EAAE;MACTyF,KAAK,GAAGvF,GAAG;MACXwF,IAAI,GAAG3F,EAAE;MACTS,IAAI,GAAG,GAAG;MACVmF,KAAK,GAAG,IAAI;MACZ;IACF;MACE,MAAM,IAAI1I,SAAS,CAAC,uCAAuC,CAAC;EAAC;;EAGjE;EACA,IAAI+D,SAAS,CAAC5E,OAAO,EAAEmF,KAAK,EAAElF,OAAO,CAAC,EAAE;IACtC,OAAO,KAAK;EACd;;EAEA;EACA;;EAEA,KAAK,IAAIH,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGqF,KAAK,CAACC,GAAG,CAAChF,MAAM,EAAE,EAAEN,CAAC,EAAE;IACzC,IAAI0J,WAAW,GAAGrE,KAAK,CAACC,GAAG,CAACtF,CAAC,CAAC;IAE9B,IAAI2J,IAAI,GAAG,IAAI;IACf,IAAIC,GAAG,GAAG,IAAI;IAEdF,WAAW,CAACb,OAAO,CAAC,UAASgB,UAAU,EAAE;MACvC,IAAIA,UAAU,CAACrF,MAAM,KAAKC,GAAG,EAAE;QAC7BoF,UAAU,GAAG,IAAIxF,UAAU,CAAC,SAAS,CAAC;MACxC;MACAsF,IAAI,GAAGA,IAAI,IAAIE,UAAU;MACzBD,GAAG,GAAGA,GAAG,IAAIC,UAAU;MACvB,IAAIP,IAAI,CAACO,UAAU,CAACrF,MAAM,EAAEmF,IAAI,CAACnF,MAAM,EAAErE,OAAO,CAAC,EAAE;QACjDwJ,IAAI,GAAGE,UAAU;MACnB,CAAC,MAAM,IAAIL,IAAI,CAACK,UAAU,CAACrF,MAAM,EAAEoF,GAAG,CAACpF,MAAM,EAAErE,OAAO,CAAC,EAAE;QACvDyJ,GAAG,GAAGC,UAAU;MAClB;IACF,CAAC,CAAC;;IAEF;IACA;IACA,IAAIF,IAAI,CAACjF,QAAQ,KAAKJ,IAAI,IAAIqF,IAAI,CAACjF,QAAQ,KAAK+E,KAAK,EAAE;MACrD,OAAO,KAAK;IACd;;IAEA;IACA;IACA,IAAI,CAAC,CAACG,GAAG,CAAClF,QAAQ,IAAIkF,GAAG,CAAClF,QAAQ,KAAKJ,IAAI,KACvCiF,KAAK,CAACrJ,OAAO,EAAE0J,GAAG,CAACpF,MAAM,CAAC,EAAE;MAC9B,OAAO,KAAK;IACd,CAAC,MAAM,IAAIoF,GAAG,CAAClF,QAAQ,KAAK+E,KAAK,IAAID,IAAI,CAACtJ,OAAO,EAAE0J,GAAG,CAACpF,MAAM,CAAC,EAAE;MAC9D,OAAO,KAAK;IACd;EACF;EACA,OAAO,IAAI;AACb;AAEA3I,OAAO,CAACyF,UAAU,GAAGA,UAAU;AAC/B,SAASA,UAAU,CAACpB,OAAO,EAAEC,OAAO,EAAE;EACpC,IAAI2J,MAAM,GAAG7J,KAAK,CAACC,OAAO,EAAEC,OAAO,CAAC;EACpC,OAAQ2J,MAAM,IAAIA,MAAM,CAACxI,UAAU,CAAChB,MAAM,GAAIwJ,MAAM,CAACxI,UAAU,GAAG,IAAI;AACxE;AAEAzF,OAAO,CAAC8I,UAAU,GAAGA,UAAU;AAC/B,SAASA,UAAU,CAACoF,EAAE,EAAEC,EAAE,EAAE7J,OAAO,EAAE;EACnC4J,EAAE,GAAG,IAAIlF,KAAK,CAACkF,EAAE,EAAE5J,OAAO,CAAC;EAC3B6J,EAAE,GAAG,IAAInF,KAAK,CAACmF,EAAE,EAAE7J,OAAO,CAAC;EAC3B,OAAO4J,EAAE,CAACpF,UAAU,CAACqF,EAAE,CAAC;AAC1B;AAEAnO,OAAO,CAACoO,MAAM,GAAGA,MAAM;AACvB,SAASA,MAAM,CAAC/J,OAAO,EAAE;EACvB,IAAIA,OAAO,YAAYnE,MAAM,EAC3B,OAAOmE,OAAO;EAEhB,IAAI,OAAOA,OAAO,KAAK,QAAQ,EAC7B,OAAO,IAAI;EAEb,IAAIe,KAAK,GAAGf,OAAO,CAACe,KAAK,CAAC7D,EAAE,CAACyB,MAAM,CAAC,CAAC;EAErC,IAAIoC,KAAK,IAAI,IAAI,EACf,OAAO,IAAI;EAEb,OAAOhB,KAAK,CAAC,CAACgB,KAAK,CAAC,CAAC,CAAC,IAAI,GAAG,IAAI,GAAG,IAAIA,KAAK,CAAC,CAAC,CAAC,IAAI,GAAG,CAAC,GAAG,GAAG,IAAIA,KAAK,CAAC,CAAC,CAAC,IAAI,GAAG,CAAC,CAAC;AACrF"},"metadata":{},"sourceType":"script"}