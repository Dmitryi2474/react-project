{"ast":null,"code":"\"use strict\";\n\nvar config = require(\"../config\");\nvar logger = require(\"../logger\").logger;\nvar fs = require(\"fs\");\nvar _ = require(\"../lodash.custom\");\nvar path = require(\"path\");\nvar info = {\n  /**\n   * Version info\n   * @param {Object} pjson\n   * @returns {String}\n   */\n  getVersion: function (pjson) {\n    console.log(pjson.version);\n    return pjson.version;\n  },\n  /**\n   * Retrieve the config file\n   * @returns {*}\n   * @private\n   * @param filePath\n   */\n  getConfigFile: function (filePath) {\n    return require(path.resolve(filePath));\n  },\n  /**\n   * Generate an example Config file.\n   */\n  makeConfig: function (cwd, cb) {\n    var opts = require(path.join(__dirname, \"..\", config.configFile));\n    var userOpts = {};\n    var ignore = [\"excludedFileTypes\", \"injectFileTypes\", \"snippetOptions\"];\n    Object.keys(opts).forEach(function (key) {\n      if (!_.includes(ignore, key)) {\n        userOpts[key] = opts[key];\n      }\n    });\n    var file = fs.readFileSync(config.template, \"utf8\");\n    file = file.replace(\"//OPTS\", JSON.stringify(userOpts, null, 4));\n    fs.writeFile(path.resolve(cwd, config.userFile), file, function () {\n      logger.info(\"Config file created {magenta:%s}\", config.userFile);\n      logger.info(\"To use it, in the same directory run: \" + \"{cyan:browser-sync start --config bs-config.js}\");\n      cb();\n    });\n  }\n};\nmodule.exports = info;","map":{"version":3,"mappings":"AAAA,YAAY;;AAEZ,IAAIA,MAAM,GAAGC,OAAO,CAAC,WAAW,CAAC;AACjC,IAAIC,MAAM,GAAGD,OAAO,CAAC,WAAW,CAAC,CAACC,MAAM;AAExC,IAAIC,EAAE,GAAGF,OAAO,CAAC,IAAI,CAAC;AACtB,IAAIG,CAAC,GAAGH,OAAO,CAAC,kBAAkB,CAAC;AACnC,IAAII,IAAI,GAAGJ,OAAO,CAAC,MAAM,CAAC;AAE1B,IAAIK,IAAI,GAAG;EACP;;;;;EAKAC,UAAU,EAAE,UAASC,KAAK;IACtBC,OAAO,CAACC,GAAG,CAACF,KAAK,CAACG,OAAO,CAAC;IAC1B,OAAOH,KAAK,CAACG,OAAO;EACxB,CAAC;EACD;;;;;;EAMAC,aAAa,EAAE,UAASC,QAAQ;IAC5B,OAAOZ,OAAO,CAACI,IAAI,CAACS,OAAO,CAACD,QAAQ,CAAC,CAAC;EAC1C,CAAC;EACD;;;EAGAE,UAAU,EAAE,UAASC,GAAG,EAAEC,EAAE;IACxB,IAAIC,IAAI,GAAGjB,OAAO,CAACI,IAAI,CAACc,IAAI,CAACC,SAAS,EAAE,IAAI,EAAEpB,MAAM,CAACqB,UAAU,CAAC,CAAC;IACjE,IAAIC,QAAQ,GAAG,EAAE;IAEjB,IAAIC,MAAM,GAAG,CAAC,mBAAmB,EAAE,iBAAiB,EAAE,gBAAgB,CAAC;IAEvEC,MAAM,CAACC,IAAI,CAACP,IAAI,CAAC,CAACQ,OAAO,CAAC,UAASC,GAAG;MAClC,IAAI,CAACvB,CAAC,CAACwB,QAAQ,CAACL,MAAM,EAAEI,GAAG,CAAC,EAAE;QAC1BL,QAAQ,CAACK,GAAG,CAAC,GAAGT,IAAI,CAACS,GAAG,CAAC;;IAEjC,CAAC,CAAC;IAEF,IAAIE,IAAI,GAAG1B,EAAE,CAAC2B,YAAY,CAAC9B,MAAM,CAAC+B,QAAQ,EAAE,MAAM,CAAC;IACnDF,IAAI,GAAGA,IAAI,CAACG,OAAO,CAAC,QAAQ,EAAEC,IAAI,CAACC,SAAS,CAACZ,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC;IAEhEnB,EAAE,CAACgC,SAAS,CAAC9B,IAAI,CAACS,OAAO,CAACE,GAAG,EAAEhB,MAAM,CAACoC,QAAQ,CAAC,EAAEP,IAAI,EAAE;MACnD3B,MAAM,CAACI,IAAI,CAAC,kCAAkC,EAAEN,MAAM,CAACoC,QAAQ,CAAC;MAChElC,MAAM,CAACI,IAAI,CACP,wCAAwC,GACpC,iDAAiD,CACxD;MACDW,EAAE,EAAE;IACR,CAAC,CAAC;EACN;CACH;AAEDoB,MAAM,CAACC,OAAO,GAAGhC,IAAI","names":["config","require","logger","fs","_","path","info","getVersion","pjson","console","log","version","getConfigFile","filePath","resolve","makeConfig","cwd","cb","opts","join","__dirname","configFile","userOpts","ignore","Object","keys","forEach","key","includes","file","readFileSync","template","replace","JSON","stringify","writeFile","userFile","module","exports"],"sources":["../../lib/cli/cli-info.js"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}