{"ast":null,"code":"'use strict';\n\nvar path = require('path');\nvar pathExists = require('path-exists');\nvar Promise = require('pinkie-promise');\nfunction splitPath(x) {\n  return path.resolve(x || '').split(path.sep);\n}\nfunction join(parts, filename) {\n  return path.resolve(parts.join(path.sep) + path.sep, filename);\n}\nmodule.exports = function (filename, opts) {\n  opts = opts || {};\n  var parts = splitPath(opts.cwd);\n  return new Promise(function (resolve) {\n    (function find() {\n      var fp = join(parts, filename);\n      pathExists(fp).then(function (exists) {\n        if (exists) {\n          resolve(fp);\n        } else if (parts.pop()) {\n          find();\n        } else {\n          resolve(null);\n        }\n      });\n    })();\n  });\n};\nmodule.exports.sync = function (filename, opts) {\n  opts = opts || {};\n  var parts = splitPath(opts.cwd);\n  var len = parts.length;\n  while (len--) {\n    var fp = join(parts, filename);\n    if (pathExists.sync(fp)) {\n      return fp;\n    }\n    parts.pop();\n  }\n  return null;\n};","map":{"version":3,"names":["path","require","pathExists","Promise","splitPath","x","resolve","split","sep","join","parts","filename","module","exports","opts","cwd","find","fp","then","exists","pop","sync","len","length"],"sources":["/home/user/Рабочий стол/pizza/project/node_modules/find-up/index.js"],"sourcesContent":["'use strict';\nvar path = require('path');\nvar pathExists = require('path-exists');\nvar Promise = require('pinkie-promise');\n\nfunction splitPath(x) {\n\treturn path.resolve(x || '').split(path.sep);\n}\n\nfunction join(parts, filename) {\n\treturn path.resolve(parts.join(path.sep) + path.sep, filename);\n}\n\nmodule.exports = function (filename, opts) {\n\topts = opts || {};\n\n\tvar parts = splitPath(opts.cwd);\n\n\treturn new Promise(function (resolve) {\n\t\t(function find() {\n\t\t\tvar fp = join(parts, filename);\n\n\t\t\tpathExists(fp).then(function (exists) {\n\t\t\t\tif (exists) {\n\t\t\t\t\tresolve(fp);\n\t\t\t\t} else if (parts.pop()) {\n\t\t\t\t\tfind();\n\t\t\t\t} else {\n\t\t\t\t\tresolve(null);\n\t\t\t\t}\n\t\t\t});\n\t\t})();\n\t});\n};\n\nmodule.exports.sync = function (filename, opts) {\n\topts = opts || {};\n\n\tvar parts = splitPath(opts.cwd);\n\tvar len = parts.length;\n\n\twhile (len--) {\n\t\tvar fp = join(parts, filename);\n\n\t\tif (pathExists.sync(fp)) {\n\t\t\treturn fp;\n\t\t}\n\n\t\tparts.pop();\n\t}\n\n\treturn null;\n};\n"],"mappings":"AAAA,YAAY;;AACZ,IAAIA,IAAI,GAAGC,OAAO,CAAC,MAAM,CAAC;AAC1B,IAAIC,UAAU,GAAGD,OAAO,CAAC,aAAa,CAAC;AACvC,IAAIE,OAAO,GAAGF,OAAO,CAAC,gBAAgB,CAAC;AAEvC,SAASG,SAAS,CAACC,CAAC,EAAE;EACrB,OAAOL,IAAI,CAACM,OAAO,CAACD,CAAC,IAAI,EAAE,CAAC,CAACE,KAAK,CAACP,IAAI,CAACQ,GAAG,CAAC;AAC7C;AAEA,SAASC,IAAI,CAACC,KAAK,EAAEC,QAAQ,EAAE;EAC9B,OAAOX,IAAI,CAACM,OAAO,CAACI,KAAK,CAACD,IAAI,CAACT,IAAI,CAACQ,GAAG,CAAC,GAAGR,IAAI,CAACQ,GAAG,EAAEG,QAAQ,CAAC;AAC/D;AAEAC,MAAM,CAACC,OAAO,GAAG,UAAUF,QAAQ,EAAEG,IAAI,EAAE;EAC1CA,IAAI,GAAGA,IAAI,IAAI,CAAC,CAAC;EAEjB,IAAIJ,KAAK,GAAGN,SAAS,CAACU,IAAI,CAACC,GAAG,CAAC;EAE/B,OAAO,IAAIZ,OAAO,CAAC,UAAUG,OAAO,EAAE;IACrC,CAAC,SAASU,IAAI,GAAG;MAChB,IAAIC,EAAE,GAAGR,IAAI,CAACC,KAAK,EAAEC,QAAQ,CAAC;MAE9BT,UAAU,CAACe,EAAE,CAAC,CAACC,IAAI,CAAC,UAAUC,MAAM,EAAE;QACrC,IAAIA,MAAM,EAAE;UACXb,OAAO,CAACW,EAAE,CAAC;QACZ,CAAC,MAAM,IAAIP,KAAK,CAACU,GAAG,EAAE,EAAE;UACvBJ,IAAI,EAAE;QACP,CAAC,MAAM;UACNV,OAAO,CAAC,IAAI,CAAC;QACd;MACD,CAAC,CAAC;IACH,CAAC,GAAG;EACL,CAAC,CAAC;AACH,CAAC;AAEDM,MAAM,CAACC,OAAO,CAACQ,IAAI,GAAG,UAAUV,QAAQ,EAAEG,IAAI,EAAE;EAC/CA,IAAI,GAAGA,IAAI,IAAI,CAAC,CAAC;EAEjB,IAAIJ,KAAK,GAAGN,SAAS,CAACU,IAAI,CAACC,GAAG,CAAC;EAC/B,IAAIO,GAAG,GAAGZ,KAAK,CAACa,MAAM;EAEtB,OAAOD,GAAG,EAAE,EAAE;IACb,IAAIL,EAAE,GAAGR,IAAI,CAACC,KAAK,EAAEC,QAAQ,CAAC;IAE9B,IAAIT,UAAU,CAACmB,IAAI,CAACJ,EAAE,CAAC,EAAE;MACxB,OAAOA,EAAE;IACV;IAEAP,KAAK,CAACU,GAAG,EAAE;EACZ;EAEA,OAAO,IAAI;AACZ,CAAC"},"metadata":{},"sourceType":"script"}