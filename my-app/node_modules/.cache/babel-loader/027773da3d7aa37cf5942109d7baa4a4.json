{"ast":null,"code":"'use strict';\n\nconst Namespace = require('./namespace');\nlet count = 0;\nclass ParentNamespace extends Namespace {\n  constructor(server) {\n    super(server, '/_' + count++);\n    this.children = new Set();\n  }\n  initAdapter() {}\n  emit() {\n    const args = Array.prototype.slice.call(arguments);\n    this.children.forEach(nsp => {\n      nsp.rooms = this.rooms;\n      nsp.flags = this.flags;\n      nsp.emit.apply(nsp, args);\n    });\n    this.rooms = [];\n    this.flags = {};\n  }\n  createChild(name) {\n    const namespace = new Namespace(this.server, name);\n    namespace.fns = this.fns.slice(0);\n    this.listeners('connect').forEach(listener => namespace.on('connect', listener));\n    this.listeners('connection').forEach(listener => namespace.on('connection', listener));\n    this.children.add(namespace);\n    this.server.nsps[name] = namespace;\n    return namespace;\n  }\n}\nmodule.exports = ParentNamespace;","map":{"version":3,"names":["Namespace","require","count","ParentNamespace","constructor","server","children","Set","initAdapter","emit","args","Array","prototype","slice","call","arguments","forEach","nsp","rooms","flags","apply","createChild","name","namespace","fns","listeners","listener","on","add","nsps","module","exports"],"sources":["/home/user/Рабочий стол/pizza/project/node_modules/socket.io/lib/parent-namespace.js"],"sourcesContent":["'use strict';\n\nconst Namespace = require('./namespace');\n\nlet count = 0;\n\nclass ParentNamespace extends Namespace {\n\n  constructor(server) {\n    super(server, '/_' + (count++));\n    this.children = new Set();\n  }\n\n  initAdapter() {}\n\n  emit() {\n    const args = Array.prototype.slice.call(arguments);\n\n    this.children.forEach(nsp => {\n      nsp.rooms = this.rooms;\n      nsp.flags = this.flags;\n      nsp.emit.apply(nsp, args);\n    });\n    this.rooms = [];\n    this.flags = {};\n  }\n\n  createChild(name) {\n    const namespace = new Namespace(this.server, name);\n    namespace.fns = this.fns.slice(0);\n    this.listeners('connect').forEach(listener => namespace.on('connect', listener));\n    this.listeners('connection').forEach(listener => namespace.on('connection', listener));\n    this.children.add(namespace);\n    this.server.nsps[name] = namespace;\n    return namespace;\n  }\n}\n\nmodule.exports = ParentNamespace;\n"],"mappings":"AAAA,YAAY;;AAEZ,MAAMA,SAAS,GAAGC,OAAO,CAAC,aAAa,CAAC;AAExC,IAAIC,KAAK,GAAG,CAAC;AAEb,MAAMC,eAAe,SAASH,SAAS,CAAC;EAEtCI,WAAW,CAACC,MAAM,EAAE;IAClB,KAAK,CAACA,MAAM,EAAE,IAAI,GAAIH,KAAK,EAAG,CAAC;IAC/B,IAAI,CAACI,QAAQ,GAAG,IAAIC,GAAG,EAAE;EAC3B;EAEAC,WAAW,GAAG,CAAC;EAEfC,IAAI,GAAG;IACL,MAAMC,IAAI,GAAGC,KAAK,CAACC,SAAS,CAACC,KAAK,CAACC,IAAI,CAACC,SAAS,CAAC;IAElD,IAAI,CAACT,QAAQ,CAACU,OAAO,CAACC,GAAG,IAAI;MAC3BA,GAAG,CAACC,KAAK,GAAG,IAAI,CAACA,KAAK;MACtBD,GAAG,CAACE,KAAK,GAAG,IAAI,CAACA,KAAK;MACtBF,GAAG,CAACR,IAAI,CAACW,KAAK,CAACH,GAAG,EAAEP,IAAI,CAAC;IAC3B,CAAC,CAAC;IACF,IAAI,CAACQ,KAAK,GAAG,EAAE;IACf,IAAI,CAACC,KAAK,GAAG,CAAC,CAAC;EACjB;EAEAE,WAAW,CAACC,IAAI,EAAE;IAChB,MAAMC,SAAS,GAAG,IAAIvB,SAAS,CAAC,IAAI,CAACK,MAAM,EAAEiB,IAAI,CAAC;IAClDC,SAAS,CAACC,GAAG,GAAG,IAAI,CAACA,GAAG,CAACX,KAAK,CAAC,CAAC,CAAC;IACjC,IAAI,CAACY,SAAS,CAAC,SAAS,CAAC,CAACT,OAAO,CAACU,QAAQ,IAAIH,SAAS,CAACI,EAAE,CAAC,SAAS,EAAED,QAAQ,CAAC,CAAC;IAChF,IAAI,CAACD,SAAS,CAAC,YAAY,CAAC,CAACT,OAAO,CAACU,QAAQ,IAAIH,SAAS,CAACI,EAAE,CAAC,YAAY,EAAED,QAAQ,CAAC,CAAC;IACtF,IAAI,CAACpB,QAAQ,CAACsB,GAAG,CAACL,SAAS,CAAC;IAC5B,IAAI,CAAClB,MAAM,CAACwB,IAAI,CAACP,IAAI,CAAC,GAAGC,SAAS;IAClC,OAAOA,SAAS;EAClB;AACF;AAEAO,MAAM,CAACC,OAAO,GAAG5B,eAAe"},"metadata":{},"sourceType":"script"}